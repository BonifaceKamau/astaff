@model IList<DynamicsNAV365_StaffPortal.Models.ProjectManagement.ProjectTasksModel>

@{
    ViewBag.Title = "Manage Project";}
<!--Render Human Resource Sidebar-->
@{Html.RenderAction("_ProjectManagementSidebar", "ProjectHome");}
<aside class="right-side">
    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header" data-background-color="company_card">
                        <div class="row">
                            <div class="col-md-4">
                                <h4 class="title" style="text-align:center">Manage View</h4>   
                            </div>     
                                           
                            <div class="col-md-2">
                                <a href="" class="btn btn-success btn-xs pull-right"  onclick="return BeginProject();"><b> Begin Project</b></a>                                                              
                            </div>                           
                            <div class="col-md-2">
                                <a href="" class="btn btn-warning btn-xs pull-right" onclick="return CancelProject();"><b> CancelProject</b></a>
                            </div>
                         
                            <div class="col-md-2">
                                @{ string closureUrl = Url.Action("CloseProject", "Projects") + "?ProjectNo=" + @ViewBag.ManagerProjectNumber; }
                                <a href="@closureUrl" class="btn btn-success btn-xs pull-right"><b>Project Closure</b></a>
                            </div>
                            @*<div class="col-md-2">
                                <a href="" class="btn btn-success btn-xs pull-right" onclick="return CompleteProject();"><b>Project Closure</b></a>
                            </div>*@
                            <div class="col-md-2">
                                <a class="btn btn-danger btn-xs pull-right" href="@Url.Action("ProjectInfo", "ProjectHome")">
                                    <strong style="color:white">
                                        <i class=""></i>
                                        Close View
                                    </strong>
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="card-content">
                        <div class="row">
                            <input id="ProjectNoItem" value="@TempData["ManagerProjectNo"]" hidden="hidden">     
                            <div class="col-md-12">
                                <div class="row">
                                    <div class="col-lg-3">
                                        @{ string addtaskUrl = Url.Action("AddProjectTask", "Projects") + "?ProjectNo=" + @ViewBag.ManagerProjectNumber; }
                                        <a class="btn btn-info btn-xs pull-left" href="@addtaskUrl">
                                            <strong style="color:white">
                                                <i class=""></i>
                                                Add Project Task
                                            </strong>
                                        </a>
                                    </div>
                                    <div class="col-lg-3">
                                        <a class="btn btn-sm pull-left" style="background-color:white;">
                                            <strong style="color:black;">
                                                <i class=""></i>
                                                Project Status:  @ViewBag.ProjectStatus
                                            </strong>
                                        </a>
                                    </div>
                                    <div class="col-lg-6">
                                        @{

                                            var dataone = TempData["success"];
                                            var failed = TempData["failed"];
                                            var saved = TempData["saved"];
                                        }
                                        @if (dataone != null)
                                        {
                                            <a class="btn btn-sm" id="successalert" style="background-color:#d4edda; color:#155724; text-transform:lowercase;">
                                                <strong style="color:black;">
                                                    <i class=""></i>
                                                    @dataone
                                                </strong>
                                            </a>


                                        }
                                        @if (saved != null)
                                        {
                                            <a class="btn btn-sm" id="successalert" style="background-color:#d4edda; color:#155724; text-transform:lowercase;">
                                                <strong style="color:black;">
                                                    <i class=""></i>
                                                    @saved
                                                </strong>
                                            </a>


                                        }
                                        @if (failed != null)
                                        {
                                            <a class="btn btn-sm" id="successalert" style="background-color:#f8d7da; color:#721c24; text-transform:lowercase;">
                                                <strong style="color:black;">
                                                    <i class=""></i>
                                                    @failed
                                                </strong>
                                            </a>


                                        }

                                    </div>
                                </div>

                                <div class="col-lg-12">
                                <table id="ProjectsBenefits" class="table table-condensed">
                                    <tr>
                                        @*<p>Project Title : @ViewBag.ProjectTitle</p>*@
                                        @*<p>Your Role: @ViewBag.YourRole</p>*@
                                    <tr>
                                    <thead class="text-primary">
                                        <tr>
                                            <th>Assigned To</th>
                                            <th>Task Description/Title</th>
                                            <th>Assigned On</th>
                                            <th>Expected Completion Date</th>
                                            <th>Completion Date</th>
                                            <th>Time Taken</th>
                                            <th>Completed?</th>                                          
                                            <th>Confirmed Completed?</th>
                                            <th>Task Sent ?</th>
                                            <th>File</th>
                                            <th>PM Remarks</th>
                                            <th>&nbsp;</th>
                                            <th>&nbsp;</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            string editUrl = "";
                                            string deleteUrl = "";
                                            string taskfileUrl = "";
                                            //string approverUrl = "";
                                            for (int i = 0; i < Model.Count; i++)
                                            {

                                                editUrl = Url.Action("EditTaskManager", "Projects") + "?LineNo=" + Model[i].LineNo;
                                                deleteUrl = Url.Action("DeleteProjectTask", "Projects") + "?LineNo=" + Model[i].LineNo;
                                                taskfileUrl = Url.Action("DownloadTaskFile", "Projects") + "?FileName=" + Model[i].FileName;

                                                <tr>
                                                    <td>@Model[i].ResourceNo</td>
                                                    <td>@Model[i].TaskDescription</td>
                                                    <td>@Model[i].AssignDate</td>
                                                    <td>@Model[i].ExpectedCompletionDate.ToString("d")</td>
                                                    @{if (@Model[i].CompletionDate == "01/01/0001")
                                                    {
                                                            <td>-------</td>

                                                        }
                                                    else
                                                    {
                                                        <td>@Model[i].CompletionDate</td>
                                                        }
                                                }

                                                    <td>@Model[i].DurationTaken</td>
                                                    @{
                                                    if (@Model[i].MarkCompleted == true)
                                                    {
                                                            <td style="color:darkblue;text-align:center;">@Html.CheckBox("isActive", true, new { @onclick = "return false" })</td>
                                                        }
                                                    else
                                                    {
                                                            <td style="color:darkblue;text-align:center">@Html.CheckBox("isActive", false, new { @onclick = "return false" })</td>
                                                        }
                                                    if (@Model[i].ConfirmCompleted == true)
                                                    {
                                                            <td style="color:darkblue;text-align:center">@Html.CheckBox("isActive", true, new { @onclick = "return false" })</td>
                                                        }
                                                    else
                                                    {
                                                            <td style="color:darkblue;text-align:center">@Html.CheckBox("isActive", false, new { @onclick = "return false" })</td>
                                                        }
                                                    if (@Model[i].TaskSent == true)
                                                    {
                                                            <td style="color:darkblue;text-align:center">@Html.CheckBox("isActive", true, new { @onclick = "return false" })</td>
                                                        }
                                                    else
                                                    {
                                                            <td style="color:darkblue;text-align:center">@Html.CheckBox("isActive", false, new { @onclick = "return false" })</td>
                                                        }
                                                }

                                                    @*<td>@Model[i].OnlineFile</td> --- Path    <td>@Model[i].FileName</td> --- FileName*@
                                                    @{
                                                        if (@Model[i].FileAttached == true)
                                                        {
                                                            <td>                                                               
                                                                <a href="@taskfileUrl" class="fa fa-file-pdf-o" style="color:red;font-size:19px"></a>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td>----</td>
                                                        }
                                                    }

                                                    <td>@Model[i].PMRemarks</td>

                                                    <td>
                                                        <a href="@editUrl" class=""><b>Edit</b></a>
                                                    </td>
                                                    <td>
                                                        <a href="" onclick="return DeleteManagerTaskLine(@Model[i].LineNo);"><b>Delete</b></a>
                                                        @*<a href="@deleteUrl" class=""><b>Delete</b></a>*@
                                                    </td>
                                                </tr>
                                                        }
                                        }
                                    </tbody>
                                </table>
                                    </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                    </div>
                </div>
            </div>
        </div>
    </section>
</aside>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $('#ProjectsBenefitsTbl').DataTable({
                order: [[2, 'asc']],
                rowGroup: {
                    dataSrc: 2
                }
            });
        });
    </script>
}

<script>
$(document).ready(function () {
window.setTimeout(function() {
    $("#successalert").fadeTo(300, 0).slideUp(300, function(){
        $(this).remove();
    });
}, 4000);

});


//Delete Task  Line on Manager View
function DeleteManagerTaskLine(LineNo) {
	var ans = confirm("Are you sure you want to remove this record?");
	if (ans) {
		$.ajax({
			url: "/Projects/DeleteTaskManagerLine",
			type: "POST",
			dataType: "json",
			data: { LineNo:LineNo },
			cache: false,
			success: function (result) {
            location.reload();
            alert("Successfully Deleted");
			},
			error: function (errormessage) {
				alert("An Error occurred, Please try again later");
			}
		});
	}
}




//Begin Project
   function BeginProject() {
    var ProjectNo = $("#ProjectNoItem").val();
    var frmData = new FormData();
	frmData.append("ProjectNo", ProjectNo);
	//Block UI
    var ans = confirm("Are you sure you want to  start this project?");
	if (ans) {
	$.blockUI();
	$.ajax({
		url: "/Projects/BeginProject",
		type: "POST",
		data:frmData,
		dataType: 'json',
		contentType: false,
		processData: false,
		enctype: "multipart/form-data",
		cache: false,
		success: function (result) {
			if (result.message=="Ongoing") {
                alert("This project has already been started!");
                 location.reload();
            }
            else if (result.message=="Cancelled") {
                alert("Failed, This project was cancelled");
                location.reload();
            }
            else if(result.message=="Completed") {
             alert("Failed, This project has been marked as completed");
              location.reload();
            }
            else if(result.message=="Notapproved") {
             alert("Failed, This project has not been approved");
               location.reload();
            }
             else if(result.message=="Success") {
             alert("Success, This project has started.");
               location.reload();
            }
            else{
            alert("Failed, Please try again later");
             location.reload();
            }
			$.unblockUI();
			Ladda.stopAll();
		},
		error: function (err) {
			Ladda.stopAll();
		}
	});
}
  }



//Complete Project
   function CompleteProject() {
   var ProjectNoComplete = $("#ProjectNoItem").val();
   var frmData = new FormData();
	frmData.append("ProjectNoComplete", ProjectNoComplete);
	//Block UI
    var ans = confirm("Are you sure you want to  Complete this project?");
	if (ans) {


	$.blockUI();
	$.ajax({
		url: "/Projects/CompleteProject",
		type: "POST",
		data:frmData,
		dataType: 'json',
		contentType: false,
		processData: false,
		enctype: "multipart/form-data",
		cache: false,
		success: function (result) {
			if (result.message=="Ongoing") {
                alert("This project has already been started!")
                 location.reload();
            }
            else if (result.message=="Cancelled") {
                alert("Failed, This project was cancelled and cannot be  completed");
                location.reload();
            }
            else if(result.message=="Completed") {
             alert("Failed, This project has already been  completed");
              location.reload();
            }
            else if(result.message=="Notapproved") {
             alert("Failed, This project was not approved and did not start.");
               location.reload();
            }
             else if(result.message=="NotStarted") {
             alert("Failed, This project has not started, thus cannot be completed");
               location.reload();
            }
             else if(result.message=="Success") {
             alert("Success, You have marked this project as completed.");
               location.reload();
            }
            else{
            alert("Failed, Please try again later");
             location.reload();
            }
			$.unblockUI();
			Ladda.stopAll();
		},
		error: function (err) {
			Ladda.stopAll();
		}
	});
}
 }




//Cancel Project
   function CancelProject() {
    var ProjectNo = $("#ProjectNoItem").val();
    var frmData = new FormData();
	frmData.append("ProjectNo", ProjectNo);
	//Block UI
    var ans = confirm("Are you sure you want to  Cancel this project?");
	if (ans) {
	$.blockUI();
	$.ajax({
		url: "/Projects/CancelProject",
		type: "POST",
		data:frmData,
		dataType: 'json',
		contentType: false,
		processData: false,
		enctype: "multipart/form-data",
		cache: false,
		success: function (result) {
			if (result.message=="Cancelled") {
                alert("Failed, This project has already been cancelled");
                location.reload();
            }
             else if(result.message=="Success") {
             alert("Success, you have cancelled this project.");
               location.reload();
            }
             else if(result.message=="Completed") {
             alert("Failed, This project has been marked as completed, thus cannot be cancelled.");
               location.reload();
            }
            else{
            alert("Failed, Please try again later");
             location.reload();
            }
			$.unblockUI();
			Ladda.stopAll();
		},
		error: function (err) {
			Ladda.stopAll();
		}
	});
}
  }



</script>



