@model DynamicsNAV365_StaffPortal.Models.ProjectManagement.ProjectPlanModel

@{
    ViewBag.Title = "New Project Plan";
}
<div class="wrapper row-offcanvas row-offcanvas-left">
    <!--Render Human Resource Sidebar-->
    @{Html.RenderAction("_ProjectManagementSidebar", "ProjectHome");}
    <aside class="right-side">
        <section class="content">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        @using (Html.BeginForm("NewProjectPlan", "Projects", FormMethod.Post, new { @class = "" }))
                        {
                            @Html.AntiForgeryToken()
                            @*@Html.HiddenFor(model => model.ProjectNo)*@
                            <div class="card-header" data-background-color="company_card"> 
                                <div class="row">
                                    <div class="col-md-4">
                                        <h4 class="title">New Project Plan</h4>
                                    </div>
                                    <div class="col-md-2">
                                        @*<input type="submit" id="submitBtn" name="Command" value="Submit For Approval" class="btn btn-white btn-xs pull-right ladda-button" data-style="slide-right" data-background-color="green" />*@
                                        <input type="submit" id="submitBtn" name="Command" value="Save" class="btn btn-white btn-xs pull-right ladda-button" data-style="slide-right" data-background-color="green" />

                                    </div>
                                    <div class="col-md-4">
                                      
                                    </div>
                                    <div class="col-md-2"> 
                                        @{
                                            string backUrl = "";
                                            backUrl = Url.Action("ProjectPlan", "Projects") + "?ProjectNo=" + Model.ProjectNumber;
                                        }
                                        <a class="btn btn-danger btn-xs pull-right" href="@backUrl">
                                            <i class="fa fa-close"></i>
                                            Close
                                        </a>
                                    </div>
                                </div>
                            </div>
                            <div class="card-content">
                                @*@if (Model != null && Model.ErrorStatus == true)
                                    {
                                        <div class="alert alert-danger">
                                            <strong>Error! </strong>@Html.Raw(HttpUtility.HtmlDecode(Model.ErrorMessage))
                                        </div>
                                    }

                                    @Html.HiddenFor(model => model.EmployeeNo)*@

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group label-floating">
                                            @Html.LabelFor(model => model.ProjectNumber, htmlAttributes: new { @id = "ProjectNumberLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.ProjectNumber, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.ProjectNumber, "", new { @id = "ProjectNumberError", @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group label-floating">
                                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @id = "StatusLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.Status, "", new { @id = "StatusError", @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group label-floating">
                                            @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @id = "ProjectNameLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.ProjectName, "", new { @id = "ProjectNameError", @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="form-group label-floating">
                                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @id = "DescriptionLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Description, "", new { @id = "DescriptionError", @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @id = "StartDateLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.StartDate, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                            @Html.ValidationMessageFor(model => model.StartDate, "", new { @id = "StartDateError", @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @id = "EndDateLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.EndDate, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                            @Html.ValidationMessageFor(model => model.EndDate, "", new { @id = "EndDateError", @class = "text-danger" })
                                        </div>
                                    </div>
                                  
                                </div>                             
                            

                            </div>
                                            }

                    </div>
                </div>
            </div>
        </section>
    </aside>

</div>
@section scripts{
    <script src="~/Scripts/HumanResource/LeaveApplicationScripts/LeaveApplication.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            //Add CSS Classes
        	InitializeLeaveApplication();
        	var LeaveApplicationNo = $("#No").val();
        	LoadLeaveApplicationDocuments(LeaveApplicationNo);
        });
    </script>
}