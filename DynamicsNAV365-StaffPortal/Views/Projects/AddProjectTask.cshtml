@model DynamicsNAV365_StaffPortal.Models.ProjectManagement.ProjectTasksModel

@{
    ViewBag.Title = "Add Project Task";
}
<div class="wrapper row-offcanvas row-offcanvas-left">
    <!--Render Human Resource Sidebar-->
    @{Html.RenderAction("_ProjectManagementSidebar", "ProjectHome");}
    <aside class="right-side">
        <section class="content">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        @using (Html.BeginForm("AddProjectTask", "Projects", FormMethod.Post, new { @class = "" })) 
                        {
                            @Html.AntiForgeryToken()
                            @*@Html.HiddenFor(model => model.ProjectNo)*@
                            <div class="card-header" data-background-color="company_card">
                                <div class="row">
                                    <div class="col-md-4">
                                        <h4 class="title">Add Project Task</h4>
                                    </div>
                                    <div class="col-md-3">
                                        @*<input type="submit" id="submitBtn" name="Command" value="Submit For Approval" class="btn btn-white btn-xs pull-right ladda-button" data-style="slide-right" data-background-color="green" />*@
                                        <input type="submit" id="submitBtn" name="Command" value="Save" class="btn btn-white btn-xs pull-right ladda" data-style="slide-right" data-background-color="green" />

                                    </div>
                                    <div class="col-md-2">
                                        @*<input type="submit" formtarget="_blank" id="submitBtn" name="Command" value="View Attachment" class="btn btn-white btn-xs pull-right ladda-button" data-style="slide-right" data-background-color="login_card" />*@

                                    </div>
                                    <div class="col-md-3">
                                        @{
                                            string backUrl = "";
                                            backUrl = Url.Action("ManageProject", "Projects") + "?ProjectNo=" + Model.ProjectNo;
                                        }
                                        <a class="btn btn-danger btn-xs pull-right" href="@backUrl">
                                            <i class="fa fa-close"></i>
                                            Close
                                        </a>
                                    </div>
                                </div>
                            </div>
                            <div class="card-content">
                                @*@if (Model != null && Model.ErrorStatus == true)
                                    {
                                        <div class="alert alert-danger">
                                            <strong>Error! </strong>@Html.Raw(HttpUtility.HtmlDecode(Model.ErrorMessage))
                                        </div>
                                    }

                                    @Html.HiddenFor(model => model.EmployeeNo)*@

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ProjectNo, htmlAttributes: new { @id = "ProjectNoLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.ProjectNo, new { htmlAttributes = new { @class = "form-control", @readonly = true, @id= "ProjectNoItem" } })
                                            @Html.ValidationMessageFor(model => model.ProjectNo, "", new { @id = "ProjectNoError", @class = "text-danger" }) 
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.TaskDescription, htmlAttributes: new { @id = "TaskDescriptionLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.TaskDescription, new { htmlAttributes = new { @class = "form-control", @id="TaskItem" } })
                                            @Html.ValidationMessageFor(model => model.TaskDescription, "", new { @id = "TaskDescriptionError", @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ExpectedCompletionDate, htmlAttributes: new { @id = "ExpectedCompletionDateLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.ExpectedCompletionDate," ",new { htmlAttributes = new { @class = "form-control" ,@id="DateItem",@type="date"} })
                                            @Html.ValidationMessageFor(model => model.ExpectedCompletionDate, "", new { @id = "ExpectedCompletionDateError", @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.AssignedTo, htmlAttributes: new { @id = "AssignedToLbl", @class = "control-label" })
                                           @*<div id="ListTeamMembers">*@                                         
                                             @Html.DropDownListFor(model => model.AssignedTo, Model.TeamMembers,new { @class = "form-control",@name="AssignedTo", @id = "AssignedTo"})
                                           @*</div>*@                        
                                             @Html.ValidationMessageFor(model => model.AssignedTo, "", new { @id = "AssignedToError", @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>                              
                              
                            </div>
                                            }

                    </div>
                </div>
            </div>
        </section>
    </aside>

</div>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script>
      $(document).ready(function () {
      debugger;
             $.ajax({
                type: "post",
                url: "/Projects/GetTeamMembers",
                data: { ProjectNo: $('#ProjectNoItem').val() },
                datatype: "json",
                //traditional: true,
                success: function (data) {
                    var newresult = "<select id='AssignedTo' name='AssignedTo' class='form-control'>";
                    newresult = newresult + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++)
                    {
                        newresult = newresult + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    newresult = newresult + '</select>';
                    $('#ListTeamMembers').html(newresult);
                    }
                });

     });

    </script>