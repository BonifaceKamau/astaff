@model DynamicsNAV365_StaffPortal.Models.EmployeeTraining.EmployeeTrainingApplicationModel

@{
    ViewBag.Title = "Approve/Reject Training Application";
}
<div class="wrapper row-offcanvas row-offcanvas-left">
    <!--Render Approval Sidebar-->
    @{Html.RenderAction("_ApprovalSidebar", "Approval");}

    <aside class="right-side">
        <section class="content">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        @using (Html.BeginForm("TrainingApplicationApproval", "EmployeeTraining", FormMethod.Post, new { @class = "" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="card-header" data-background-color="company_card">
                                <div class="row">
                                    <div class="col-md-4">
                                        <h5 class="title"><i><strong>Approve/Reject Training Application</strong></i></h5>
                                    </div>
                                    <div class="col-md-8">
                                        <div class="pull-right">
                                            <button type="submit" id="btnApprove" name="Command" value="Approve" class="btn btn-success btn-xs ladda-button" data-style="slide-right">
                                                <span class="ladda-label">
                                                    <i class="fa fa-check-circle"></i>
                                                    Approve
                                                </span>
                                            </button>
                                            <button type="submit" id="btnReject" name="Command" value="Reject" class="btn btn-danger btn-xs ladda-button" data-style="slide-right">
                                                <span class="ladda-label">
                                                    <i class="fa fa-close"></i>
                                                    Reject
                                                </span>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="card-content">
                                @if (Model != null && Model.ErrorStatus == true)
                                {
                                    <div class="alert alert-danger">
                                        <strong>Error! </strong>@Html.Raw(HttpUtility.HtmlDecode(Model.ErrorMessage))
                                    </div>
                                }
                                @Html.HiddenFor(model => model.ApplicationNo)
                                <div class="row">
                                    <div class="col-md-7">
                                        <ul class="nav nav-tabs">
                                            <li class="active"><a href="#">General Details</a></li>
                                        </ul>
                                        <br />
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.ApplicationNo, htmlAttributes: new { @id = "ApplicationNoLbl", @class = "control-label" })
                                                    @Html.EditorFor(model => model.ApplicationNo, new { htmlAttributes = new { @class = "form-control", disabled = "@disabled" } })
                                                    @Html.ValidationMessageFor(model => model.ApplicationNo, "", new { @id = "NoError", @class = "text-danger" })
                                                </div>

                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.Purpose, htmlAttributes: new { @id = "PurposeLbl", @class = "control-label" })
                                                    @Html.EditorFor(model => model.Purpose, new { htmlAttributes = new { @class = "form-control", disabled = "@disabled" } })
                                                    @Html.ValidationMessageFor(model => model.Purpose, "", new { @id = "PurposeError", @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.TrainingNeed, htmlAttributes: new { @id = "TrainingNeedLbl", @class = "control-label" })
                                                    @Html.DropDownListFor(model => model.TrainingNeed, Model.TrainingNeedNos, new { htmlAttributes = new { @class = "form-control" }, disabled = "@disabled" })
                                                    @Html.ValidationMessageFor(model => model.TrainingNeed, "", new { @id = "TrainingNeedError", @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.Year, htmlAttributes: new { @id = "YearLbl", @class = "control-label" })
                                                    @Html.DropDownListFor(model => model.Year, Model.YearCodes, new { htmlAttributes = new { @class = "form-control" }, disabled = "@disabled" })
                                                    @Html.ValidationMessageFor(model => model.Year, "", new { @id = "YearError", @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group label-static">
                                                    @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @id = "FromDateLbl", @class = "control-label" })
                                                    @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control", disabled = "@disabled" } })
                                                    @Html.ValidationMessageFor(model => model.FromDate, "", new { @id = "FromDateError", @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group label-static">
                                                    @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @id = "ToDateLbl", @class = "control-label" })
                                                    @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control", disabled = "@disabled" } })
                                                    @Html.ValidationMessageFor(model => model.ToDate, "", new { @id = "ToDateError", @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @id = "DescriptionLbl", @class = "control-label" })
                                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", disabled = "@disabled" } })
                                                    @Html.ValidationMessageFor(model => model.Description, "", new { @id = "DescriptionError", @class = "text-danger" })
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="col-md-5">
                                        <ul class="nav nav-tabs">
                                            <li class="active"><a href="#">Required Document</a></li>
                                        </ul>
                                        <br />
                                        <div class="row">
                                            <div class="col-md-12">
                                                @{Html.RenderAction("_ViewEmployeeTrainingDocumentLine", "EmployeeTraining", new { EmpTrainingNo = Model.ApplicationNo });}
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="card-footer">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <a class="btn btn-danger pull-right" href="@Url.Action("RequestsToApprove", "Approval")">
                                            <i class="fa fa-close"></i>
                                            Cancel
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </aside>

</div>
@section scripts{
    <script src="~/Scripts/HumanResource/EmployeeTrainingScripts/EmployeeTraining.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            //Add CSS Classes
            $("#TrainingRequestHistoryMenuItem").addClass("active");

            InitializeTrainingRequest();

            var docNumber = $("#ApplicationNo").val();
            LoadTrainingDocumentsView(docNumber);

        });
    </script>
}