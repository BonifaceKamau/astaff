@model DynamicsNAV365_StaffPortal.Models.PerformanceManagement.AppraisalResultsModel

@{
    ViewBag.Title = "Detailed End Year Results";
}
<div class="wrapper row-offcanvas row-offcanvas-left">
    <!--Render Human Resource Sidebar-->
    @{Html.RenderAction("_PerformanceManagementSidebar", "PerformanceHome");}
    <aside class="right-side">
        <section class="content">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        @using (Html.BeginForm("EndYearDetailedResults", "AppraisalResults", FormMethod.Post, new { @class = "" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="card-header" data-background-color="company_card">
                                <div class="row">
                                    <div class="col-md-4">
                                        <h4 class="title">Detailed Results - End Year</h4>
                                    </div>
                                    <div class="col-md-3">
                                        @*<input type="submit" id="submitBtn" name="Command" value="Submit For Approval" class="btn btn-white btn-xs pull-right ladda-button" data-style="slide-right" data-background-color="green" />*@
                                        @*<input type="submit" id="submitBtn" name="Command" value="Save Changes" class="btn btn-white btn-xs pull-right ladda-button" data-style="slide-right" data-background-color="green" />*@

                                    </div>
                                    <div class="col-md-2">
                                        @*<input type="submit" formtarget="_blank" id="submitBtn" name="Command" value="View Attachment" class="btn btn-white btn-xs pull-right ladda-button" data-style="slide-right" data-background-color="login_card" />*@

                                    </div>
                                    <div class="col-md-3">
                                        @{
                                            string backUrl = "";
                                            backUrl = Url.Action("LoadAppraisalResultsEnd", "AppraisalResults");
                                        }
                                        <a class="btn btn-danger btn-xs pull-right" href="@backUrl">
                                            <i class="fa fa-close"></i>
                                            Close
                                        </a>
                                    </div>
                                </div>
                            </div>
                            <div class="card-content">                               
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group label-floating">
                                            @Html.LabelFor(model => model.EmployeeName, htmlAttributes: new { @id = "EmployeeNameLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @id = "EmployeeNameError", @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group label">
                                            @Html.LabelFor(model => model.Designation, htmlAttributes: new { @id = "DesignationLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.Designation, "", new { @id = "DesignationError", @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group label">
                                            @Html.LabelFor(model => model.AppraisalNo, htmlAttributes: new { @id = "AppraisalNoLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.AppraisalNo, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.AppraisalNo, "", new { @id = "AppraisalNo", @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group label">
                                            @Html.LabelFor(model => model.AppraisalPeriod, htmlAttributes: new { @id = "AppraisalPeriodLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.AppraisalPeriod, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.AppraisalPeriod, "", new { @id = "AppraisalPeriodError", @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group label">
                                            @Html.LabelFor(model => model.AppraisalStage, htmlAttributes: new { @id = "AppraisalStageLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.AppraisalStage, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.AppraisalStage, "", new { @id = "AppraisalPeriodError", @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                               
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group label">
                                            @Html.LabelFor(model => model.PeerLineScore, htmlAttributes: new { @id = "PeerLineScoreLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.PeerLineScore, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.PeerLineScore, "", new { @id = "PeerLineScoreError", @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group label">
                                            @Html.LabelFor(model => model.SubordinateLineScore, htmlAttributes: new { @id = "SubordinateLineScoreLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.SubordinateLineScore, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.SubordinateLineScore, "", new { @id = "SubordinateLineScoreError", @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group label">
                                            @Html.LabelFor(model => model.ExternalLineScore, htmlAttributes: new { @id = "ExternalLineScoreLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.ExternalLineScore, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.ExternalLineScore, "", new { @id = "ExternalLineScoreError", @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group label">
                                            @Html.LabelFor(model => model.CompetencyLineScore, htmlAttributes: new { @id = "CompetencyLineScoreLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.CompetencyLineScore, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.CompetencyLineScore, "", new { @id = "CompetencyLineScoreError", @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group label">
                                            @Html.LabelFor(model => model.PerformanceLineScore, htmlAttributes: new { @id = "PerformanceLineScoreLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.PerformanceLineScore, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.PerformanceLineScore, "", new { @id = "PerformanceLineScoreError", @class = "text-danger" })
                                        </div>
                                    </div>

                                </div>
                                <div class="row">
                                    <div class="col-md-4" style="background-color:#355E3B; padding:10px;">
                                        <div class="form-group label-floating">
                                            @Html.LabelFor(model => model.AppraisedScore, htmlAttributes: new { @id = "AppraisedScoreLbl", @class = "control-label", @style = "color:white; font-size:15px;" })
                                            @Html.EditorFor(model => model.AppraisedScore, new { htmlAttributes = new { @class = "form-control", @readonly = true, @style = "color:white;font-size:20px;" } })
                                            @Html.ValidationMessageFor(model => model.AppraisedScore, "", new { @id = "AppraisedScoreError", @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group label">
                                            @Html.LabelFor(model => model.ScoreGrading, htmlAttributes: new { @id = "ScoreGradingLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.ScoreGrading, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.ScoreGrading, "", new { @id = "ScoreGradingError", @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group label">
                                            @Html.LabelFor(model => model.AppraisedNarration, htmlAttributes: new { @id = "AppraisedNarrationLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.AppraisedNarration, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.AppraisedNarration, "", new { @id = "AppraisedNarrationError", @class = "text-danger" })
                                        </div>
                                    </div>


                                </div>
                            </div>
                                            }

                    </div>
                </div>
            </div>
        </section>
    </aside>

</div>
@section scripts{
    <script src="~/Scripts/HumanResource/LeaveApplicationScripts/LeaveApplication.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            //Add CSS Classes
        	InitializeLeaveApplication();

        	var LeaveApplicationNo = $("#No").val();
        	LoadLeaveApplicationDocuments(LeaveApplicationNo);
        });
    </script>
}