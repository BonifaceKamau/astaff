@model DynamicsNAV365_StaffPortal.Models.EmployeeAppraisal.AppraisalEvaluationLineModel

<div class="row">
	<div class="col-md-12">
		<div class="row">
			<div class="col-md-12">
				<div id="AjaxLoader" class="">
					Loading.....
					<img src="~/Content/images/ajax-loader.gif" alt="Loading...." style="width:15px;height:15px;" />
				</div>
				<div id="TableContainer" class="table-responsive">
					<table id="AppraisalEvaluationLineTbl" class="table table-striped table-bordered" style="display:none;">
						<thead class="text-primary">
							<tr>
								<th>Appraisal No.</th>
								<th>Appraisal Period</th>
								<th>Appraisal Objective</th>
								<th>Activity Code</th>
								<th>Activity Description</th>
								<th>Target Value</th>
								<th>Actual Value</th>
								<th>.</th>
							</tr>
						</thead>
						<tbody></tbody>
					</table>
				</div>
				<div id="AppraisalEvaluationLineModal" class="modal fade" role="dialog" aria-labelledby="AppraisalEvaluationLineModalLabel" aria-hidden="true">
					<div class="modal-dialog">
						<div class="modal-content">
							<div class="modal-header">
								<button class="btn close" type="button" data-dismiss="modal"><i class="fa fa-close"></i></button>
								<h4 id="AppraisalEvaluationLineModalLabel" class="modal-title" style="text-align:center">Appraisal Evaluation Line</h4>
							</div>
							<div class="modal-body">
								@using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "AppraisalEvaluationLineForm", @class = "" }))
								{
									@Html.AntiForgeryToken()

									if (Model != null && Model.LineErrorStatus == true)
									{
										<div class="alert alert-danger">
											<strong>Error! </strong>@Html.Raw(HttpUtility.HtmlDecode(Model.LineErrorMessage))
										</div>
									}

									@Html.HiddenFor(model => model.EvaluationNo)

									<div class="row">
										<div class="col-md-6">
											<div class="form-group label-static">
												@Html.LabelFor(model => model.TargetValue, htmlAttributes: new { @id = "TargetValueLbl", @class = "control-label" })
												@Html.EditorFor(model => model.TargetValue, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
												@Html.ValidationMessageFor(model => model.TargetValue, "", new { @id = "TargetValueError", @class = "text-danger" })
											</div>
										</div>
										<div class="col-md-6">
											<div class="form-group label-static">
												@Html.LabelFor(model => model.ActualValue, htmlAttributes: new { @id = "ActualValueLbl", @class = "control-label" })
												@Html.EditorFor(model => model.ActualValue, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
												@Html.ValidationMessageFor(model => model.ActualValue, "", new { @id = "ActualValueError", @class = "text-danger" })
											</div>
										</div>
									</div>
									<div class="row">
										<div class="col-md-12">
											<div class="form-group label-static">
												@Html.LabelFor(model => model.AppraisalObjective, htmlAttributes: new { @id = "AppraisalObjectiveLbl", @class = "control-label" })
												@Html.DropDownListFor(model => model.AppraisalObjective, Model.AppraisalObjectives, "", new { @class = "form-control", @disabled = "disabled" })
												@Html.ValidationMessageFor(model => model.AppraisalObjective, "", new { @id = "AppraisalObjectiveError", @class = "text-danger" })
											</div>
										</div>
									</div>
									<div class="row">
										<div class="col-md-6">
											<div class="form-group label-static">
												@Html.LabelFor(model => model.OrganizationActivityCode, htmlAttributes: new { @id = "OrganizationActivityCodeLbl", @class = "control-label" })
												@Html.DropDownListFor(model => model.OrganizationActivityCode, Model.OrganizationActivityCodes, "", new { @class = "form-control", @disabled = "disabled" })
												@Html.ValidationMessageFor(model => model.OrganizationActivityCode, "", new { @id = "OrganizationActivityCodeError", @class = "text-danger" })
											</div>
										</div>
										<div class="col-md-6">
											<div class="form-group label-static">
												@Html.LabelFor(model => model.DepartmentActivityCode, htmlAttributes: new { @id = "DepartmentActivityCodeLbl", @class = "control-label" })
												@Html.DropDownListFor(model => model.DepartmentActivityCode, Model.DepartmentActivityCodes, "", new { @class = "form-control", @disabled = "disabled" })
												@Html.ValidationMessageFor(model => model.DepartmentActivityCode, "", new { @id = "DepartmentActivityCodeError", @class = "text-danger" })
											</div>
										</div>
									</div>
									<div class="row">
										<div class="col-md-12">
											<div class="form-group label-static">
												@Html.LabelFor(model => model.ActivityDescription, htmlAttributes: new { @id = "ActivityDescriptionLbl", @class = "control-label" })
												@Html.EditorFor(model => model.ActivityDescription, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
												@Html.ValidationMessageFor(model => model.ActivityDescription, "", new { @id = "ActivityDescriptionError", @class = "text-danger" })
											</div>
										</div>
									</div>
									<div class="row">
										<div class="col-md-12">
											<div class="form-group label-static">
												@Html.LabelFor(model => model.BUM, htmlAttributes: new { @id = "BUMLbl", @class = "control-label" })
												@Html.DropDownListFor(model => model.BUM, Model.BUMs, "", new { @class = "form-control", @disabled = "disabled" })
												@Html.ValidationMessageFor(model => model.BUM, "", new { @id = "BUMError", @class = "text-danger" })
											</div>
										</div>
									</div>
								}
							</div>
							<div class="modal-footer">
								<button class="btn btn-danger btn-xs" type="button" data-dismiss="modal"><i class="fa fa-close"></i>Cancel</button>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>


