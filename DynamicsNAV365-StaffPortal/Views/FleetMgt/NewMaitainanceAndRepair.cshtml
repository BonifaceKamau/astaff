@model DynamicsNAV365_StaffPortal.Models.HumanResource.FleetMgt.MaintananceAndRepair

@{
    ViewBag.Title = "Maintainance and repair Record";
}
<div class="wrapper row-offcanvas row-offcanvas-left">
    <!--Render Finance Sidebar-->
    @{ Html.RenderAction("_AdministrationSidebar", "Administration"); }
    <aside class="right-side">
        <section class="content">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        @using (Html.BeginForm("ViewMaintanaceAndRepair", "FleetMgt", FormMethod.Post, new {@class = ""}))
                        {
                            @Html.AntiForgeryToken()
                            <div class="card-header" data-background-color="company_card">
                                <div class="row">
                                    <div class="col-md-4">
                                        <h4 class="title">
                                            <i>Maintance and Repair - @Model.No</i>
                                        </h4>
                                    </div>
                                    <div class="col-md-8">
                                        <a class="btn btn-warning pull-right btn-xs" type="submit" href="@Url.Action("RepairSendForApproval", "FleetMgt", new {no =Model.No})">
                                            <i class="fa fa-send-o"></i>
                                            Send for Approval
                                        </a>
                                        <a class="btn btn-warning pull-right btn-xs" type="submit" href="@Url.Action("RepairCancelApproval", "FleetMgt", new {no =Model.No})">
                                            <i class="fa fa-remove"></i>
                                            Cancel Approval
                                        </a>
                                        @*
                                        <input type="button" class="btn btn-warning btn-xs pull-right ladda-button" value="Report" onclick="GenerateFleetReport('@Model.No');"/>
                                        *@
                                        <a class="btn btn-danger pull-right btn-xs" type="submit" href="@Url.Action("MaintainanceAndRepair", "FleetMgt")">
                                            <i class="fa fa-close"></i>
                                            Close
                                        </a>
                                    </div>
                                </div>
                            </div>
                            <div class="card-content">
                                @*@if (Model != null && Model.ErrorStatus == true)
                                {
                                    <div class="alert alert-danger">
                                        <strong>Error! </strong>@Html.Raw(HttpUtility.HtmlDecode(Model.ErrorMessage))
                                    </div>
                                }*@
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.No, htmlAttributes: new {@id = "NoLbl", @class = "control-label"})
                                                    @Html.EditorFor(model => model.No, new {htmlAttributes = new {@class = "form-control", @readonly = true}})
                                                    @Html.ValidationMessageFor(model => model.No, "", new {@id = "NoError", @class = "text-danger"})
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.Reg_No, htmlAttributes: new {@id = "EmployeeNameLbl", @class = "control-label"})
                                                    @Html.EditorFor(model => model.Reg_No, new {htmlAttributes = new {@class = "form-control"}})
                                                    @Html.ValidationMessageFor(model => model.Reg_No, "", new {@id = "EmployeeNameError", @class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.Description, htmlAttributes: new {@id = "CreatedOnLbl", @class = "control-label"})
                                                    @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control"}})
                                                    @Html.ValidationMessageFor(model => model.Description, "", new {@id = "CreatedOnError", @class = "text-danger"})
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.Service_Type, htmlAttributes: new {@id = "StatusLbl", @class = "control-label"})
                                                    @Html.DropDownListFor(model => model.Service_Type,Model.Service_Type_Select, new {htmlAttributes = new {@class = "form-control"}})
                                                    @Html.ValidationMessageFor(model => model.Service_Type, "", new {@id = "StatusError", @class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.Service_Provider, htmlAttributes: new {@id = "DescriptionLbl", @class = "control-label"})
                                                    @Html.DropDownListFor(model => model.Service_Provider,Model.Service_Provider_Select, new {htmlAttributes = new {@class = "form-control"}})
                                                    @Html.ValidationMessageFor(model => model.Service_Provider, "", new {@id = "DescriptionError", @class = "text-danger"})
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.Service_Interval_Type, htmlAttributes: new {@id = "DescriptionLbl", @class = "control-label"})
                                                    @Html.DropDownListFor(model => model.Service_Interval_Type,Model.Service_Interval_Type_Select, new {htmlAttributes = new {@class = "form-control"}})
                                                    @Html.ValidationMessageFor(model => model.Service_Interval_Type, "", new {@id = "DescriptionError", @class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.Service_Intervals, htmlAttributes: new {@id = "NoLbl", @class = "control-label"})
                                                    @Html.EditorFor(model => model.Service_Intervals, new {htmlAttributes = new {@class = "form-control"}})
                                                    @Html.ValidationMessageFor(model => model.Service_Intervals, "", new {@id = "NoError", @class = "text-danger"})
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.Service_Period, htmlAttributes: new {@id = "EmployeeNameLbl", @class = "control-label"})
                                                    @Html.EditorFor(model => model.Service_Period, new {htmlAttributes = new {@class = "form-control"}})
                                                    @Html.ValidationMessageFor(model => model.Service_Period, "", new {@id = "EmployeeNameError", @class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.Date_of_Entry, htmlAttributes: new {@id = "NoLbl", @class = "control-label"})
                                                    @Html.EditorFor(model => model.Date_of_Entry, new {htmlAttributes = new {@class = "form-control"}})
                                                    @Html.ValidationMessageFor(model => model.Date_of_Entry, "", new {@id = "NoError", @class = "text-danger"})
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.Date_of_Service, htmlAttributes: new {@id = "EmployeeNameLbl", @class = "control-label"})
                                                    @Html.EditorFor(model => model.Date_of_Service, new {htmlAttributes = new {@class = "form-control"}})
                                                    @Html.ValidationMessageFor(model => model.Date_of_Service, "", new {@id = "EmployeeNameError", @class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.Service_Intervals, htmlAttributes: new {@id = "NoLbl", @class = "control-label"})
                                                    @Html.EditorFor(model => model.Service_Intervals, new {htmlAttributes = new {@class = "form-control"}})
                                                    @Html.ValidationMessageFor(model => model.Service_Intervals, "", new {@id = "NoError", @class = "text-danger"})
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.Current_Odometer_Reading, htmlAttributes: new {@id = "EmployeeNameLbl", @class = "control-label"})
                                                    @Html.EditorFor(model => model.Current_Odometer_Reading, new {htmlAttributes = new {@class = "form-control"}})
                                                    @Html.ValidationMessageFor(model => model.Current_Odometer_Reading, "", new {@id = "EmployeeNameError", @class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.Service_Mileage, htmlAttributes: new {@id = "NoLbl", @class = "control-label"})
                                                    @Html.EditorFor(model => model.Service_Mileage, new {htmlAttributes = new {@class = "form-control"}})
                                                    @Html.ValidationMessageFor(model => model.Service_Mileage, "", new {@id = "NoError", @class = "text-danger"})
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.Next_Service, htmlAttributes: new {@id = "EmployeeNameLbl", @class = "control-label"})
                                                    @Html.EditorFor(model => model.Next_Service, new {htmlAttributes = new {@class = "form-control"}})
                                                    @Html.ValidationMessageFor(model => model.Next_Service, "", new {@id = "EmployeeNameError", @class = "text-danger"})
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.Amount, htmlAttributes: new {@id = "EmployeeNameLbl", @class = "control-label"})
                                                    @Html.EditorFor(model => model.Amount, new {htmlAttributes = new {@class = "form-control"}})
                                                    @Html.ValidationMessageFor(model => model.Amount, "", new {@id = "EmployeeNameError", @class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <div class="col-md-12">
                                            <input type="submit" class="btn btn-success btn-xs pull-right ladda-button" value="Save Header"/>
                                        </div>
                                        @*<div class="row">
                                                <div class="col-md-12">
                                                    <div class="form-group label-floating">
                                                        @Html.LabelFor(model => model.ListofTasks, htmlAttributes: new { @id = "ListofTasksLbl", @class = "control-label" })
                                                        @Html.EditorFor(model => model.ListofTasks, new { htmlAttributes = new { @class = "form-control"} })
                                                        @Html.ValidationMessageFor(model => model.ListofTasks, "", new { @id = "ListofTasksError", @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <input type="button" class="btn btn-success btn-xs pull-left ladda-button" value="Update List of Tasks" onclick="UpdateTasks('@Model.No', '@Model.Month', '@Model.Year', @Model.EmpNo);" />*@
                                    </div>

                                </div>
                            </div>
                        }
                        <div class="card-footer">
                            <div class="row">
                                <div class="col-md-12">
                                    @{ Html.RenderAction("MaintainaceLineView", new { DocNo = Model?.No }); }
                                </div>
                            </div>
                        </div>
                        @*<div class="card-footer">
                            $1$<div class="row">
                                <div class="col-md-12">
                                    @if (@Model.Status == "Open")
                                    {
                                        <input type="button" class="btn btn-success btn-xs pull-right ladda-button" value="Add Log" onclick="AddLog('@Model.No');"/>
                                    }
                                    <hr style="border:1px solid black"/>
                                    <b>Vehicle Logs</b>
                                    <hr/>
                                    <div id="divVehicleLogs"></div>
                                    <hr style="border:1px solid black"/>
                                </div>
                            </div>
                            <hr/>
                            <div class="row">
                                <div class="col-md-12">
                                    <div id="divAttachDocs"></div>
                                </div>
                            </div>#1#
                        </div>*@
                    </div>
                </div>
            </div>
        </section>
    </aside>
</div>@section scripts{
    <script type="text/javascript">
        $("select").select2();
        $(document).ready(function () {

            LoadLogs(`@Model.No`);
           
        });
        var LoadLogs = function (DocNo) {
            $.ajax({
                async: true,
                type: "POST",
                datatype: "json",
                contentType: "application/json; charset = utf-8",
                processData: false,
                data: JSON.stringify({ DocNo: DocNo}),
                url: "@Url.Action("MaintainaceLineView")",
                success: function (data) {
                    $("#divVehicleLogs").html(data);
                },
                error: function () {
                    window.alert("There is some problem to process your request. Please try after some time");
                }
            });
        };

        var AddLog = function (DocNo) {
            $.ajax({
                async: true,
                type: "POST",
                datatype: "json",
                contentType: "application/json; charset = utf-8",
                processData: false,
                data: JSON.stringify({DocNo: DocNo}),

                url: '/FleetMgt/AddLog',
                success: function (data) {
                    $("#modalBodyLogs").html(data);
                    $("#myModalLogs").modal("show");
                }
            });
        };
       
        var DeleteItem = function (LnNo, DocNo) {
            $.ajax({
                async: true,
                type: "POST",
                datatype: "json",
                contentType: "application/json; charset = utf-8",
                processData: false,
                data: JSON.stringify({ LnNo: LnNo, DocNo: DocNo }),

                url: '@Url.Action("DeleteMaintainaceLine")',
                success: function (data) {
                    Swal.fire({
                        title: data.message,
                        icon: 'info',
                        confirmButtonText: 'Ok'
                    },
                    function () {
                        location.reload();
                    }
                    );
                    //window.reload();
                }
            });
        };
        
        var SubmitApprovalRequest = function (DocNo) {
            $.ajax({
                async: true,
                type: "POST",
                datatype: "json",
                contentType: "application/json; charset = utf-8",
                processData: false,
                data: JSON.stringify({ DocNo: DocNo}),

                url: '/FleetMgt/SubmitApprovalRequest',
                success: function (data) {
                    Swal.fire({
                        title: data.message,
                        icon: 'info',
                        confirmButtonText: 'Ok'
                    })
                    window.reload();
                },
                error: function () {
                    Swal.fire({
                        title: data.message,
                        icon: 'error',
                        confirmButtonText: 'Ok'
                    })
                    window.reload();
                }
            });
        };

        var UpdateNewLog = function () {
            var DocNo = `@Model.No`;
            var OdometerStart = $("#txtodometerstart").val();
            var OdometerEnd = $("#txtodometerend").val();
            
            if (OdometerEnd <= OdometerStart) {
                window.alert("Invalid Odometer Reading");
                return;
            } else {
                var FleetLogs = {
                    No: DocNo,
                    Dimension1: $("#Dimension1").val(),
                    Dimension2: $("#Dimension2").val(),
                    Dimension3: $("#Dimension3").val(),
                    Dimension4: $("#Dimension4").val(),
                    Dimension5: $("#Dimension5").val(),
                    Dimension6: $("#Dimension6").val(),
                    Dimension7: $("#Dimension7").val(),
                    Date: $("#DocumentDate").val(),
                    VehicleNo: $("#VehicleReg").val(),
                    StaffNo: $("#StaffNo").val(),
                    From: $("#txtFrom").val(),
                    To: $("#txtTo").val(),
                    StartTime: $("#StartTime").val(),
                    EndTime: $("#EndTime").val(),
                    OdometerStart: $("#txtodometerstart").val(),
                    OdometerEnd: $("#txtodometerend").val(),
                    Litres: $("#txtlitres").val(),
                    Amount: $("#txtamountspent").val(),
                };
                $.ajax({
                    type: "POST",
                    url: "/FleetMgt/SubmitLogs",
                    data: JSON.stringify(FleetLogs),
                    //data: JSON.stringify({ ProgramCode: ProgramCode, Mth: Mth, Year: Year, LnNo: LnNo, DocNo: DocNo, Hrs: Hrs, Tasks: Tasks }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        window.alert(data.message);
                        window.location.reload();
                    }

                });
            }
        }

        var GenerateFleetReport = function (DocNo) {
            //console.log(`@Model.No`);
            $.ajax({
                async: true,
                type: "POST",
                datatype: "json",
                contentType: "application/json; charset = utf-8",
                processData: false,
                data: JSON.stringify({ DocNo: DocNo}),

                url: '/FleetMgt/GenerateFleetReport',
                success: function (data) {
                    window.open(data.message, '_blank').focus();
                    //window.alert(data.message);
                    //window.location.reload();
                },
                error: function () {
                    window.alert(data.message);
                }
            });
        };

        function AddOnChangeEvents() {

            $('#Dimension1').change(function () {
                loaddimension2($(this).val());
            });
            $('#Dimension2').change(function () {
                loaddimension3($(this).val());
            });
            $('#Dimension3').change(function () {
                loaddimension4($(this).val());
            });
            $('#Dimension4').change(function () {
                loaddimension5($(this).val());
            });
            $('#Dimension5').change(function () {
                loaddimension6($(this).val());
            });
            $('#Dimension6').change(function () {
                loaddimension7($(this).val());
            });
        }

        function AddImprestRequestDropDownListSearch() {

            $("#Dimension1").select2({
                placeholder: $("#Dimension1Lbl").text(),
                allowClear: true
            });
            $("#VehicleReg").select2({
                placeholder: $("#VehicleRegLbl").text(),
                allowClear: true
            });
            $("#StaffNo").select2({
                placeholder: $("#StaffNoLbl").text(),
                allowClear: true
            });
            $("#Dimension2").select2({
                placeholder: $("#Dimension2Lbl").text(),
                allowClear: true
            });
            $("#Dimension3").select2({
                placeholder: $("#Dimension3Lbl").text(),
                allowClear: true
            });
            $("#Dimension4").select2({
                placeholder: $("#Dimension4Lbl").text(),
                allowClear: true
            });
            $("#Dimension5").select2({
                placeholder: $("#Dimension5Lbl").text(),
                allowClear: true
            });
            $("#Dimension6").select2({
                placeholder: $("#Dimension6Lbl").text(),
                allowClear: true
            });
            $("#Dimension7").select2({
                placeholder: $("#Dimension7Lbl").text(),
                allowClear: true
            });
        }
        //load 2nd dimension
        function loaddimension2(dimension1) {
            var options = "";
            options += "<option>";
            options += "";
            options += "</option>";

            $.ajax({
                url: AJAXUrls.GetGlobalDimension2Codes,
                type: "GET",
                dataType: "json",
                data: { dimension1: dimension1 },
                cache: false,
                success: function (Dimnesions2) {
                    var rows = "";
                    $.each(Dimnesions2.DropDownData.ListOfddlData, function (i, Dimnesions) {
                        options += "<option value='" + Dimnesions.Value + "'>";
                        options += Dimnesions.Value;
                        options += "</option>";
                    });
                    $("#Dimension2").html(options);
                },
                error: OnError
            });
        }
        //load 3rd dimension
        function loaddimension3(dimension2) {
            var options = "";
            options += "<option>";
            options += "";
            options += "</option>";

            $.ajax({
                url: AJAXUrls.GetGlobalDimension3Codes,
                type: "GET",
                dataType: "json",
                data: { dimension2: dimension2 },
                cache: false,
                success: function (Dimnesions3) {
                    var rows = "";
                    $.each(Dimnesions3.DropDownData.ListOfddlData, function (i, Dimnesions) {
                        options += "<option value='" + Dimnesions.Value + "'>";
                        options += Dimnesions.Value;
                        options += "</option>";
                    });
                    $("#Dimension3").html(options);
                },
                error: OnError
            });
        }
        //load 4th dimension
        function loaddimension4(dimension3) {
            var options = "";
            options += "<option>";
            options += "";
            options += "</option>";

            $.ajax({
                url: AJAXUrls.GetGlobalDimension4Codes,
                type: "GET",
                dataType: "json",
                data: { dimension3: dimension3 },
                cache: false,
                success: function (Dimnesions4) {
                    var rows = "";
                    $.each(Dimnesions4.DropDownData.ListOfddlData, function (i, Dimnesions) {
                        options += "<option value='" + Dimnesions.Value + "'>";
                        options += Dimnesions.Value;
                        options += "</option>";
                    });
                    $("#Dimension4").html(options);
                },
                error: OnError
            });
        }
        //load 5th dimension
        function loaddimension5(dimension4) {
            var options = "";
            options += "<option>";
            options += "";
            options += "</option>";

            $.ajax({
                url: AJAXUrls.GetGlobalDimension5Codes,
                type: "GET",
                dataType: "json",
                data: { dimension4: dimension4 },
                cache: false,
                success: function (Dimnesions5) {
                    var rows = "";
                    $.each(Dimnesions5.DropDownData.ListOfddlData, function (i, Dimnesions) {
                        options += "<option value='" + Dimnesions.Value + "'>";
                        options += Dimnesions.Value;
                        options += "</option>";
                    });
                    $("#Dimension5").html(options);
                },
                error: OnError
            });
        }
        //load 6th dimension
        function loaddimension6(dimension5) {
            var options = "";
            options += "<option>";
            options += "";
            options += "</option>";

            $.ajax({
                url: AJAXUrls.GetGlobalDimension6Codes,
                type: "GET",
                dataType: "json",
                data: { dimension5: dimension5 },
                cache: false,
                success: function (Dimnesions6) {
                    var rows = "";
                    $.each(Dimnesions6.DropDownData.ListOfddlData, function (i, Dimnesions) {
                        options += "<option value='" + Dimnesions.Value + "'>";
                        options += Dimnesions.Value;
                        options += "</option>";
                    });
                    $("#Dimension6").html(options);
                },
                error: OnError
            });
        }
        //load 7th dimension
        function loaddimension7(dimension6) {
            var options = "";
            options += "<option>";
            options += "";
            options += "</option>";

            $.ajax({
                url: AJAXUrls.GetGlobalDimension7Codes,
                type: "GET",
                dataType: "json",
                data: { dimension6: dimension6 },
                cache: false,
                success: function (Dimnesions7) {
                    var rows = "";
                    $.each(Dimnesions7.DropDownData.ListOfddlData, function (i, Dimnesions) {
                        options += "<option value='" + Dimnesions.Value + "'>";
                        options += Dimnesions.Value;
                        options += "</option>";
                    });
                    $("#Dimension7").html(options);
                },
                error: OnError
            });
        }
        //error
        function OnError(xhr, errorType, exception) {
            var responseText;
            $("#dialog").html("");
            try {
                responseText = jQuery.parseJSON(xhr.responseText);
                $("#dialog").append("<div><b>" + errorType + " " + exception + "</b></div>");
                $("#dialog").append("<div><u>Exception</u>:<br /><br />" + responseText.ExceptionType + "</div>");
                $("#dialog").append("<div><u>StackTrace</u>:<br /><br />" + responseText.StackTrace + "</div>");
                $("#dialog").append("<div><u>Message</u>:<br /><br />" + responseText.Message + "</div>");
                alert(responseText.Message);
            } catch (e) {
                responseText = xhr.responseText;
                $("#dialog").html(responseText);
            }
            $("#dialog").dialog({
                title: "jQuery Exception Details",
                width: 700,
                buttons: {
                    Close: function () {
                        $(this).dialog('close');
                    }
                }
            });
        }
    </script>
}