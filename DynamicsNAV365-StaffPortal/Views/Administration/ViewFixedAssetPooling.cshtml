@model DynamicsNAV365_StaffPortal.Models.Finance.FixedAsset

@{
    ViewBag.Title = "FixedAsset";
    var dcodataServices = new BCODATAServices("");
    var assetsPools  = dcodataServices.BCOData.Fixed_Assets_Pool.Execute();
    var assetsPoolsSelect = assetsPools.Select(c=> 
        new SelectListItem
        {
            Text = $"{c.No}:{c.Description}",
            Value = c.No.ToString(),
            Selected = c.No == Model.No
        });
}
<div class="wrapper row-offcanvas row-offcanvas-left">
<!--Render Finance Sidebar-->
@{ Html.RenderAction("_AdministrationSidebar", "Administration"); }
<aside class="right-side">
<section class="content">
<div class="row">
<div class="col-md-12">
<div class="card">
@using (Html.BeginForm("ViewFixedAssetPooling", "Administration", FormMethod.Post, new {@class = ""}))
{
    @Html.AntiForgeryToken()
    <div class="card-header" data-background-color="company_card">
        <div class="row">
            <div class="col-md-4">
                <h4 class="title">
                    <i>FixedAsset - @Model.No</i>
                </h4>
            </div>
            <div class="col-md-8">
                <a class="btn btn-danger btn-xs pull-right" href="#" data-toggle="modal" data-target="#CopyfixedassetModal">
                    <i class="fa fa-copy"></i>
                    Copy fixed asset
                </a>

                @*
                                        <input type="button" class="btn btn-warning btn-xs pull-right ladda-button" value="Report" onclick="GenerateFleetReport('@Model.No');"/>
                                        *@
                <a class="btn btn-danger pull-right btn-xs" type="submit" href="@Url.Action("FixedAssetPool")">
                    <i class="fa fa-close"></i>
                    Close
                </a>
            </div>
        </div>
    </div>
    <div class="card-content">
        @*@if (Model != null && Model.ErrorStatus == true)
                                {
                                    <div class="alert alert-danger">
                                        <strong>Error! </strong>@Html.Raw(HttpUtility.HtmlDecode(Model.ErrorMessage))
                                    </div>
                                }*@
        <div class="row">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group label-floating">
                            @Html.LabelFor(model => model.No, htmlAttributes: new {@id = "NoLbl", @class = "control-label"})
                            @Html.EditorFor(model => model.No, new {htmlAttributes = new {@class = "form-control", @readonly = true}})
                            @Html.ValidationMessageFor(model => model.No, "", new {@id = "NoError", @class = "text-danger"})
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group label-floating">
                            @Html.LabelFor(model => model.Registration_No, htmlAttributes: new {@id = "EmployeeNameLbl", @class = "control-label"})
                            @Html.EditorFor(model => model.Registration_No, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Registration_No, "", new {@id = "EmployeeNameError", @class = "text-danger"})
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group label-floating">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new {@id = "CreatedOnLbl", @class = "control-label"})
                            @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Description, "", new {@id = "CreatedOnError", @class = "text-danger"})
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group label-floating">
                            @Html.LabelFor(model => model.FA_Class_Code, htmlAttributes: new {@id = "StatusLbl", @class = "control-label"})
                            @Html.DropDownListFor(model => model.FA_Class_Code, Model.FA_Class_Code_Select, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.FA_Class_Code, "", new {@id = "StatusError", @class = "text-danger"})
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group label-floating">
                            @Html.LabelFor(model => model.FA_Subclass_Code, htmlAttributes: new {@id = "DescriptionLbl", @class = "control-label"})
                            @Html.DropDownListFor(model => model.FA_Subclass_Code, Model.FA_Subclass_Code_Select, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.FA_Subclass_Code, "", new {@id = "DescriptionError", @class = "text-danger"})
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group label-floating">
                            @Html.LabelFor(model => model.FA_Location_Code, htmlAttributes: new {@id = "DescriptionLbl", @class = "control-label"})
                            @Html.DropDownListFor(model => model.FA_Location_Code, Model.FA_Location_Code_Select, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.FA_Location_Code, "", new {@id = "DescriptionError", @class = "text-danger"})
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group label-floating">
                            @Html.LabelFor(model => model.Responsible_Employee, htmlAttributes: new {@id = "DescriptionLbl", @class = "control-label"})
                            @Html.DropDownListFor(model => model.Responsible_Employee, Model.Responsible_Employee_Select, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Responsible_Employee, "", new {@id = "DescriptionError", @class = "text-danger"})
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group label-floating">
                            @Html.LabelFor(model => model.Global_Dimension_2_Code, htmlAttributes: new {@id = "DescriptionLbl", @class = "control-label"})
                            @Html.DropDownListFor(model => model.Global_Dimension_2_Code, Model.Global_Dimension_2_Code_Select, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Global_Dimension_2_Code, "", new {@id = "DescriptionError", @class = "text-danger"})
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group label-floating">
                            @Html.LabelFor(model => model.Component_of_Main_Asset, htmlAttributes: new {@id = "DescriptionLbl", @class = "control-label"})
                            @Html.DropDownListFor(model => model.Component_of_Main_Asset, Model.Component_of_Main_Asset_Select, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Component_of_Main_Asset, "", new {@id = "DescriptionError", @class = "text-danger"})
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group label-floating">
                            @Html.LabelFor(model => model.Budgeted_Asset, htmlAttributes: new {@id = "NoLbl", @class = "control-label"})
                            @Html.EditorFor(model => model.Budgeted_Asset, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Budgeted_Asset, "", new {@id = "NoError", @class = "text-danger"})
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group label-floating">
                            @Html.LabelFor(model => model.Serial_No, htmlAttributes: new {@id = "EmployeeNameLbl", @class = "control-label"})
                            @Html.EditorFor(model => model.Serial_No, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Serial_No, "", new {@id = "EmployeeNameError", @class = "text-danger"})
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group label-floating">
                            @Html.LabelFor(model => model.Asset_Tag_No, htmlAttributes: new {@id = "NoLbl", @class = "control-label"})
                            @Html.EditorFor(model => model.Serial_No, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Serial_No, "", new {@id = "NoError", @class = "text-danger"})
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group label-floating">
                            @Html.LabelFor(model => model.Search_Description, htmlAttributes: new {@id = "EmployeeNameLbl", @class = "control-label"})
                            @Html.EditorFor(model => model.Search_Description, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Search_Description, "", new {@id = "EmployeeNameError", @class = "text-danger"})
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group label-floating">
                            @Html.LabelFor(model => model.Inactive, htmlAttributes: new {@id = "NoLbl", @class = "control-label"})
                            @Html.EditorFor(model => model.Inactive, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Inactive, "", new {@id = "NoError", @class = "text-danger"})
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group label-floating">
                            @Html.LabelFor(model => model.Blocked, htmlAttributes: new {@id = "EmployeeNameLbl", @class = "control-label"})
                            @Html.EditorFor(model => model.Blocked, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Blocked, "", new {@id = "EmployeeNameError", @class = "text-danger"})
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group label-floating">
                            @Html.LabelFor(model => model.Acquired, htmlAttributes: new {@id = "EmployeeNameLbl", @class = "control-label"})
                            @Html.EditorFor(model => model.Acquired, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Acquired, "", new {@id = "EmployeeNameError", @class = "text-danger"})
                        </div>
                    </div>
                </div>
                <div class="card">
                    <h7 class="card-header">
                        <span>Maintanance</span>
                    </h7>
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group label-floating">
                                @Html.LabelFor(model => model.Vendor_No, htmlAttributes: new {@id = "NoLbl", @class = "control-label"})
                                @Html.DropDownListFor(model => model.Vendor_No, Model.Vendor_No_Select, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.Vendor_No, "", new {@id = "NoError", @class = "text-danger"})
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group label-floating">
                                @Html.LabelFor(model => model.Maintenance_Vendor_No, htmlAttributes: new {@id = "EmployeeNameLbl", @class = "control-label"})
                                @Html.DropDownListFor(model => model.Maintenance_Vendor_No, Model.Maintenance_Vendor_No_Select, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.Maintenance_Vendor_No, "", new {@id = "EmployeeNameError", @class = "text-danger"})
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group label-floating">
                                @Html.LabelFor(model => model.Under_Maintenance, htmlAttributes: new {@id = "EmployeeNameLbl", @class = "control-label"})
                                @Html.EditorFor(model => model.Under_Maintenance, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.Under_Maintenance, "", new {@id = "EmployeeNameError", @class = "text-danger"})
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group label-floating">
                                @Html.LabelFor(model => model.Next_Service_Date, htmlAttributes: new {@id = "NoLbl", @class = "control-label"})
                                @Html.EditorFor(model => model.Next_Service_Date, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.Next_Service_Date, "", new {@id = "NoError", @class = "text-danger"})
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group label-floating">
                                @Html.LabelFor(model => model.Warranty_Date, htmlAttributes: new {@id = "EmployeeNameLbl", @class = "control-label"})
                                @Html.EditorFor(model => model.Warranty_Date, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.Warranty_Date, "", new {@id = "EmployeeNameError", @class = "text-danger"})
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group label-floating">
                                @Html.LabelFor(model => model.Insured, htmlAttributes: new {@id = "EmployeeNameLbl", @class = "control-label"})
                                @Html.EditorFor(model => model.Insured, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.Insured, "", new {@id = "EmployeeNameError", @class = "text-danger"})
                            </div>
                        </div>
                    </div>
                </div>


                <div class="col-md-12">
                    <input type="submit" class="btn btn-success btn-xs pull-right ladda-button" value="Save Header"/>
                </div>
            </div>

        </div>
    </div>
}

<div class="modal fade" id="CopyfixedassetModal" tabindex="-1" role="dialog" aria-labelledby="dateModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="dateModalLabel">Copy</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <label for=""></label>
                @Html.DropDownList("FACopy",assetsPoolsSelect, new{ @id="faNo"})
                <label for="">No of copies</label>
                <input type="number" class="form-control" value="1" id="NoOfCopies">
                <label for="">first FA No.</label>
                <input type="text" class="form-control" id="firstFANo">
                <label for="">Use FA No. Series</label>
                <input type="checkbox" class="form-control" id="useFaNumberSeries">
                
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="CopyAsset()">Copy Fixed asset</button>
            </div>
        </div>
    </div>
</div>
<div class="card-footer">
    <div class="row">
        <div class="col-md-12">
            @{ Html.RenderAction("DepreciationBook", new {DocNo = Model.No}); }
        </div>
    </div>
</div>
</div>
</div>
</div>
</section>
</aside>
</div>

@section scripts{
    <script type="text/javascript">
        $("select").select2();
        
        function CopyAsset() {
            var faNo = $('#faNo').val();
            var noOfCopies = $('#noOfCopies').val();
            var firstFANo = $('#firstFANo').val();
            var useFaNumberSeries = $("#useFaNumberSeries").is(":checked");
            /*if (rejectionComments.length<=0)
            {
                alert("please add rejection comment");
                return false; 
            }*/
            var Url = '@Url.Action("CopyFixedAsset")' + '?faNo=' + faNo + '&noOfCopies=' + noOfCopies+ '&firstFANo=' + firstFANo+ '&useFaNumberSeries=' + useFaNumberSeries;
            window.location.href = Url;
            console.log(Url)
          }
    </script>
}