//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DynamicsNAV365_StaffPortal.FundsClaimManagementWebServiceReference {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FundsClaimManagementWebService_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService")]
    public partial class FundsClaimManagementWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CheckFundsClaimExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOpenFundsClaimExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateFundsClaimHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyFundsClaimHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundsClaimAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundsClaimStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateFundsClaimLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyFundsClaimLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFundsClaimLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckFundsClaimLinesExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckFundsClaimApprovalWorkflowEnabledOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendFundsClaimApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelFundsClaimApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyPortalDocumentsLocalURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckPortalDocumentsAttachedOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FundsClaimManagementWebService() {
            this.Url = "http://cihebsvr.cihebk.local:7047/CIHEBK/WS/CIHEBKENYA/Codeunit/FundsClaimManagem" +
                "entWebService";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CheckFundsClaimExistsCompletedEventHandler CheckFundsClaimExistsCompleted;
        
        /// <remarks/>
        public event CheckOpenFundsClaimExistsCompletedEventHandler CheckOpenFundsClaimExistsCompleted;
        
        /// <remarks/>
        public event CreateFundsClaimHeaderCompletedEventHandler CreateFundsClaimHeaderCompleted;
        
        /// <remarks/>
        public event ModifyFundsClaimHeaderCompletedEventHandler ModifyFundsClaimHeaderCompleted;
        
        /// <remarks/>
        public event GetFundsClaimAmountCompletedEventHandler GetFundsClaimAmountCompleted;
        
        /// <remarks/>
        public event GetFundsClaimStatusCompletedEventHandler GetFundsClaimStatusCompleted;
        
        /// <remarks/>
        public event CreateFundsClaimLineCompletedEventHandler CreateFundsClaimLineCompleted;
        
        /// <remarks/>
        public event ModifyFundsClaimLineCompletedEventHandler ModifyFundsClaimLineCompleted;
        
        /// <remarks/>
        public event DeleteFundsClaimLineCompletedEventHandler DeleteFundsClaimLineCompleted;
        
        /// <remarks/>
        public event CheckFundsClaimLinesExistCompletedEventHandler CheckFundsClaimLinesExistCompleted;
        
        /// <remarks/>
        public event CheckFundsClaimApprovalWorkflowEnabledCompletedEventHandler CheckFundsClaimApprovalWorkflowEnabledCompleted;
        
        /// <remarks/>
        public event SendFundsClaimApprovalRequestCompletedEventHandler SendFundsClaimApprovalRequestCompleted;
        
        /// <remarks/>
        public event CancelFundsClaimApprovalRequestCompletedEventHandler CancelFundsClaimApprovalRequestCompleted;
        
        /// <remarks/>
        public event ModifyPortalDocumentsLocalURLCompletedEventHandler ModifyPortalDocumentsLocalURLCompleted;
        
        /// <remarks/>
        public event CheckPortalDocumentsAttachedCompletedEventHandler CheckPortalDocumentsAttachedCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService:CheckFunds" +
            "ClaimExists", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", ResponseElementName="CheckFundsClaimExists_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckFundsClaimExists(string imprestNoa46, string employeeNoa46) {
            object[] results = this.Invoke("CheckFundsClaimExists", new object[] {
                        imprestNoa46,
                        employeeNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckFundsClaimExistsAsync(string imprestNoa46, string employeeNoa46) {
            this.CheckFundsClaimExistsAsync(imprestNoa46, employeeNoa46, null);
        }
        
        /// <remarks/>
        public void CheckFundsClaimExistsAsync(string imprestNoa46, string employeeNoa46, object userState) {
            if ((this.CheckFundsClaimExistsOperationCompleted == null)) {
                this.CheckFundsClaimExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckFundsClaimExistsOperationCompleted);
            }
            this.InvokeAsync("CheckFundsClaimExists", new object[] {
                        imprestNoa46,
                        employeeNoa46}, this.CheckFundsClaimExistsOperationCompleted, userState);
        }
        
        private void OnCheckFundsClaimExistsOperationCompleted(object arg) {
            if ((this.CheckFundsClaimExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckFundsClaimExistsCompleted(this, new CheckFundsClaimExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService:CheckOpenF" +
            "undsClaimExists", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", ResponseElementName="CheckOpenFundsClaimExists_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckOpenFundsClaimExists(string employeeNoa46) {
            object[] results = this.Invoke("CheckOpenFundsClaimExists", new object[] {
                        employeeNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckOpenFundsClaimExistsAsync(string employeeNoa46) {
            this.CheckOpenFundsClaimExistsAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void CheckOpenFundsClaimExistsAsync(string employeeNoa46, object userState) {
            if ((this.CheckOpenFundsClaimExistsOperationCompleted == null)) {
                this.CheckOpenFundsClaimExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOpenFundsClaimExistsOperationCompleted);
            }
            this.InvokeAsync("CheckOpenFundsClaimExists", new object[] {
                        employeeNoa46}, this.CheckOpenFundsClaimExistsOperationCompleted, userState);
        }
        
        private void OnCheckOpenFundsClaimExistsOperationCompleted(object arg) {
            if ((this.CheckOpenFundsClaimExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOpenFundsClaimExistsCompleted(this, new CheckOpenFundsClaimExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService:CreateFund" +
            "sClaimHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", ResponseElementName="CreateFundsClaimHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateFundsClaimHeader(string employee_Noa46) {
            object[] results = this.Invoke("CreateFundsClaimHeader", new object[] {
                        employee_Noa46});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateFundsClaimHeaderAsync(string employee_Noa46) {
            this.CreateFundsClaimHeaderAsync(employee_Noa46, null);
        }
        
        /// <remarks/>
        public void CreateFundsClaimHeaderAsync(string employee_Noa46, object userState) {
            if ((this.CreateFundsClaimHeaderOperationCompleted == null)) {
                this.CreateFundsClaimHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFundsClaimHeaderOperationCompleted);
            }
            this.InvokeAsync("CreateFundsClaimHeader", new object[] {
                        employee_Noa46}, this.CreateFundsClaimHeaderOperationCompleted, userState);
        }
        
        private void OnCreateFundsClaimHeaderOperationCompleted(object arg) {
            if ((this.CreateFundsClaimHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFundsClaimHeaderCompleted(this, new CreateFundsClaimHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService:ModifyFund" +
            "sClaimHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", ResponseElementName="ModifyFundsClaimHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ModifyFundsClaimHeader(string imprestNoa46, string employee_Noa46, string description) {
            object[] results = this.Invoke("ModifyFundsClaimHeader", new object[] {
                        imprestNoa46,
                        employee_Noa46,
                        description});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyFundsClaimHeaderAsync(string imprestNoa46, string employee_Noa46, string description) {
            this.ModifyFundsClaimHeaderAsync(imprestNoa46, employee_Noa46, description, null);
        }
        
        /// <remarks/>
        public void ModifyFundsClaimHeaderAsync(string imprestNoa46, string employee_Noa46, string description, object userState) {
            if ((this.ModifyFundsClaimHeaderOperationCompleted == null)) {
                this.ModifyFundsClaimHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyFundsClaimHeaderOperationCompleted);
            }
            this.InvokeAsync("ModifyFundsClaimHeader", new object[] {
                        imprestNoa46,
                        employee_Noa46,
                        description}, this.ModifyFundsClaimHeaderOperationCompleted, userState);
        }
        
        private void OnModifyFundsClaimHeaderOperationCompleted(object arg) {
            if ((this.ModifyFundsClaimHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyFundsClaimHeaderCompleted(this, new ModifyFundsClaimHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService:GetFundsCl" +
            "aimAmount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", ResponseElementName="GetFundsClaimAmount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal GetFundsClaimAmount(string imprestNoa46) {
            object[] results = this.Invoke("GetFundsClaimAmount", new object[] {
                        imprestNoa46});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundsClaimAmountAsync(string imprestNoa46) {
            this.GetFundsClaimAmountAsync(imprestNoa46, null);
        }
        
        /// <remarks/>
        public void GetFundsClaimAmountAsync(string imprestNoa46, object userState) {
            if ((this.GetFundsClaimAmountOperationCompleted == null)) {
                this.GetFundsClaimAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundsClaimAmountOperationCompleted);
            }
            this.InvokeAsync("GetFundsClaimAmount", new object[] {
                        imprestNoa46}, this.GetFundsClaimAmountOperationCompleted, userState);
        }
        
        private void OnGetFundsClaimAmountOperationCompleted(object arg) {
            if ((this.GetFundsClaimAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundsClaimAmountCompleted(this, new GetFundsClaimAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService:GetFundsCl" +
            "aimStatus", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", ResponseElementName="GetFundsClaimStatus_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetFundsClaimStatus(string fundsClaimNoa46) {
            object[] results = this.Invoke("GetFundsClaimStatus", new object[] {
                        fundsClaimNoa46});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundsClaimStatusAsync(string fundsClaimNoa46) {
            this.GetFundsClaimStatusAsync(fundsClaimNoa46, null);
        }
        
        /// <remarks/>
        public void GetFundsClaimStatusAsync(string fundsClaimNoa46, object userState) {
            if ((this.GetFundsClaimStatusOperationCompleted == null)) {
                this.GetFundsClaimStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundsClaimStatusOperationCompleted);
            }
            this.InvokeAsync("GetFundsClaimStatus", new object[] {
                        fundsClaimNoa46}, this.GetFundsClaimStatusOperationCompleted, userState);
        }
        
        private void OnGetFundsClaimStatusOperationCompleted(object arg) {
            if ((this.GetFundsClaimStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundsClaimStatusCompleted(this, new GetFundsClaimStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService:CreateFund" +
            "sClaimLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", ResponseElementName="CreateFundsClaimLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreateFundsClaimLine(string fundsClaimNoa46, string fundsClaimCode, decimal amount, string fromCity, string toCity, string description) {
            object[] results = this.Invoke("CreateFundsClaimLine", new object[] {
                        fundsClaimNoa46,
                        fundsClaimCode,
                        amount,
                        fromCity,
                        toCity,
                        description});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateFundsClaimLineAsync(string fundsClaimNoa46, string fundsClaimCode, decimal amount, string fromCity, string toCity, string description) {
            this.CreateFundsClaimLineAsync(fundsClaimNoa46, fundsClaimCode, amount, fromCity, toCity, description, null);
        }
        
        /// <remarks/>
        public void CreateFundsClaimLineAsync(string fundsClaimNoa46, string fundsClaimCode, decimal amount, string fromCity, string toCity, string description, object userState) {
            if ((this.CreateFundsClaimLineOperationCompleted == null)) {
                this.CreateFundsClaimLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFundsClaimLineOperationCompleted);
            }
            this.InvokeAsync("CreateFundsClaimLine", new object[] {
                        fundsClaimNoa46,
                        fundsClaimCode,
                        amount,
                        fromCity,
                        toCity,
                        description}, this.CreateFundsClaimLineOperationCompleted, userState);
        }
        
        private void OnCreateFundsClaimLineOperationCompleted(object arg) {
            if ((this.CreateFundsClaimLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFundsClaimLineCompleted(this, new CreateFundsClaimLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService:ModifyFund" +
            "sClaimLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", ResponseElementName="ModifyFundsClaimLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ModifyFundsClaimLine(int lineNoa46, string fundsClaimNoa46, string fundsClaimCode, decimal amount, string fromCity, string toCity, string description) {
            object[] results = this.Invoke("ModifyFundsClaimLine", new object[] {
                        lineNoa46,
                        fundsClaimNoa46,
                        fundsClaimCode,
                        amount,
                        fromCity,
                        toCity,
                        description});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyFundsClaimLineAsync(int lineNoa46, string fundsClaimNoa46, string fundsClaimCode, decimal amount, string fromCity, string toCity, string description) {
            this.ModifyFundsClaimLineAsync(lineNoa46, fundsClaimNoa46, fundsClaimCode, amount, fromCity, toCity, description, null);
        }
        
        /// <remarks/>
        public void ModifyFundsClaimLineAsync(int lineNoa46, string fundsClaimNoa46, string fundsClaimCode, decimal amount, string fromCity, string toCity, string description, object userState) {
            if ((this.ModifyFundsClaimLineOperationCompleted == null)) {
                this.ModifyFundsClaimLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyFundsClaimLineOperationCompleted);
            }
            this.InvokeAsync("ModifyFundsClaimLine", new object[] {
                        lineNoa46,
                        fundsClaimNoa46,
                        fundsClaimCode,
                        amount,
                        fromCity,
                        toCity,
                        description}, this.ModifyFundsClaimLineOperationCompleted, userState);
        }
        
        private void OnModifyFundsClaimLineOperationCompleted(object arg) {
            if ((this.ModifyFundsClaimLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyFundsClaimLineCompleted(this, new ModifyFundsClaimLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService:DeleteFund" +
            "sClaimLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", ResponseElementName="DeleteFundsClaimLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteFundsClaimLine(int lineNoa46, string fundsClaimNoa46) {
            object[] results = this.Invoke("DeleteFundsClaimLine", new object[] {
                        lineNoa46,
                        fundsClaimNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFundsClaimLineAsync(int lineNoa46, string fundsClaimNoa46) {
            this.DeleteFundsClaimLineAsync(lineNoa46, fundsClaimNoa46, null);
        }
        
        /// <remarks/>
        public void DeleteFundsClaimLineAsync(int lineNoa46, string fundsClaimNoa46, object userState) {
            if ((this.DeleteFundsClaimLineOperationCompleted == null)) {
                this.DeleteFundsClaimLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFundsClaimLineOperationCompleted);
            }
            this.InvokeAsync("DeleteFundsClaimLine", new object[] {
                        lineNoa46,
                        fundsClaimNoa46}, this.DeleteFundsClaimLineOperationCompleted, userState);
        }
        
        private void OnDeleteFundsClaimLineOperationCompleted(object arg) {
            if ((this.DeleteFundsClaimLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFundsClaimLineCompleted(this, new DeleteFundsClaimLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService:CheckFunds" +
            "ClaimLinesExist", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", ResponseElementName="CheckFundsClaimLinesExist_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckFundsClaimLinesExist(string fundsClaimNoa46) {
            object[] results = this.Invoke("CheckFundsClaimLinesExist", new object[] {
                        fundsClaimNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckFundsClaimLinesExistAsync(string fundsClaimNoa46) {
            this.CheckFundsClaimLinesExistAsync(fundsClaimNoa46, null);
        }
        
        /// <remarks/>
        public void CheckFundsClaimLinesExistAsync(string fundsClaimNoa46, object userState) {
            if ((this.CheckFundsClaimLinesExistOperationCompleted == null)) {
                this.CheckFundsClaimLinesExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckFundsClaimLinesExistOperationCompleted);
            }
            this.InvokeAsync("CheckFundsClaimLinesExist", new object[] {
                        fundsClaimNoa46}, this.CheckFundsClaimLinesExistOperationCompleted, userState);
        }
        
        private void OnCheckFundsClaimLinesExistOperationCompleted(object arg) {
            if ((this.CheckFundsClaimLinesExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckFundsClaimLinesExistCompleted(this, new CheckFundsClaimLinesExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService:CheckFunds" +
            "ClaimApprovalWorkflowEnabled", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", ResponseElementName="CheckFundsClaimApprovalWorkflowEnabled_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckFundsClaimApprovalWorkflowEnabled(string fundsClaimNoa46) {
            object[] results = this.Invoke("CheckFundsClaimApprovalWorkflowEnabled", new object[] {
                        fundsClaimNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckFundsClaimApprovalWorkflowEnabledAsync(string fundsClaimNoa46) {
            this.CheckFundsClaimApprovalWorkflowEnabledAsync(fundsClaimNoa46, null);
        }
        
        /// <remarks/>
        public void CheckFundsClaimApprovalWorkflowEnabledAsync(string fundsClaimNoa46, object userState) {
            if ((this.CheckFundsClaimApprovalWorkflowEnabledOperationCompleted == null)) {
                this.CheckFundsClaimApprovalWorkflowEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckFundsClaimApprovalWorkflowEnabledOperationCompleted);
            }
            this.InvokeAsync("CheckFundsClaimApprovalWorkflowEnabled", new object[] {
                        fundsClaimNoa46}, this.CheckFundsClaimApprovalWorkflowEnabledOperationCompleted, userState);
        }
        
        private void OnCheckFundsClaimApprovalWorkflowEnabledOperationCompleted(object arg) {
            if ((this.CheckFundsClaimApprovalWorkflowEnabledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckFundsClaimApprovalWorkflowEnabledCompleted(this, new CheckFundsClaimApprovalWorkflowEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService:SendFundsC" +
            "laimApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", ResponseElementName="SendFundsClaimApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SendFundsClaimApprovalRequest(string fundsClaimNoa46) {
            object[] results = this.Invoke("SendFundsClaimApprovalRequest", new object[] {
                        fundsClaimNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendFundsClaimApprovalRequestAsync(string fundsClaimNoa46) {
            this.SendFundsClaimApprovalRequestAsync(fundsClaimNoa46, null);
        }
        
        /// <remarks/>
        public void SendFundsClaimApprovalRequestAsync(string fundsClaimNoa46, object userState) {
            if ((this.SendFundsClaimApprovalRequestOperationCompleted == null)) {
                this.SendFundsClaimApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFundsClaimApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("SendFundsClaimApprovalRequest", new object[] {
                        fundsClaimNoa46}, this.SendFundsClaimApprovalRequestOperationCompleted, userState);
        }
        
        private void OnSendFundsClaimApprovalRequestOperationCompleted(object arg) {
            if ((this.SendFundsClaimApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFundsClaimApprovalRequestCompleted(this, new SendFundsClaimApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService:CancelFund" +
            "sClaimApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", ResponseElementName="CancelFundsClaimApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CancelFundsClaimApprovalRequest(string fundsClaimNoa46) {
            object[] results = this.Invoke("CancelFundsClaimApprovalRequest", new object[] {
                        fundsClaimNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CancelFundsClaimApprovalRequestAsync(string fundsClaimNoa46) {
            this.CancelFundsClaimApprovalRequestAsync(fundsClaimNoa46, null);
        }
        
        /// <remarks/>
        public void CancelFundsClaimApprovalRequestAsync(string fundsClaimNoa46, object userState) {
            if ((this.CancelFundsClaimApprovalRequestOperationCompleted == null)) {
                this.CancelFundsClaimApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelFundsClaimApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("CancelFundsClaimApprovalRequest", new object[] {
                        fundsClaimNoa46}, this.CancelFundsClaimApprovalRequestOperationCompleted, userState);
        }
        
        private void OnCancelFundsClaimApprovalRequestOperationCompleted(object arg) {
            if ((this.CancelFundsClaimApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelFundsClaimApprovalRequestCompleted(this, new CancelFundsClaimApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService:ModifyPort" +
            "alDocumentsLocalURL", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", ResponseElementName="ModifyPortalDocumentsLocalURL_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ModifyPortalDocumentsLocalURL(string documentNoa46, string documentCode, string localURL) {
            object[] results = this.Invoke("ModifyPortalDocumentsLocalURL", new object[] {
                        documentNoa46,
                        documentCode,
                        localURL});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyPortalDocumentsLocalURLAsync(string documentNoa46, string documentCode, string localURL) {
            this.ModifyPortalDocumentsLocalURLAsync(documentNoa46, documentCode, localURL, null);
        }
        
        /// <remarks/>
        public void ModifyPortalDocumentsLocalURLAsync(string documentNoa46, string documentCode, string localURL, object userState) {
            if ((this.ModifyPortalDocumentsLocalURLOperationCompleted == null)) {
                this.ModifyPortalDocumentsLocalURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyPortalDocumentsLocalURLOperationCompleted);
            }
            this.InvokeAsync("ModifyPortalDocumentsLocalURL", new object[] {
                        documentNoa46,
                        documentCode,
                        localURL}, this.ModifyPortalDocumentsLocalURLOperationCompleted, userState);
        }
        
        private void OnModifyPortalDocumentsLocalURLOperationCompleted(object arg) {
            if ((this.ModifyPortalDocumentsLocalURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyPortalDocumentsLocalURLCompleted(this, new ModifyPortalDocumentsLocalURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService:CheckPorta" +
            "lDocumentsAttached", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", ResponseElementName="CheckPortalDocumentsAttached_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/FundsClaimManagementWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckPortalDocumentsAttached(string documentNoa46) {
            object[] results = this.Invoke("CheckPortalDocumentsAttached", new object[] {
                        documentNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckPortalDocumentsAttachedAsync(string documentNoa46) {
            this.CheckPortalDocumentsAttachedAsync(documentNoa46, null);
        }
        
        /// <remarks/>
        public void CheckPortalDocumentsAttachedAsync(string documentNoa46, object userState) {
            if ((this.CheckPortalDocumentsAttachedOperationCompleted == null)) {
                this.CheckPortalDocumentsAttachedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckPortalDocumentsAttachedOperationCompleted);
            }
            this.InvokeAsync("CheckPortalDocumentsAttached", new object[] {
                        documentNoa46}, this.CheckPortalDocumentsAttachedOperationCompleted, userState);
        }
        
        private void OnCheckPortalDocumentsAttachedOperationCompleted(object arg) {
            if ((this.CheckPortalDocumentsAttachedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckPortalDocumentsAttachedCompleted(this, new CheckPortalDocumentsAttachedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckFundsClaimExistsCompletedEventHandler(object sender, CheckFundsClaimExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckFundsClaimExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckFundsClaimExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckOpenFundsClaimExistsCompletedEventHandler(object sender, CheckOpenFundsClaimExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckOpenFundsClaimExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckOpenFundsClaimExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateFundsClaimHeaderCompletedEventHandler(object sender, CreateFundsClaimHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateFundsClaimHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateFundsClaimHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ModifyFundsClaimHeaderCompletedEventHandler(object sender, ModifyFundsClaimHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyFundsClaimHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyFundsClaimHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetFundsClaimAmountCompletedEventHandler(object sender, GetFundsClaimAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundsClaimAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundsClaimAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetFundsClaimStatusCompletedEventHandler(object sender, GetFundsClaimStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundsClaimStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundsClaimStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateFundsClaimLineCompletedEventHandler(object sender, CreateFundsClaimLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateFundsClaimLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateFundsClaimLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ModifyFundsClaimLineCompletedEventHandler(object sender, ModifyFundsClaimLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyFundsClaimLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyFundsClaimLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteFundsClaimLineCompletedEventHandler(object sender, DeleteFundsClaimLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFundsClaimLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFundsClaimLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckFundsClaimLinesExistCompletedEventHandler(object sender, CheckFundsClaimLinesExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckFundsClaimLinesExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckFundsClaimLinesExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckFundsClaimApprovalWorkflowEnabledCompletedEventHandler(object sender, CheckFundsClaimApprovalWorkflowEnabledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckFundsClaimApprovalWorkflowEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckFundsClaimApprovalWorkflowEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendFundsClaimApprovalRequestCompletedEventHandler(object sender, SendFundsClaimApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendFundsClaimApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendFundsClaimApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelFundsClaimApprovalRequestCompletedEventHandler(object sender, CancelFundsClaimApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelFundsClaimApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelFundsClaimApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ModifyPortalDocumentsLocalURLCompletedEventHandler(object sender, ModifyPortalDocumentsLocalURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyPortalDocumentsLocalURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyPortalDocumentsLocalURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckPortalDocumentsAttachedCompletedEventHandler(object sender, CheckPortalDocumentsAttachedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckPortalDocumentsAttachedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckPortalDocumentsAttachedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591