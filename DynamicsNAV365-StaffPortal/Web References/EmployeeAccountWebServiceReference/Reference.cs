//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DynamicsNAV365_StaffPortal.EmployeeAccountWebServiceReference {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EmployeeAccountWebService_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService")]
    public partial class EmployeeAccountWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback EmployeeExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeAccountIsActiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCleanedEmployeeNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeGenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeDateOfBirthOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeAgeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeRetirementDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeEmailAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateEmployeeDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsEmployeeDefaultPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPasswordResetTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPasswordResetTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsPasswordResetTokenExpiredOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPasswordResetLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetEmployeePortalPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EmployeeAccountWebService() {
            this.Url = global::DynamicsNAV365_StaffPortal.Properties.Settings.Default.DynamicsNAV365_StaffPortal_EmployeeAccountWebServiceReference_EmployeeAccountWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event EmployeeExistsCompletedEventHandler EmployeeExistsCompleted;
        
        /// <remarks/>
        public event EmployeeAccountIsActiveCompletedEventHandler EmployeeAccountIsActiveCompleted;
        
        /// <remarks/>
        public event GetCleanedEmployeeNoCompletedEventHandler GetCleanedEmployeeNoCompleted;
        
        /// <remarks/>
        public event GetEmployeeNameCompletedEventHandler GetEmployeeNameCompleted;
        
        /// <remarks/>
        public event GetEmployeeGenderCompletedEventHandler GetEmployeeGenderCompleted;
        
        /// <remarks/>
        public event GetEmployeeDateOfBirthCompletedEventHandler GetEmployeeDateOfBirthCompleted;
        
        /// <remarks/>
        public event GetEmployeeAgeCompletedEventHandler GetEmployeeAgeCompleted;
        
        /// <remarks/>
        public event GetEmployeeRetirementDateCompletedEventHandler GetEmployeeRetirementDateCompleted;
        
        /// <remarks/>
        public event GetEmployeeEmailAddressCompletedEventHandler GetEmployeeEmailAddressCompleted;
        
        /// <remarks/>
        public event GetEmployeeUserIDCompletedEventHandler GetEmployeeUserIDCompleted;
        
        /// <remarks/>
        public event CreateEmployeeDirectoryCompletedEventHandler CreateEmployeeDirectoryCompleted;
        
        /// <remarks/>
        public event CreateEmployeeCompletedEventHandler CreateEmployeeCompleted;
        
        /// <remarks/>
        public event LoginEmployeeCompletedEventHandler LoginEmployeeCompleted;
        
        /// <remarks/>
        public event IsEmployeeDefaultPasswordCompletedEventHandler IsEmployeeDefaultPasswordCompleted;
        
        /// <remarks/>
        public event SetPasswordResetTokenCompletedEventHandler SetPasswordResetTokenCompleted;
        
        /// <remarks/>
        public event GetPasswordResetTokenCompletedEventHandler GetPasswordResetTokenCompleted;
        
        /// <remarks/>
        public event IsPasswordResetTokenExpiredCompletedEventHandler IsPasswordResetTokenExpiredCompleted;
        
        /// <remarks/>
        public event SendPasswordResetLinkCompletedEventHandler SendPasswordResetLinkCompleted;
        
        /// <remarks/>
        public event ResetEmployeePortalPasswordCompletedEventHandler ResetEmployeePortalPasswordCompleted;
        
        /// <remarks/>
        public event GetEmployeePasswordCompletedEventHandler GetEmployeePasswordCompleted;
        
        /// <remarks/>
        public event GetEmployeeProfileCompletedEventHandler GetEmployeeProfileCompleted;
        
        /// <remarks/>
        public event GetEmployeeCompletedEventHandler GetEmployeeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService:EmployeeExists", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", ResponseElementName="EmployeeExists_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool EmployeeExists(string employeeNo) {
            object[] results = this.Invoke("EmployeeExists", new object[] {
                        employeeNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeExistsAsync(string employeeNo) {
            this.EmployeeExistsAsync(employeeNo, null);
        }
        
        /// <remarks/>
        public void EmployeeExistsAsync(string employeeNo, object userState) {
            if ((this.EmployeeExistsOperationCompleted == null)) {
                this.EmployeeExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeExistsOperationCompleted);
            }
            this.InvokeAsync("EmployeeExists", new object[] {
                        employeeNo}, this.EmployeeExistsOperationCompleted, userState);
        }
        
        private void OnEmployeeExistsOperationCompleted(object arg) {
            if ((this.EmployeeExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeExistsCompleted(this, new EmployeeExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService:EmployeeAccount" +
            "IsActive", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", ResponseElementName="EmployeeAccountIsActive_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool EmployeeAccountIsActive(string employeeNoa46) {
            object[] results = this.Invoke("EmployeeAccountIsActive", new object[] {
                        employeeNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeAccountIsActiveAsync(string employeeNoa46) {
            this.EmployeeAccountIsActiveAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void EmployeeAccountIsActiveAsync(string employeeNoa46, object userState) {
            if ((this.EmployeeAccountIsActiveOperationCompleted == null)) {
                this.EmployeeAccountIsActiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeAccountIsActiveOperationCompleted);
            }
            this.InvokeAsync("EmployeeAccountIsActive", new object[] {
                        employeeNoa46}, this.EmployeeAccountIsActiveOperationCompleted, userState);
        }
        
        private void OnEmployeeAccountIsActiveOperationCompleted(object arg) {
            if ((this.EmployeeAccountIsActiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeAccountIsActiveCompleted(this, new EmployeeAccountIsActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService:GetCleanedEmplo" +
            "yeeNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", ResponseElementName="GetCleanedEmployeeNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCleanedEmployeeNo(string employeeNoa46) {
            object[] results = this.Invoke("GetCleanedEmployeeNo", new object[] {
                        employeeNoa46});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCleanedEmployeeNoAsync(string employeeNoa46) {
            this.GetCleanedEmployeeNoAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void GetCleanedEmployeeNoAsync(string employeeNoa46, object userState) {
            if ((this.GetCleanedEmployeeNoOperationCompleted == null)) {
                this.GetCleanedEmployeeNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCleanedEmployeeNoOperationCompleted);
            }
            this.InvokeAsync("GetCleanedEmployeeNo", new object[] {
                        employeeNoa46}, this.GetCleanedEmployeeNoOperationCompleted, userState);
        }
        
        private void OnGetCleanedEmployeeNoOperationCompleted(object arg) {
            if ((this.GetCleanedEmployeeNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCleanedEmployeeNoCompleted(this, new GetCleanedEmployeeNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService:GetEmployeeName" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", ResponseElementName="GetEmployeeName_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetEmployeeName(string employeeNoa46) {
            object[] results = this.Invoke("GetEmployeeName", new object[] {
                        employeeNoa46});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeNameAsync(string employeeNoa46) {
            this.GetEmployeeNameAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void GetEmployeeNameAsync(string employeeNoa46, object userState) {
            if ((this.GetEmployeeNameOperationCompleted == null)) {
                this.GetEmployeeNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeNameOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeName", new object[] {
                        employeeNoa46}, this.GetEmployeeNameOperationCompleted, userState);
        }
        
        private void OnGetEmployeeNameOperationCompleted(object arg) {
            if ((this.GetEmployeeNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeNameCompleted(this, new GetEmployeeNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService:GetEmployeeGend" +
            "er", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", ResponseElementName="GetEmployeeGender_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetEmployeeGender(string employeeNoa46) {
            object[] results = this.Invoke("GetEmployeeGender", new object[] {
                        employeeNoa46});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeGenderAsync(string employeeNoa46) {
            this.GetEmployeeGenderAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void GetEmployeeGenderAsync(string employeeNoa46, object userState) {
            if ((this.GetEmployeeGenderOperationCompleted == null)) {
                this.GetEmployeeGenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeGenderOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeGender", new object[] {
                        employeeNoa46}, this.GetEmployeeGenderOperationCompleted, userState);
        }
        
        private void OnGetEmployeeGenderOperationCompleted(object arg) {
            if ((this.GetEmployeeGenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeGenderCompleted(this, new GetEmployeeGenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService:GetEmployeeDate" +
            "OfBirth", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", ResponseElementName="GetEmployeeDateOfBirth_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetEmployeeDateOfBirth(string employeeNoa46) {
            object[] results = this.Invoke("GetEmployeeDateOfBirth", new object[] {
                        employeeNoa46});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeDateOfBirthAsync(string employeeNoa46) {
            this.GetEmployeeDateOfBirthAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void GetEmployeeDateOfBirthAsync(string employeeNoa46, object userState) {
            if ((this.GetEmployeeDateOfBirthOperationCompleted == null)) {
                this.GetEmployeeDateOfBirthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeDateOfBirthOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeDateOfBirth", new object[] {
                        employeeNoa46}, this.GetEmployeeDateOfBirthOperationCompleted, userState);
        }
        
        private void OnGetEmployeeDateOfBirthOperationCompleted(object arg) {
            if ((this.GetEmployeeDateOfBirthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeDateOfBirthCompleted(this, new GetEmployeeDateOfBirthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService:GetEmployeeAge", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", ResponseElementName="GetEmployeeAge_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetEmployeeAge(string employeeNoa46) {
            object[] results = this.Invoke("GetEmployeeAge", new object[] {
                        employeeNoa46});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeAgeAsync(string employeeNoa46) {
            this.GetEmployeeAgeAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void GetEmployeeAgeAsync(string employeeNoa46, object userState) {
            if ((this.GetEmployeeAgeOperationCompleted == null)) {
                this.GetEmployeeAgeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeAgeOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeAge", new object[] {
                        employeeNoa46}, this.GetEmployeeAgeOperationCompleted, userState);
        }
        
        private void OnGetEmployeeAgeOperationCompleted(object arg) {
            if ((this.GetEmployeeAgeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeAgeCompleted(this, new GetEmployeeAgeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService:GetEmployeeReti" +
            "rementDate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", ResponseElementName="GetEmployeeRetirementDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetEmployeeRetirementDate(string employeeNoa46) {
            object[] results = this.Invoke("GetEmployeeRetirementDate", new object[] {
                        employeeNoa46});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeRetirementDateAsync(string employeeNoa46) {
            this.GetEmployeeRetirementDateAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void GetEmployeeRetirementDateAsync(string employeeNoa46, object userState) {
            if ((this.GetEmployeeRetirementDateOperationCompleted == null)) {
                this.GetEmployeeRetirementDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeRetirementDateOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeRetirementDate", new object[] {
                        employeeNoa46}, this.GetEmployeeRetirementDateOperationCompleted, userState);
        }
        
        private void OnGetEmployeeRetirementDateOperationCompleted(object arg) {
            if ((this.GetEmployeeRetirementDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeRetirementDateCompleted(this, new GetEmployeeRetirementDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService:GetEmployeeEmai" +
            "lAddress", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", ResponseElementName="GetEmployeeEmailAddress_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetEmployeeEmailAddress(string employeeNoa46) {
            object[] results = this.Invoke("GetEmployeeEmailAddress", new object[] {
                        employeeNoa46});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeEmailAddressAsync(string employeeNoa46) {
            this.GetEmployeeEmailAddressAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void GetEmployeeEmailAddressAsync(string employeeNoa46, object userState) {
            if ((this.GetEmployeeEmailAddressOperationCompleted == null)) {
                this.GetEmployeeEmailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeEmailAddressOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeEmailAddress", new object[] {
                        employeeNoa46}, this.GetEmployeeEmailAddressOperationCompleted, userState);
        }
        
        private void OnGetEmployeeEmailAddressOperationCompleted(object arg) {
            if ((this.GetEmployeeEmailAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeEmailAddressCompleted(this, new GetEmployeeEmailAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService:GetEmployeeUser" +
            "ID", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", ResponseElementName="GetEmployeeUserID_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetEmployeeUserID(string employeeNoa46) {
            object[] results = this.Invoke("GetEmployeeUserID", new object[] {
                        employeeNoa46});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeUserIDAsync(string employeeNoa46) {
            this.GetEmployeeUserIDAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void GetEmployeeUserIDAsync(string employeeNoa46, object userState) {
            if ((this.GetEmployeeUserIDOperationCompleted == null)) {
                this.GetEmployeeUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeUserIDOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeUserID", new object[] {
                        employeeNoa46}, this.GetEmployeeUserIDOperationCompleted, userState);
        }
        
        private void OnGetEmployeeUserIDOperationCompleted(object arg) {
            if ((this.GetEmployeeUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeUserIDCompleted(this, new GetEmployeeUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService:CreateEmployeeD" +
            "irectory", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", ResponseElementName="CreateEmployeeDirectory_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateEmployeeDirectory(string employeeNoa46) {
            this.Invoke("CreateEmployeeDirectory", new object[] {
                        employeeNoa46});
        }
        
        /// <remarks/>
        public void CreateEmployeeDirectoryAsync(string employeeNoa46) {
            this.CreateEmployeeDirectoryAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void CreateEmployeeDirectoryAsync(string employeeNoa46, object userState) {
            if ((this.CreateEmployeeDirectoryOperationCompleted == null)) {
                this.CreateEmployeeDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateEmployeeDirectoryOperationCompleted);
            }
            this.InvokeAsync("CreateEmployeeDirectory", new object[] {
                        employeeNoa46}, this.CreateEmployeeDirectoryOperationCompleted, userState);
        }
        
        private void OnCreateEmployeeDirectoryOperationCompleted(object arg) {
            if ((this.CreateEmployeeDirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateEmployeeDirectoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService:CreateEmployee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", ResponseElementName="CreateEmployee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreateEmployee(string customerName, string address, string phone, string email, string customerType, decimal creditLimit, string tin, string notes, string layaltyNoa46, decimal discount) {
            object[] results = this.Invoke("CreateEmployee", new object[] {
                        customerName,
                        address,
                        phone,
                        email,
                        customerType,
                        creditLimit,
                        tin,
                        notes,
                        layaltyNoa46,
                        discount});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateEmployeeAsync(string customerName, string address, string phone, string email, string customerType, decimal creditLimit, string tin, string notes, string layaltyNoa46, decimal discount) {
            this.CreateEmployeeAsync(customerName, address, phone, email, customerType, creditLimit, tin, notes, layaltyNoa46, discount, null);
        }
        
        /// <remarks/>
        public void CreateEmployeeAsync(string customerName, string address, string phone, string email, string customerType, decimal creditLimit, string tin, string notes, string layaltyNoa46, decimal discount, object userState) {
            if ((this.CreateEmployeeOperationCompleted == null)) {
                this.CreateEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateEmployeeOperationCompleted);
            }
            this.InvokeAsync("CreateEmployee", new object[] {
                        customerName,
                        address,
                        phone,
                        email,
                        customerType,
                        creditLimit,
                        tin,
                        notes,
                        layaltyNoa46,
                        discount}, this.CreateEmployeeOperationCompleted, userState);
        }
        
        private void OnCreateEmployeeOperationCompleted(object arg) {
            if ((this.CreateEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateEmployeeCompleted(this, new CreateEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService:LoginEmployee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", ResponseElementName="LoginEmployee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool LoginEmployee(string employeeNoa46, string password) {
            object[] results = this.Invoke("LoginEmployee", new object[] {
                        employeeNoa46,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoginEmployeeAsync(string employeeNoa46, string password) {
            this.LoginEmployeeAsync(employeeNoa46, password, null);
        }
        
        /// <remarks/>
        public void LoginEmployeeAsync(string employeeNoa46, string password, object userState) {
            if ((this.LoginEmployeeOperationCompleted == null)) {
                this.LoginEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginEmployeeOperationCompleted);
            }
            this.InvokeAsync("LoginEmployee", new object[] {
                        employeeNoa46,
                        password}, this.LoginEmployeeOperationCompleted, userState);
        }
        
        private void OnLoginEmployeeOperationCompleted(object arg) {
            if ((this.LoginEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginEmployeeCompleted(this, new LoginEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService:IsEmployeeDefau" +
            "ltPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", ResponseElementName="IsEmployeeDefaultPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool IsEmployeeDefaultPassword(string employeeNoa46) {
            object[] results = this.Invoke("IsEmployeeDefaultPassword", new object[] {
                        employeeNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsEmployeeDefaultPasswordAsync(string employeeNoa46) {
            this.IsEmployeeDefaultPasswordAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void IsEmployeeDefaultPasswordAsync(string employeeNoa46, object userState) {
            if ((this.IsEmployeeDefaultPasswordOperationCompleted == null)) {
                this.IsEmployeeDefaultPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsEmployeeDefaultPasswordOperationCompleted);
            }
            this.InvokeAsync("IsEmployeeDefaultPassword", new object[] {
                        employeeNoa46}, this.IsEmployeeDefaultPasswordOperationCompleted, userState);
        }
        
        private void OnIsEmployeeDefaultPasswordOperationCompleted(object arg) {
            if ((this.IsEmployeeDefaultPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsEmployeeDefaultPasswordCompleted(this, new IsEmployeeDefaultPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService:SetPasswordRese" +
            "tToken", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", ResponseElementName="SetPasswordResetToken_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SetPasswordResetToken(string employeeNoa46, string passwordResetToken) {
            object[] results = this.Invoke("SetPasswordResetToken", new object[] {
                        employeeNoa46,
                        passwordResetToken});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetPasswordResetTokenAsync(string employeeNoa46, string passwordResetToken) {
            this.SetPasswordResetTokenAsync(employeeNoa46, passwordResetToken, null);
        }
        
        /// <remarks/>
        public void SetPasswordResetTokenAsync(string employeeNoa46, string passwordResetToken, object userState) {
            if ((this.SetPasswordResetTokenOperationCompleted == null)) {
                this.SetPasswordResetTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPasswordResetTokenOperationCompleted);
            }
            this.InvokeAsync("SetPasswordResetToken", new object[] {
                        employeeNoa46,
                        passwordResetToken}, this.SetPasswordResetTokenOperationCompleted, userState);
        }
        
        private void OnSetPasswordResetTokenOperationCompleted(object arg) {
            if ((this.SetPasswordResetTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPasswordResetTokenCompleted(this, new SetPasswordResetTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService:GetPasswordRese" +
            "tToken", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", ResponseElementName="GetPasswordResetToken_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetPasswordResetToken(string employeeNoa46) {
            object[] results = this.Invoke("GetPasswordResetToken", new object[] {
                        employeeNoa46});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPasswordResetTokenAsync(string employeeNoa46) {
            this.GetPasswordResetTokenAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void GetPasswordResetTokenAsync(string employeeNoa46, object userState) {
            if ((this.GetPasswordResetTokenOperationCompleted == null)) {
                this.GetPasswordResetTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPasswordResetTokenOperationCompleted);
            }
            this.InvokeAsync("GetPasswordResetToken", new object[] {
                        employeeNoa46}, this.GetPasswordResetTokenOperationCompleted, userState);
        }
        
        private void OnGetPasswordResetTokenOperationCompleted(object arg) {
            if ((this.GetPasswordResetTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPasswordResetTokenCompleted(this, new GetPasswordResetTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService:IsPasswordReset" +
            "TokenExpired", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", ResponseElementName="IsPasswordResetTokenExpired_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool IsPasswordResetTokenExpired(string employeeNoa46, string passwordResetToken) {
            object[] results = this.Invoke("IsPasswordResetTokenExpired", new object[] {
                        employeeNoa46,
                        passwordResetToken});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsPasswordResetTokenExpiredAsync(string employeeNoa46, string passwordResetToken) {
            this.IsPasswordResetTokenExpiredAsync(employeeNoa46, passwordResetToken, null);
        }
        
        /// <remarks/>
        public void IsPasswordResetTokenExpiredAsync(string employeeNoa46, string passwordResetToken, object userState) {
            if ((this.IsPasswordResetTokenExpiredOperationCompleted == null)) {
                this.IsPasswordResetTokenExpiredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsPasswordResetTokenExpiredOperationCompleted);
            }
            this.InvokeAsync("IsPasswordResetTokenExpired", new object[] {
                        employeeNoa46,
                        passwordResetToken}, this.IsPasswordResetTokenExpiredOperationCompleted, userState);
        }
        
        private void OnIsPasswordResetTokenExpiredOperationCompleted(object arg) {
            if ((this.IsPasswordResetTokenExpiredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsPasswordResetTokenExpiredCompleted(this, new IsPasswordResetTokenExpiredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService:SendPasswordRes" +
            "etLink", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", ResponseElementName="SendPasswordResetLink_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SendPasswordResetLink(string employeeNoa46, string emailMessage) {
            object[] results = this.Invoke("SendPasswordResetLink", new object[] {
                        employeeNoa46,
                        emailMessage});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendPasswordResetLinkAsync(string employeeNoa46, string emailMessage) {
            this.SendPasswordResetLinkAsync(employeeNoa46, emailMessage, null);
        }
        
        /// <remarks/>
        public void SendPasswordResetLinkAsync(string employeeNoa46, string emailMessage, object userState) {
            if ((this.SendPasswordResetLinkOperationCompleted == null)) {
                this.SendPasswordResetLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPasswordResetLinkOperationCompleted);
            }
            this.InvokeAsync("SendPasswordResetLink", new object[] {
                        employeeNoa46,
                        emailMessage}, this.SendPasswordResetLinkOperationCompleted, userState);
        }
        
        private void OnSendPasswordResetLinkOperationCompleted(object arg) {
            if ((this.SendPasswordResetLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPasswordResetLinkCompleted(this, new SendPasswordResetLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService:ResetEmployeePo" +
            "rtalPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", ResponseElementName="ResetEmployeePortalPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ResetEmployeePortalPassword(string employeeNoa46, string newPassword) {
            object[] results = this.Invoke("ResetEmployeePortalPassword", new object[] {
                        employeeNoa46,
                        newPassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ResetEmployeePortalPasswordAsync(string employeeNoa46, string newPassword) {
            this.ResetEmployeePortalPasswordAsync(employeeNoa46, newPassword, null);
        }
        
        /// <remarks/>
        public void ResetEmployeePortalPasswordAsync(string employeeNoa46, string newPassword, object userState) {
            if ((this.ResetEmployeePortalPasswordOperationCompleted == null)) {
                this.ResetEmployeePortalPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetEmployeePortalPasswordOperationCompleted);
            }
            this.InvokeAsync("ResetEmployeePortalPassword", new object[] {
                        employeeNoa46,
                        newPassword}, this.ResetEmployeePortalPasswordOperationCompleted, userState);
        }
        
        private void OnResetEmployeePortalPasswordOperationCompleted(object arg) {
            if ((this.ResetEmployeePortalPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetEmployeePortalPasswordCompleted(this, new ResetEmployeePortalPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService:GetEmployeePass" +
            "word", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", ResponseElementName="GetEmployeePassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetEmployeePassword(string employeeNo) {
            object[] results = this.Invoke("GetEmployeePassword", new object[] {
                        employeeNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeePasswordAsync(string employeeNo) {
            this.GetEmployeePasswordAsync(employeeNo, null);
        }
        
        /// <remarks/>
        public void GetEmployeePasswordAsync(string employeeNo, object userState) {
            if ((this.GetEmployeePasswordOperationCompleted == null)) {
                this.GetEmployeePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeePasswordOperationCompleted);
            }
            this.InvokeAsync("GetEmployeePassword", new object[] {
                        employeeNo}, this.GetEmployeePasswordOperationCompleted, userState);
        }
        
        private void OnGetEmployeePasswordOperationCompleted(object arg) {
            if ((this.GetEmployeePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeePasswordCompleted(this, new GetEmployeePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService:GetEmployeeProf" +
            "ile", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", ResponseElementName="GetEmployeeProfile_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetEmployeeProfile(string employeeNo) {
            object[] results = this.Invoke("GetEmployeeProfile", new object[] {
                        employeeNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeProfileAsync(string employeeNo) {
            this.GetEmployeeProfileAsync(employeeNo, null);
        }
        
        /// <remarks/>
        public void GetEmployeeProfileAsync(string employeeNo, object userState) {
            if ((this.GetEmployeeProfileOperationCompleted == null)) {
                this.GetEmployeeProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeProfileOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeProfile", new object[] {
                        employeeNo}, this.GetEmployeeProfileOperationCompleted, userState);
        }
        
        private void OnGetEmployeeProfileOperationCompleted(object arg) {
            if ((this.GetEmployeeProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeProfileCompleted(this, new GetEmployeeProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService:GetEmployee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", ResponseElementName="GetEmployee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeAccountWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetEmployee(string empNoOrEmail) {
            object[] results = this.Invoke("GetEmployee", new object[] {
                        empNoOrEmail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeAsync(string empNoOrEmail) {
            this.GetEmployeeAsync(empNoOrEmail, null);
        }
        
        /// <remarks/>
        public void GetEmployeeAsync(string empNoOrEmail, object userState) {
            if ((this.GetEmployeeOperationCompleted == null)) {
                this.GetEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeOperationCompleted);
            }
            this.InvokeAsync("GetEmployee", new object[] {
                        empNoOrEmail}, this.GetEmployeeOperationCompleted, userState);
        }
        
        private void OnGetEmployeeOperationCompleted(object arg) {
            if ((this.GetEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeCompleted(this, new GetEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void EmployeeExistsCompletedEventHandler(object sender, EmployeeExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void EmployeeAccountIsActiveCompletedEventHandler(object sender, EmployeeAccountIsActiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeAccountIsActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeAccountIsActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetCleanedEmployeeNoCompletedEventHandler(object sender, GetCleanedEmployeeNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCleanedEmployeeNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCleanedEmployeeNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetEmployeeNameCompletedEventHandler(object sender, GetEmployeeNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetEmployeeGenderCompletedEventHandler(object sender, GetEmployeeGenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeGenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeGenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetEmployeeDateOfBirthCompletedEventHandler(object sender, GetEmployeeDateOfBirthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeDateOfBirthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeDateOfBirthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetEmployeeAgeCompletedEventHandler(object sender, GetEmployeeAgeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeAgeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeAgeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetEmployeeRetirementDateCompletedEventHandler(object sender, GetEmployeeRetirementDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeRetirementDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeRetirementDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetEmployeeEmailAddressCompletedEventHandler(object sender, GetEmployeeEmailAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeEmailAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeEmailAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetEmployeeUserIDCompletedEventHandler(object sender, GetEmployeeUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CreateEmployeeDirectoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CreateEmployeeCompletedEventHandler(object sender, CreateEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void LoginEmployeeCompletedEventHandler(object sender, LoginEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void IsEmployeeDefaultPasswordCompletedEventHandler(object sender, IsEmployeeDefaultPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsEmployeeDefaultPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsEmployeeDefaultPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void SetPasswordResetTokenCompletedEventHandler(object sender, SetPasswordResetTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPasswordResetTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPasswordResetTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetPasswordResetTokenCompletedEventHandler(object sender, GetPasswordResetTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPasswordResetTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPasswordResetTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void IsPasswordResetTokenExpiredCompletedEventHandler(object sender, IsPasswordResetTokenExpiredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsPasswordResetTokenExpiredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsPasswordResetTokenExpiredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void SendPasswordResetLinkCompletedEventHandler(object sender, SendPasswordResetLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendPasswordResetLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendPasswordResetLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ResetEmployeePortalPasswordCompletedEventHandler(object sender, ResetEmployeePortalPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetEmployeePortalPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetEmployeePortalPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetEmployeePasswordCompletedEventHandler(object sender, GetEmployeePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetEmployeeProfileCompletedEventHandler(object sender, GetEmployeeProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetEmployeeCompletedEventHandler(object sender, GetEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591