//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DynamicsNAV365_StaffPortal.TimeSheet {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TimeSheetWS_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS")]
    public partial class TimeSheetWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UpdateTimeSheetEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendToSupervisorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateTimeSheetReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnToEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveTimesheetOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTimesheetTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTimesheetTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDocAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertPictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSignatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPassportPicOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmployeeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSignatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateTravelReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePurchaseRequestReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePurchaseRequestHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateActivityReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDocumentAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMaintainaceLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePettyCashReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePettyCashSurrenderReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFleetLogLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitFleetApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditFleeLogLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertFleeLogLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateFleetReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewFleetCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewVehicleRepairOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateImprestRequestHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateVehicleRepairsHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateBidAnalysisReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePurchaseOrderReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateClaimsRequestHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleRepairLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditVehicleRepairLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMaintainanceLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleRepairsSendApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleRepairsCancelApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyFixedAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewAssetTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditAssetTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewAssetTransferLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAssetTransferLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditAssetTransferLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback IssueAssetTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecieveAssetTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditFixedAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewFixedAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewDepreciationBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditDepreciationBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehiclelastOdometerOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleLastTooOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMaintainanceHeaderAmountOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TimeSheetWS() {
            this.Url = global::DynamicsNAV365_StaffPortal.Properties.Settings.Default.DynamicsNAV365_StaffPortal_TimeSheet_TimeSheetWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UpdateTimeSheetEntryCompletedEventHandler UpdateTimeSheetEntryCompleted;
        
        /// <remarks/>
        public event SendToSupervisorCompletedEventHandler SendToSupervisorCompleted;
        
        /// <remarks/>
        public event GenerateTimeSheetReportCompletedEventHandler GenerateTimeSheetReportCompleted;
        
        /// <remarks/>
        public event ReturnToEmployeeCompletedEventHandler ReturnToEmployeeCompleted;
        
        /// <remarks/>
        public event ApproveTimesheetCompletedEventHandler ApproveTimesheetCompleted;
        
        /// <remarks/>
        public event UpdateTasksCompletedEventHandler UpdateTasksCompleted;
        
        /// <remarks/>
        public event InsertTimesheetTasksCompletedEventHandler InsertTimesheetTasksCompleted;
        
        /// <remarks/>
        public event DeleteTimesheetTasksCompletedEventHandler DeleteTimesheetTasksCompleted;
        
        /// <remarks/>
        public event InsertDocAttachmentCompletedEventHandler InsertDocAttachmentCompleted;
        
        /// <remarks/>
        public event InsertPictureCompletedEventHandler InsertPictureCompleted;
        
        /// <remarks/>
        public event InsertSignatureCompletedEventHandler InsertSignatureCompleted;
        
        /// <remarks/>
        public event GetPassportPicCompletedEventHandler GetPassportPicCompleted;
        
        /// <remarks/>
        public event UpdateEmployeeDetailsCompletedEventHandler UpdateEmployeeDetailsCompleted;
        
        /// <remarks/>
        public event GetSignatureCompletedEventHandler GetSignatureCompleted;
        
        /// <remarks/>
        public event GenerateTravelReportCompletedEventHandler GenerateTravelReportCompleted;
        
        /// <remarks/>
        public event GeneratePurchaseRequestReportCompletedEventHandler GeneratePurchaseRequestReportCompleted;
        
        /// <remarks/>
        public event UpdatePurchaseRequestHeaderCompletedEventHandler UpdatePurchaseRequestHeaderCompleted;
        
        /// <remarks/>
        public event GenerateActivityReportCompletedEventHandler GenerateActivityReportCompleted;
        
        /// <remarks/>
        public event GetDocumentAttachmentCompletedEventHandler GetDocumentAttachmentCompleted;
        
        /// <remarks/>
        public event DeleteDocumentAttachmentCompletedEventHandler DeleteDocumentAttachmentCompleted;
        
        /// <remarks/>
        public event DeleteMaintainaceLineCompletedEventHandler DeleteMaintainaceLineCompleted;
        
        /// <remarks/>
        public event GeneratePettyCashReportCompletedEventHandler GeneratePettyCashReportCompleted;
        
        /// <remarks/>
        public event GeneratePettyCashSurrenderReportCompletedEventHandler GeneratePettyCashSurrenderReportCompleted;
        
        /// <remarks/>
        public event DeleteFleetLogLineCompletedEventHandler DeleteFleetLogLineCompleted;
        
        /// <remarks/>
        public event SubmitFleetApprovalRequestCompletedEventHandler SubmitFleetApprovalRequestCompleted;
        
        /// <remarks/>
        public event EditFleeLogLineCompletedEventHandler EditFleeLogLineCompleted;
        
        /// <remarks/>
        public event InsertFleeLogLineCompletedEventHandler InsertFleeLogLineCompleted;
        
        /// <remarks/>
        public event GenerateFleetReportCompletedEventHandler GenerateFleetReportCompleted;
        
        /// <remarks/>
        public event CreateNewFleetCardCompletedEventHandler CreateNewFleetCardCompleted;
        
        /// <remarks/>
        public event CreateNewVehicleRepairCompletedEventHandler CreateNewVehicleRepairCompleted;
        
        /// <remarks/>
        public event UpdateImprestRequestHeaderCompletedEventHandler UpdateImprestRequestHeaderCompleted;
        
        /// <remarks/>
        public event UpdateVehicleRepairsHeaderCompletedEventHandler UpdateVehicleRepairsHeaderCompleted;
        
        /// <remarks/>
        public event GenerateBidAnalysisReportCompletedEventHandler GenerateBidAnalysisReportCompleted;
        
        /// <remarks/>
        public event GeneratePurchaseOrderReportCompletedEventHandler GeneratePurchaseOrderReportCompleted;
        
        /// <remarks/>
        public event UpdateClaimsRequestHeaderCompletedEventHandler UpdateClaimsRequestHeaderCompleted;
        
        /// <remarks/>
        public event VehicleRepairLineCompletedEventHandler VehicleRepairLineCompleted;
        
        /// <remarks/>
        public event EditVehicleRepairLineCompletedEventHandler EditVehicleRepairLineCompleted;
        
        /// <remarks/>
        public event DeleteMaintainanceLineCompletedEventHandler DeleteMaintainanceLineCompleted;
        
        /// <remarks/>
        public event VehicleRepairsSendApprovalCompletedEventHandler VehicleRepairsSendApprovalCompleted;
        
        /// <remarks/>
        public event VehicleRepairsCancelApprovalCompletedEventHandler VehicleRepairsCancelApprovalCompleted;
        
        /// <remarks/>
        public event CopyFixedAssetCompletedEventHandler CopyFixedAssetCompleted;
        
        /// <remarks/>
        public event NewAssetTransferCompletedEventHandler NewAssetTransferCompleted;
        
        /// <remarks/>
        public event EditAssetTransferCompletedEventHandler EditAssetTransferCompleted;
        
        /// <remarks/>
        public event NewAssetTransferLineCompletedEventHandler NewAssetTransferLineCompleted;
        
        /// <remarks/>
        public event DeleteAssetTransferLineCompletedEventHandler DeleteAssetTransferLineCompleted;
        
        /// <remarks/>
        public event EditAssetTransferLineCompletedEventHandler EditAssetTransferLineCompleted;
        
        /// <remarks/>
        public event IssueAssetTransferCompletedEventHandler IssueAssetTransferCompleted;
        
        /// <remarks/>
        public event RecieveAssetTransferCompletedEventHandler RecieveAssetTransferCompleted;
        
        /// <remarks/>
        public event EditFixedAssetCompletedEventHandler EditFixedAssetCompleted;
        
        /// <remarks/>
        public event NewFixedAssetCompletedEventHandler NewFixedAssetCompleted;
        
        /// <remarks/>
        public event NewDepreciationBookCompletedEventHandler NewDepreciationBookCompleted;
        
        /// <remarks/>
        public event EditDepreciationBookCompletedEventHandler EditDepreciationBookCompleted;
        
        /// <remarks/>
        public event VehiclelastOdometerCompletedEventHandler VehiclelastOdometerCompleted;
        
        /// <remarks/>
        public event VehicleLastTooCompletedEventHandler VehicleLastTooCompleted;
        
        /// <remarks/>
        public event UpdateMaintainanceHeaderAmountCompletedEventHandler UpdateMaintainanceHeaderAmountCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:UpdateTimeSheetEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="UpdateTimeSheetEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdateTimeSheetEntry(string docNo, int ledgerNo, string employeeNo, decimal hrs, string tasks) {
            object[] results = this.Invoke("UpdateTimeSheetEntry", new object[] {
                        docNo,
                        ledgerNo,
                        employeeNo,
                        hrs,
                        tasks});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTimeSheetEntryAsync(string docNo, int ledgerNo, string employeeNo, decimal hrs, string tasks) {
            this.UpdateTimeSheetEntryAsync(docNo, ledgerNo, employeeNo, hrs, tasks, null);
        }
        
        /// <remarks/>
        public void UpdateTimeSheetEntryAsync(string docNo, int ledgerNo, string employeeNo, decimal hrs, string tasks, object userState) {
            if ((this.UpdateTimeSheetEntryOperationCompleted == null)) {
                this.UpdateTimeSheetEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTimeSheetEntryOperationCompleted);
            }
            this.InvokeAsync("UpdateTimeSheetEntry", new object[] {
                        docNo,
                        ledgerNo,
                        employeeNo,
                        hrs,
                        tasks}, this.UpdateTimeSheetEntryOperationCompleted, userState);
        }
        
        private void OnUpdateTimeSheetEntryOperationCompleted(object arg) {
            if ((this.UpdateTimeSheetEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTimeSheetEntryCompleted(this, new UpdateTimeSheetEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:SendToSupervisor", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="SendToSupervisor_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SendToSupervisor(string docNo, string mth, string employeeNo, string yR) {
            object[] results = this.Invoke("SendToSupervisor", new object[] {
                        docNo,
                        mth,
                        employeeNo,
                        yR});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendToSupervisorAsync(string docNo, string mth, string employeeNo, string yR) {
            this.SendToSupervisorAsync(docNo, mth, employeeNo, yR, null);
        }
        
        /// <remarks/>
        public void SendToSupervisorAsync(string docNo, string mth, string employeeNo, string yR, object userState) {
            if ((this.SendToSupervisorOperationCompleted == null)) {
                this.SendToSupervisorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendToSupervisorOperationCompleted);
            }
            this.InvokeAsync("SendToSupervisor", new object[] {
                        docNo,
                        mth,
                        employeeNo,
                        yR}, this.SendToSupervisorOperationCompleted, userState);
        }
        
        private void OnSendToSupervisorOperationCompleted(object arg) {
            if ((this.SendToSupervisorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendToSupervisorCompleted(this, new SendToSupervisorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:GenerateTimeSheetReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="GenerateTimeSheetReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateTimeSheetReport(int no, string month, string year, string filenameFromApp, string docNo) {
            object[] results = this.Invoke("GenerateTimeSheetReport", new object[] {
                        no,
                        month,
                        year,
                        filenameFromApp,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateTimeSheetReportAsync(int no, string month, string year, string filenameFromApp, string docNo) {
            this.GenerateTimeSheetReportAsync(no, month, year, filenameFromApp, docNo, null);
        }
        
        /// <remarks/>
        public void GenerateTimeSheetReportAsync(int no, string month, string year, string filenameFromApp, string docNo, object userState) {
            if ((this.GenerateTimeSheetReportOperationCompleted == null)) {
                this.GenerateTimeSheetReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateTimeSheetReportOperationCompleted);
            }
            this.InvokeAsync("GenerateTimeSheetReport", new object[] {
                        no,
                        month,
                        year,
                        filenameFromApp,
                        docNo}, this.GenerateTimeSheetReportOperationCompleted, userState);
        }
        
        private void OnGenerateTimeSheetReportOperationCompleted(object arg) {
            if ((this.GenerateTimeSheetReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateTimeSheetReportCompleted(this, new GenerateTimeSheetReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:ReturnToEmployee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="ReturnToEmployee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ReturnToEmployee(string docNo, string mth, string employeeNo, string yR, string comments, int lineNo) {
            object[] results = this.Invoke("ReturnToEmployee", new object[] {
                        docNo,
                        mth,
                        employeeNo,
                        yR,
                        comments,
                        lineNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnToEmployeeAsync(string docNo, string mth, string employeeNo, string yR, string comments, int lineNo) {
            this.ReturnToEmployeeAsync(docNo, mth, employeeNo, yR, comments, lineNo, null);
        }
        
        /// <remarks/>
        public void ReturnToEmployeeAsync(string docNo, string mth, string employeeNo, string yR, string comments, int lineNo, object userState) {
            if ((this.ReturnToEmployeeOperationCompleted == null)) {
                this.ReturnToEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnToEmployeeOperationCompleted);
            }
            this.InvokeAsync("ReturnToEmployee", new object[] {
                        docNo,
                        mth,
                        employeeNo,
                        yR,
                        comments,
                        lineNo}, this.ReturnToEmployeeOperationCompleted, userState);
        }
        
        private void OnReturnToEmployeeOperationCompleted(object arg) {
            if ((this.ReturnToEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnToEmployeeCompleted(this, new ReturnToEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:ApproveTimesheet", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="ApproveTimesheet_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ApproveTimesheet(string docNo, string mth, string employeeNo, string yR, int lineNo) {
            object[] results = this.Invoke("ApproveTimesheet", new object[] {
                        docNo,
                        mth,
                        employeeNo,
                        yR,
                        lineNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveTimesheetAsync(string docNo, string mth, string employeeNo, string yR, int lineNo) {
            this.ApproveTimesheetAsync(docNo, mth, employeeNo, yR, lineNo, null);
        }
        
        /// <remarks/>
        public void ApproveTimesheetAsync(string docNo, string mth, string employeeNo, string yR, int lineNo, object userState) {
            if ((this.ApproveTimesheetOperationCompleted == null)) {
                this.ApproveTimesheetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveTimesheetOperationCompleted);
            }
            this.InvokeAsync("ApproveTimesheet", new object[] {
                        docNo,
                        mth,
                        employeeNo,
                        yR,
                        lineNo}, this.ApproveTimesheetOperationCompleted, userState);
        }
        
        private void OnApproveTimesheetOperationCompleted(object arg) {
            if ((this.ApproveTimesheetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveTimesheetCompleted(this, new ApproveTimesheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:UpdateTasks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="UpdateTasks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdateTasks(string docNo, string mth, string employeeNo, string yR, string listofTasks) {
            object[] results = this.Invoke("UpdateTasks", new object[] {
                        docNo,
                        mth,
                        employeeNo,
                        yR,
                        listofTasks});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTasksAsync(string docNo, string mth, string employeeNo, string yR, string listofTasks) {
            this.UpdateTasksAsync(docNo, mth, employeeNo, yR, listofTasks, null);
        }
        
        /// <remarks/>
        public void UpdateTasksAsync(string docNo, string mth, string employeeNo, string yR, string listofTasks, object userState) {
            if ((this.UpdateTasksOperationCompleted == null)) {
                this.UpdateTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTasksOperationCompleted);
            }
            this.InvokeAsync("UpdateTasks", new object[] {
                        docNo,
                        mth,
                        employeeNo,
                        yR,
                        listofTasks}, this.UpdateTasksOperationCompleted, userState);
        }
        
        private void OnUpdateTasksOperationCompleted(object arg) {
            if ((this.UpdateTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTasksCompleted(this, new UpdateTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:InsertTimesheetTasks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="InsertTimesheetTasks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertTimesheetTasks(string docNo, string mth, string employeeNo, string yR, string taskUndertaken, string programCode, decimal hours, int lnNo) {
            object[] results = this.Invoke("InsertTimesheetTasks", new object[] {
                        docNo,
                        mth,
                        employeeNo,
                        yR,
                        taskUndertaken,
                        programCode,
                        hours,
                        lnNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTimesheetTasksAsync(string docNo, string mth, string employeeNo, string yR, string taskUndertaken, string programCode, decimal hours, int lnNo) {
            this.InsertTimesheetTasksAsync(docNo, mth, employeeNo, yR, taskUndertaken, programCode, hours, lnNo, null);
        }
        
        /// <remarks/>
        public void InsertTimesheetTasksAsync(string docNo, string mth, string employeeNo, string yR, string taskUndertaken, string programCode, decimal hours, int lnNo, object userState) {
            if ((this.InsertTimesheetTasksOperationCompleted == null)) {
                this.InsertTimesheetTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTimesheetTasksOperationCompleted);
            }
            this.InvokeAsync("InsertTimesheetTasks", new object[] {
                        docNo,
                        mth,
                        employeeNo,
                        yR,
                        taskUndertaken,
                        programCode,
                        hours,
                        lnNo}, this.InsertTimesheetTasksOperationCompleted, userState);
        }
        
        private void OnInsertTimesheetTasksOperationCompleted(object arg) {
            if ((this.InsertTimesheetTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTimesheetTasksCompleted(this, new InsertTimesheetTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:DeleteTimesheetTasks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="DeleteTimesheetTasks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteTimesheetTasks(string docNo, string mth, string yR, int lnNo) {
            object[] results = this.Invoke("DeleteTimesheetTasks", new object[] {
                        docNo,
                        mth,
                        yR,
                        lnNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTimesheetTasksAsync(string docNo, string mth, string yR, int lnNo) {
            this.DeleteTimesheetTasksAsync(docNo, mth, yR, lnNo, null);
        }
        
        /// <remarks/>
        public void DeleteTimesheetTasksAsync(string docNo, string mth, string yR, int lnNo, object userState) {
            if ((this.DeleteTimesheetTasksOperationCompleted == null)) {
                this.DeleteTimesheetTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTimesheetTasksOperationCompleted);
            }
            this.InvokeAsync("DeleteTimesheetTasks", new object[] {
                        docNo,
                        mth,
                        yR,
                        lnNo}, this.DeleteTimesheetTasksOperationCompleted, userState);
        }
        
        private void OnDeleteTimesheetTasksOperationCompleted(object arg) {
            if ((this.DeleteTimesheetTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTimesheetTasksCompleted(this, new DeleteTimesheetTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:InsertDocAttachment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="InsertDocAttachment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertDocAttachment(string docNo, string base64String, int tableID, string ext, string filename, int docType) {
            object[] results = this.Invoke("InsertDocAttachment", new object[] {
                        docNo,
                        base64String,
                        tableID,
                        ext,
                        filename,
                        docType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDocAttachmentAsync(string docNo, string base64String, int tableID, string ext, string filename, int docType) {
            this.InsertDocAttachmentAsync(docNo, base64String, tableID, ext, filename, docType, null);
        }
        
        /// <remarks/>
        public void InsertDocAttachmentAsync(string docNo, string base64String, int tableID, string ext, string filename, int docType, object userState) {
            if ((this.InsertDocAttachmentOperationCompleted == null)) {
                this.InsertDocAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDocAttachmentOperationCompleted);
            }
            this.InvokeAsync("InsertDocAttachment", new object[] {
                        docNo,
                        base64String,
                        tableID,
                        ext,
                        filename,
                        docType}, this.InsertDocAttachmentOperationCompleted, userState);
        }
        
        private void OnInsertDocAttachmentOperationCompleted(object arg) {
            if ((this.InsertDocAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDocAttachmentCompleted(this, new InsertDocAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:InsertPicture", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="InsertPicture_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertPicture(string customerNo, string picture) {
            object[] results = this.Invoke("InsertPicture", new object[] {
                        customerNo,
                        picture});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertPictureAsync(string customerNo, string picture) {
            this.InsertPictureAsync(customerNo, picture, null);
        }
        
        /// <remarks/>
        public void InsertPictureAsync(string customerNo, string picture, object userState) {
            if ((this.InsertPictureOperationCompleted == null)) {
                this.InsertPictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPictureOperationCompleted);
            }
            this.InvokeAsync("InsertPicture", new object[] {
                        customerNo,
                        picture}, this.InsertPictureOperationCompleted, userState);
        }
        
        private void OnInsertPictureOperationCompleted(object arg) {
            if ((this.InsertPictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertPictureCompleted(this, new InsertPictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:InsertSignature", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="InsertSignature_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertSignature(string customerNo, string picture) {
            object[] results = this.Invoke("InsertSignature", new object[] {
                        customerNo,
                        picture});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSignatureAsync(string customerNo, string picture) {
            this.InsertSignatureAsync(customerNo, picture, null);
        }
        
        /// <remarks/>
        public void InsertSignatureAsync(string customerNo, string picture, object userState) {
            if ((this.InsertSignatureOperationCompleted == null)) {
                this.InsertSignatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSignatureOperationCompleted);
            }
            this.InvokeAsync("InsertSignature", new object[] {
                        customerNo,
                        picture}, this.InsertSignatureOperationCompleted, userState);
        }
        
        private void OnInsertSignatureOperationCompleted(object arg) {
            if ((this.InsertSignatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSignatureCompleted(this, new InsertSignatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:GetPassportPic", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="GetPassportPic_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetPassportPic(string no) {
            object[] results = this.Invoke("GetPassportPic", new object[] {
                        no});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPassportPicAsync(string no) {
            this.GetPassportPicAsync(no, null);
        }
        
        /// <remarks/>
        public void GetPassportPicAsync(string no, object userState) {
            if ((this.GetPassportPicOperationCompleted == null)) {
                this.GetPassportPicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPassportPicOperationCompleted);
            }
            this.InvokeAsync("GetPassportPic", new object[] {
                        no}, this.GetPassportPicOperationCompleted, userState);
        }
        
        private void OnGetPassportPicOperationCompleted(object arg) {
            if ((this.GetPassportPicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPassportPicCompleted(this, new GetPassportPicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:UpdateEmployeeDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="UpdateEmployeeDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdateEmployeeDetails(
                    string employeeNo, 
                    string phoneNumber, 
                    string mobilePhoneNumber, 
                    string emailAddress, 
                    string workEmailAddress, 
                    string bankName, 
                    string bankBranchName, 
                    string bankAccountNumber, 
                    string jobTitle, 
                    string nationalIDNumber, 
                    string pINNumber, 
                    string nSSFNumber, 
                    string nHIFNumber, 
                    string citizenship, 
                    string religion, 
                    string city, 
                    string countyName, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime doB, 
                    string manager, 
                    int gender, 
                    int mstatus) {
            object[] results = this.Invoke("UpdateEmployeeDetails", new object[] {
                        employeeNo,
                        phoneNumber,
                        mobilePhoneNumber,
                        emailAddress,
                        workEmailAddress,
                        bankName,
                        bankBranchName,
                        bankAccountNumber,
                        jobTitle,
                        nationalIDNumber,
                        pINNumber,
                        nSSFNumber,
                        nHIFNumber,
                        citizenship,
                        religion,
                        city,
                        countyName,
                        doB,
                        manager,
                        gender,
                        mstatus});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmployeeDetailsAsync(
                    string employeeNo, 
                    string phoneNumber, 
                    string mobilePhoneNumber, 
                    string emailAddress, 
                    string workEmailAddress, 
                    string bankName, 
                    string bankBranchName, 
                    string bankAccountNumber, 
                    string jobTitle, 
                    string nationalIDNumber, 
                    string pINNumber, 
                    string nSSFNumber, 
                    string nHIFNumber, 
                    string citizenship, 
                    string religion, 
                    string city, 
                    string countyName, 
                    System.DateTime doB, 
                    string manager, 
                    int gender, 
                    int mstatus) {
            this.UpdateEmployeeDetailsAsync(employeeNo, phoneNumber, mobilePhoneNumber, emailAddress, workEmailAddress, bankName, bankBranchName, bankAccountNumber, jobTitle, nationalIDNumber, pINNumber, nSSFNumber, nHIFNumber, citizenship, religion, city, countyName, doB, manager, gender, mstatus, null);
        }
        
        /// <remarks/>
        public void UpdateEmployeeDetailsAsync(
                    string employeeNo, 
                    string phoneNumber, 
                    string mobilePhoneNumber, 
                    string emailAddress, 
                    string workEmailAddress, 
                    string bankName, 
                    string bankBranchName, 
                    string bankAccountNumber, 
                    string jobTitle, 
                    string nationalIDNumber, 
                    string pINNumber, 
                    string nSSFNumber, 
                    string nHIFNumber, 
                    string citizenship, 
                    string religion, 
                    string city, 
                    string countyName, 
                    System.DateTime doB, 
                    string manager, 
                    int gender, 
                    int mstatus, 
                    object userState) {
            if ((this.UpdateEmployeeDetailsOperationCompleted == null)) {
                this.UpdateEmployeeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmployeeDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateEmployeeDetails", new object[] {
                        employeeNo,
                        phoneNumber,
                        mobilePhoneNumber,
                        emailAddress,
                        workEmailAddress,
                        bankName,
                        bankBranchName,
                        bankAccountNumber,
                        jobTitle,
                        nationalIDNumber,
                        pINNumber,
                        nSSFNumber,
                        nHIFNumber,
                        citizenship,
                        religion,
                        city,
                        countyName,
                        doB,
                        manager,
                        gender,
                        mstatus}, this.UpdateEmployeeDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateEmployeeDetailsOperationCompleted(object arg) {
            if ((this.UpdateEmployeeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmployeeDetailsCompleted(this, new UpdateEmployeeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:GetSignature", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="GetSignature_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetSignature(string no) {
            object[] results = this.Invoke("GetSignature", new object[] {
                        no});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSignatureAsync(string no) {
            this.GetSignatureAsync(no, null);
        }
        
        /// <remarks/>
        public void GetSignatureAsync(string no, object userState) {
            if ((this.GetSignatureOperationCompleted == null)) {
                this.GetSignatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSignatureOperationCompleted);
            }
            this.InvokeAsync("GetSignature", new object[] {
                        no}, this.GetSignatureOperationCompleted, userState);
        }
        
        private void OnGetSignatureOperationCompleted(object arg) {
            if ((this.GetSignatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSignatureCompleted(this, new GetSignatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:GenerateTravelReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="GenerateTravelReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateTravelReport(string filenameFromApp, string docNo) {
            object[] results = this.Invoke("GenerateTravelReport", new object[] {
                        filenameFromApp,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateTravelReportAsync(string filenameFromApp, string docNo) {
            this.GenerateTravelReportAsync(filenameFromApp, docNo, null);
        }
        
        /// <remarks/>
        public void GenerateTravelReportAsync(string filenameFromApp, string docNo, object userState) {
            if ((this.GenerateTravelReportOperationCompleted == null)) {
                this.GenerateTravelReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateTravelReportOperationCompleted);
            }
            this.InvokeAsync("GenerateTravelReport", new object[] {
                        filenameFromApp,
                        docNo}, this.GenerateTravelReportOperationCompleted, userState);
        }
        
        private void OnGenerateTravelReportOperationCompleted(object arg) {
            if ((this.GenerateTravelReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateTravelReportCompleted(this, new GenerateTravelReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:GeneratePurchaseRequestReport" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="GeneratePurchaseRequestReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GeneratePurchaseRequestReport(string filenameFromApp, string docNo) {
            object[] results = this.Invoke("GeneratePurchaseRequestReport", new object[] {
                        filenameFromApp,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeneratePurchaseRequestReportAsync(string filenameFromApp, string docNo) {
            this.GeneratePurchaseRequestReportAsync(filenameFromApp, docNo, null);
        }
        
        /// <remarks/>
        public void GeneratePurchaseRequestReportAsync(string filenameFromApp, string docNo, object userState) {
            if ((this.GeneratePurchaseRequestReportOperationCompleted == null)) {
                this.GeneratePurchaseRequestReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePurchaseRequestReportOperationCompleted);
            }
            this.InvokeAsync("GeneratePurchaseRequestReport", new object[] {
                        filenameFromApp,
                        docNo}, this.GeneratePurchaseRequestReportOperationCompleted, userState);
        }
        
        private void OnGeneratePurchaseRequestReportOperationCompleted(object arg) {
            if ((this.GeneratePurchaseRequestReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePurchaseRequestReportCompleted(this, new GeneratePurchaseRequestReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:UpdatePurchaseRequestHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="UpdatePurchaseRequestHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdatePurchaseRequestHeader(string docNo, string description, string globalDimension) {
            object[] results = this.Invoke("UpdatePurchaseRequestHeader", new object[] {
                        docNo,
                        description,
                        globalDimension});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePurchaseRequestHeaderAsync(string docNo, string description, string globalDimension) {
            this.UpdatePurchaseRequestHeaderAsync(docNo, description, globalDimension, null);
        }
        
        /// <remarks/>
        public void UpdatePurchaseRequestHeaderAsync(string docNo, string description, string globalDimension, object userState) {
            if ((this.UpdatePurchaseRequestHeaderOperationCompleted == null)) {
                this.UpdatePurchaseRequestHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePurchaseRequestHeaderOperationCompleted);
            }
            this.InvokeAsync("UpdatePurchaseRequestHeader", new object[] {
                        docNo,
                        description,
                        globalDimension}, this.UpdatePurchaseRequestHeaderOperationCompleted, userState);
        }
        
        private void OnUpdatePurchaseRequestHeaderOperationCompleted(object arg) {
            if ((this.UpdatePurchaseRequestHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePurchaseRequestHeaderCompleted(this, new UpdatePurchaseRequestHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:GenerateActivityReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="GenerateActivityReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateActivityReport(string filenameFromApp, string docNo) {
            object[] results = this.Invoke("GenerateActivityReport", new object[] {
                        filenameFromApp,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateActivityReportAsync(string filenameFromApp, string docNo) {
            this.GenerateActivityReportAsync(filenameFromApp, docNo, null);
        }
        
        /// <remarks/>
        public void GenerateActivityReportAsync(string filenameFromApp, string docNo, object userState) {
            if ((this.GenerateActivityReportOperationCompleted == null)) {
                this.GenerateActivityReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateActivityReportOperationCompleted);
            }
            this.InvokeAsync("GenerateActivityReport", new object[] {
                        filenameFromApp,
                        docNo}, this.GenerateActivityReportOperationCompleted, userState);
        }
        
        private void OnGenerateActivityReportOperationCompleted(object arg) {
            if ((this.GenerateActivityReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateActivityReportCompleted(this, new GenerateActivityReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:GetDocumentAttachment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="GetDocumentAttachment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetDocumentAttachment(int tableId, string no, int recID) {
            object[] results = this.Invoke("GetDocumentAttachment", new object[] {
                        tableId,
                        no,
                        recID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentAttachmentAsync(int tableId, string no, int recID) {
            this.GetDocumentAttachmentAsync(tableId, no, recID, null);
        }
        
        /// <remarks/>
        public void GetDocumentAttachmentAsync(int tableId, string no, int recID, object userState) {
            if ((this.GetDocumentAttachmentOperationCompleted == null)) {
                this.GetDocumentAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentAttachmentOperationCompleted);
            }
            this.InvokeAsync("GetDocumentAttachment", new object[] {
                        tableId,
                        no,
                        recID}, this.GetDocumentAttachmentOperationCompleted, userState);
        }
        
        private void OnGetDocumentAttachmentOperationCompleted(object arg) {
            if ((this.GetDocumentAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentAttachmentCompleted(this, new GetDocumentAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:DeleteDocumentAttachment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="DeleteDocumentAttachment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteDocumentAttachment(int tableID, string docNo, int docID) {
            this.Invoke("DeleteDocumentAttachment", new object[] {
                        tableID,
                        docNo,
                        docID});
        }
        
        /// <remarks/>
        public void DeleteDocumentAttachmentAsync(int tableID, string docNo, int docID) {
            this.DeleteDocumentAttachmentAsync(tableID, docNo, docID, null);
        }
        
        /// <remarks/>
        public void DeleteDocumentAttachmentAsync(int tableID, string docNo, int docID, object userState) {
            if ((this.DeleteDocumentAttachmentOperationCompleted == null)) {
                this.DeleteDocumentAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDocumentAttachmentOperationCompleted);
            }
            this.InvokeAsync("DeleteDocumentAttachment", new object[] {
                        tableID,
                        docNo,
                        docID}, this.DeleteDocumentAttachmentOperationCompleted, userState);
        }
        
        private void OnDeleteDocumentAttachmentOperationCompleted(object arg) {
            if ((this.DeleteDocumentAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDocumentAttachmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:DeleteMaintainaceLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="DeleteMaintainaceLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteMaintainaceLine(string lineNo, string docNo) {
            this.Invoke("DeleteMaintainaceLine", new object[] {
                        lineNo,
                        docNo});
        }
        
        /// <remarks/>
        public void DeleteMaintainaceLineAsync(string lineNo, string docNo) {
            this.DeleteMaintainaceLineAsync(lineNo, docNo, null);
        }
        
        /// <remarks/>
        public void DeleteMaintainaceLineAsync(string lineNo, string docNo, object userState) {
            if ((this.DeleteMaintainaceLineOperationCompleted == null)) {
                this.DeleteMaintainaceLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMaintainaceLineOperationCompleted);
            }
            this.InvokeAsync("DeleteMaintainaceLine", new object[] {
                        lineNo,
                        docNo}, this.DeleteMaintainaceLineOperationCompleted, userState);
        }
        
        private void OnDeleteMaintainaceLineOperationCompleted(object arg) {
            if ((this.DeleteMaintainaceLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMaintainaceLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:GeneratePettyCashReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="GeneratePettyCashReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GeneratePettyCashReport(string filenameFromApp, string docNo) {
            object[] results = this.Invoke("GeneratePettyCashReport", new object[] {
                        filenameFromApp,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeneratePettyCashReportAsync(string filenameFromApp, string docNo) {
            this.GeneratePettyCashReportAsync(filenameFromApp, docNo, null);
        }
        
        /// <remarks/>
        public void GeneratePettyCashReportAsync(string filenameFromApp, string docNo, object userState) {
            if ((this.GeneratePettyCashReportOperationCompleted == null)) {
                this.GeneratePettyCashReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePettyCashReportOperationCompleted);
            }
            this.InvokeAsync("GeneratePettyCashReport", new object[] {
                        filenameFromApp,
                        docNo}, this.GeneratePettyCashReportOperationCompleted, userState);
        }
        
        private void OnGeneratePettyCashReportOperationCompleted(object arg) {
            if ((this.GeneratePettyCashReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePettyCashReportCompleted(this, new GeneratePettyCashReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:GeneratePettyCashSurrenderRep" +
            "ort", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="GeneratePettyCashSurrenderReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GeneratePettyCashSurrenderReport(string filenameFromApp, string docNo) {
            object[] results = this.Invoke("GeneratePettyCashSurrenderReport", new object[] {
                        filenameFromApp,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeneratePettyCashSurrenderReportAsync(string filenameFromApp, string docNo) {
            this.GeneratePettyCashSurrenderReportAsync(filenameFromApp, docNo, null);
        }
        
        /// <remarks/>
        public void GeneratePettyCashSurrenderReportAsync(string filenameFromApp, string docNo, object userState) {
            if ((this.GeneratePettyCashSurrenderReportOperationCompleted == null)) {
                this.GeneratePettyCashSurrenderReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePettyCashSurrenderReportOperationCompleted);
            }
            this.InvokeAsync("GeneratePettyCashSurrenderReport", new object[] {
                        filenameFromApp,
                        docNo}, this.GeneratePettyCashSurrenderReportOperationCompleted, userState);
        }
        
        private void OnGeneratePettyCashSurrenderReportOperationCompleted(object arg) {
            if ((this.GeneratePettyCashSurrenderReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePettyCashSurrenderReportCompleted(this, new GeneratePettyCashSurrenderReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:DeleteFleetLogLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="DeleteFleetLogLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteFleetLogLine(string docNo, int entryNo, string empNo) {
            object[] results = this.Invoke("DeleteFleetLogLine", new object[] {
                        docNo,
                        entryNo,
                        empNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFleetLogLineAsync(string docNo, int entryNo, string empNo) {
            this.DeleteFleetLogLineAsync(docNo, entryNo, empNo, null);
        }
        
        /// <remarks/>
        public void DeleteFleetLogLineAsync(string docNo, int entryNo, string empNo, object userState) {
            if ((this.DeleteFleetLogLineOperationCompleted == null)) {
                this.DeleteFleetLogLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFleetLogLineOperationCompleted);
            }
            this.InvokeAsync("DeleteFleetLogLine", new object[] {
                        docNo,
                        entryNo,
                        empNo}, this.DeleteFleetLogLineOperationCompleted, userState);
        }
        
        private void OnDeleteFleetLogLineOperationCompleted(object arg) {
            if ((this.DeleteFleetLogLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFleetLogLineCompleted(this, new DeleteFleetLogLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:SubmitFleetApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="SubmitFleetApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SubmitFleetApprovalRequest(string docNo) {
            this.Invoke("SubmitFleetApprovalRequest", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SubmitFleetApprovalRequestAsync(string docNo) {
            this.SubmitFleetApprovalRequestAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SubmitFleetApprovalRequestAsync(string docNo, object userState) {
            if ((this.SubmitFleetApprovalRequestOperationCompleted == null)) {
                this.SubmitFleetApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitFleetApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("SubmitFleetApprovalRequest", new object[] {
                        docNo}, this.SubmitFleetApprovalRequestOperationCompleted, userState);
        }
        
        private void OnSubmitFleetApprovalRequestOperationCompleted(object arg) {
            if ((this.SubmitFleetApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitFleetApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:EditFleeLogLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="EditFleeLogLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool EditFleeLogLine(
                    int entryNo, 
                    string empNo, 
                    string docNo, 
                    string staffNo, 
                    string vehicleNo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime startTime, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime endTime, 
                    string from, 
                    string to, 
                    decimal odometerStart, 
                    decimal odometerEnd, 
                    string dimension1, 
                    string dimension2, 
                    string dimension3, 
                    string dimension4, 
                    string dimension5, 
                    string dimension6, 
                    string dimension7, 
                    decimal litres, 
                    decimal amount, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime date, 
                    string purpose) {
            object[] results = this.Invoke("EditFleeLogLine", new object[] {
                        entryNo,
                        empNo,
                        docNo,
                        staffNo,
                        vehicleNo,
                        startTime,
                        endTime,
                        from,
                        to,
                        odometerStart,
                        odometerEnd,
                        dimension1,
                        dimension2,
                        dimension3,
                        dimension4,
                        dimension5,
                        dimension6,
                        dimension7,
                        litres,
                        amount,
                        date,
                        purpose});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EditFleeLogLineAsync(
                    int entryNo, 
                    string empNo, 
                    string docNo, 
                    string staffNo, 
                    string vehicleNo, 
                    System.DateTime startTime, 
                    System.DateTime endTime, 
                    string from, 
                    string to, 
                    decimal odometerStart, 
                    decimal odometerEnd, 
                    string dimension1, 
                    string dimension2, 
                    string dimension3, 
                    string dimension4, 
                    string dimension5, 
                    string dimension6, 
                    string dimension7, 
                    decimal litres, 
                    decimal amount, 
                    System.DateTime date, 
                    string purpose) {
            this.EditFleeLogLineAsync(entryNo, empNo, docNo, staffNo, vehicleNo, startTime, endTime, from, to, odometerStart, odometerEnd, dimension1, dimension2, dimension3, dimension4, dimension5, dimension6, dimension7, litres, amount, date, purpose, null);
        }
        
        /// <remarks/>
        public void EditFleeLogLineAsync(
                    int entryNo, 
                    string empNo, 
                    string docNo, 
                    string staffNo, 
                    string vehicleNo, 
                    System.DateTime startTime, 
                    System.DateTime endTime, 
                    string from, 
                    string to, 
                    decimal odometerStart, 
                    decimal odometerEnd, 
                    string dimension1, 
                    string dimension2, 
                    string dimension3, 
                    string dimension4, 
                    string dimension5, 
                    string dimension6, 
                    string dimension7, 
                    decimal litres, 
                    decimal amount, 
                    System.DateTime date, 
                    string purpose, 
                    object userState) {
            if ((this.EditFleeLogLineOperationCompleted == null)) {
                this.EditFleeLogLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditFleeLogLineOperationCompleted);
            }
            this.InvokeAsync("EditFleeLogLine", new object[] {
                        entryNo,
                        empNo,
                        docNo,
                        staffNo,
                        vehicleNo,
                        startTime,
                        endTime,
                        from,
                        to,
                        odometerStart,
                        odometerEnd,
                        dimension1,
                        dimension2,
                        dimension3,
                        dimension4,
                        dimension5,
                        dimension6,
                        dimension7,
                        litres,
                        amount,
                        date,
                        purpose}, this.EditFleeLogLineOperationCompleted, userState);
        }
        
        private void OnEditFleeLogLineOperationCompleted(object arg) {
            if ((this.EditFleeLogLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditFleeLogLineCompleted(this, new EditFleeLogLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:InsertFleeLogLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="InsertFleeLogLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertFleeLogLine(
                    string empNo, 
                    string docNo, 
                    string staffNo, 
                    string vehicleNo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime startTime, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime endTime, 
                    string from, 
                    string to, 
                    decimal odometerStart, 
                    decimal odometerEnd, 
                    string dimension1, 
                    string dimension2, 
                    string dimension3, 
                    string dimension4, 
                    string dimension5, 
                    string dimension6, 
                    string dimension7, 
                    decimal litres, 
                    decimal amount, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime date, 
                    string purpose) {
            object[] results = this.Invoke("InsertFleeLogLine", new object[] {
                        empNo,
                        docNo,
                        staffNo,
                        vehicleNo,
                        startTime,
                        endTime,
                        from,
                        to,
                        odometerStart,
                        odometerEnd,
                        dimension1,
                        dimension2,
                        dimension3,
                        dimension4,
                        dimension5,
                        dimension6,
                        dimension7,
                        litres,
                        amount,
                        date,
                        purpose});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertFleeLogLineAsync(
                    string empNo, 
                    string docNo, 
                    string staffNo, 
                    string vehicleNo, 
                    System.DateTime startTime, 
                    System.DateTime endTime, 
                    string from, 
                    string to, 
                    decimal odometerStart, 
                    decimal odometerEnd, 
                    string dimension1, 
                    string dimension2, 
                    string dimension3, 
                    string dimension4, 
                    string dimension5, 
                    string dimension6, 
                    string dimension7, 
                    decimal litres, 
                    decimal amount, 
                    System.DateTime date, 
                    string purpose) {
            this.InsertFleeLogLineAsync(empNo, docNo, staffNo, vehicleNo, startTime, endTime, from, to, odometerStart, odometerEnd, dimension1, dimension2, dimension3, dimension4, dimension5, dimension6, dimension7, litres, amount, date, purpose, null);
        }
        
        /// <remarks/>
        public void InsertFleeLogLineAsync(
                    string empNo, 
                    string docNo, 
                    string staffNo, 
                    string vehicleNo, 
                    System.DateTime startTime, 
                    System.DateTime endTime, 
                    string from, 
                    string to, 
                    decimal odometerStart, 
                    decimal odometerEnd, 
                    string dimension1, 
                    string dimension2, 
                    string dimension3, 
                    string dimension4, 
                    string dimension5, 
                    string dimension6, 
                    string dimension7, 
                    decimal litres, 
                    decimal amount, 
                    System.DateTime date, 
                    string purpose, 
                    object userState) {
            if ((this.InsertFleeLogLineOperationCompleted == null)) {
                this.InsertFleeLogLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertFleeLogLineOperationCompleted);
            }
            this.InvokeAsync("InsertFleeLogLine", new object[] {
                        empNo,
                        docNo,
                        staffNo,
                        vehicleNo,
                        startTime,
                        endTime,
                        from,
                        to,
                        odometerStart,
                        odometerEnd,
                        dimension1,
                        dimension2,
                        dimension3,
                        dimension4,
                        dimension5,
                        dimension6,
                        dimension7,
                        litres,
                        amount,
                        date,
                        purpose}, this.InsertFleeLogLineOperationCompleted, userState);
        }
        
        private void OnInsertFleeLogLineOperationCompleted(object arg) {
            if ((this.InsertFleeLogLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertFleeLogLineCompleted(this, new InsertFleeLogLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:GenerateFleetReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="GenerateFleetReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateFleetReport(string filenameFromApp, string docNo) {
            object[] results = this.Invoke("GenerateFleetReport", new object[] {
                        filenameFromApp,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateFleetReportAsync(string filenameFromApp, string docNo) {
            this.GenerateFleetReportAsync(filenameFromApp, docNo, null);
        }
        
        /// <remarks/>
        public void GenerateFleetReportAsync(string filenameFromApp, string docNo, object userState) {
            if ((this.GenerateFleetReportOperationCompleted == null)) {
                this.GenerateFleetReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateFleetReportOperationCompleted);
            }
            this.InvokeAsync("GenerateFleetReport", new object[] {
                        filenameFromApp,
                        docNo}, this.GenerateFleetReportOperationCompleted, userState);
        }
        
        private void OnGenerateFleetReportOperationCompleted(object arg) {
            if ((this.GenerateFleetReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateFleetReportCompleted(this, new GenerateFleetReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:CreateNewFleetCard", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="CreateNewFleetCard_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateNewFleetCard(string empNo) {
            this.Invoke("CreateNewFleetCard", new object[] {
                        empNo});
        }
        
        /// <remarks/>
        public void CreateNewFleetCardAsync(string empNo) {
            this.CreateNewFleetCardAsync(empNo, null);
        }
        
        /// <remarks/>
        public void CreateNewFleetCardAsync(string empNo, object userState) {
            if ((this.CreateNewFleetCardOperationCompleted == null)) {
                this.CreateNewFleetCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewFleetCardOperationCompleted);
            }
            this.InvokeAsync("CreateNewFleetCard", new object[] {
                        empNo}, this.CreateNewFleetCardOperationCompleted, userState);
        }
        
        private void OnCreateNewFleetCardOperationCompleted(object arg) {
            if ((this.CreateNewFleetCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewFleetCardCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:CreateNewVehicleRepair", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="CreateNewVehicleRepair_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateNewVehicleRepair(string empNo) {
            object[] results = this.Invoke("CreateNewVehicleRepair", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewVehicleRepairAsync(string empNo) {
            this.CreateNewVehicleRepairAsync(empNo, null);
        }
        
        /// <remarks/>
        public void CreateNewVehicleRepairAsync(string empNo, object userState) {
            if ((this.CreateNewVehicleRepairOperationCompleted == null)) {
                this.CreateNewVehicleRepairOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewVehicleRepairOperationCompleted);
            }
            this.InvokeAsync("CreateNewVehicleRepair", new object[] {
                        empNo}, this.CreateNewVehicleRepairOperationCompleted, userState);
        }
        
        private void OnCreateNewVehicleRepairOperationCompleted(object arg) {
            if ((this.CreateNewVehicleRepairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewVehicleRepairCompleted(this, new CreateNewVehicleRepairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:UpdateImprestRequestHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="UpdateImprestRequestHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdateImprestRequestHeader(string docNo, string description, string dimension2, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateFrom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateTo) {
            object[] results = this.Invoke("UpdateImprestRequestHeader", new object[] {
                        docNo,
                        description,
                        dimension2,
                        dateFrom,
                        dateTo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateImprestRequestHeaderAsync(string docNo, string description, string dimension2, System.DateTime dateFrom, System.DateTime dateTo) {
            this.UpdateImprestRequestHeaderAsync(docNo, description, dimension2, dateFrom, dateTo, null);
        }
        
        /// <remarks/>
        public void UpdateImprestRequestHeaderAsync(string docNo, string description, string dimension2, System.DateTime dateFrom, System.DateTime dateTo, object userState) {
            if ((this.UpdateImprestRequestHeaderOperationCompleted == null)) {
                this.UpdateImprestRequestHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateImprestRequestHeaderOperationCompleted);
            }
            this.InvokeAsync("UpdateImprestRequestHeader", new object[] {
                        docNo,
                        description,
                        dimension2,
                        dateFrom,
                        dateTo}, this.UpdateImprestRequestHeaderOperationCompleted, userState);
        }
        
        private void OnUpdateImprestRequestHeaderOperationCompleted(object arg) {
            if ((this.UpdateImprestRequestHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateImprestRequestHeaderCompleted(this, new UpdateImprestRequestHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:UpdateVehicleRepairsHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="UpdateVehicleRepairsHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdateVehicleRepairsHeader(string docNo, string description, string serviceProvider, string serviceType, string regNo, string duration, decimal amount, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime serviceDate, decimal odometerReading, decimal serviceMileage) {
            object[] results = this.Invoke("UpdateVehicleRepairsHeader", new object[] {
                        docNo,
                        description,
                        serviceProvider,
                        serviceType,
                        regNo,
                        duration,
                        amount,
                        serviceDate,
                        odometerReading,
                        serviceMileage});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateVehicleRepairsHeaderAsync(string docNo, string description, string serviceProvider, string serviceType, string regNo, string duration, decimal amount, System.DateTime serviceDate, decimal odometerReading, decimal serviceMileage) {
            this.UpdateVehicleRepairsHeaderAsync(docNo, description, serviceProvider, serviceType, regNo, duration, amount, serviceDate, odometerReading, serviceMileage, null);
        }
        
        /// <remarks/>
        public void UpdateVehicleRepairsHeaderAsync(string docNo, string description, string serviceProvider, string serviceType, string regNo, string duration, decimal amount, System.DateTime serviceDate, decimal odometerReading, decimal serviceMileage, object userState) {
            if ((this.UpdateVehicleRepairsHeaderOperationCompleted == null)) {
                this.UpdateVehicleRepairsHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateVehicleRepairsHeaderOperationCompleted);
            }
            this.InvokeAsync("UpdateVehicleRepairsHeader", new object[] {
                        docNo,
                        description,
                        serviceProvider,
                        serviceType,
                        regNo,
                        duration,
                        amount,
                        serviceDate,
                        odometerReading,
                        serviceMileage}, this.UpdateVehicleRepairsHeaderOperationCompleted, userState);
        }
        
        private void OnUpdateVehicleRepairsHeaderOperationCompleted(object arg) {
            if ((this.UpdateVehicleRepairsHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateVehicleRepairsHeaderCompleted(this, new UpdateVehicleRepairsHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:GenerateBidAnalysisReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="GenerateBidAnalysisReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateBidAnalysisReport(string filenameFromApp, string docNo) {
            object[] results = this.Invoke("GenerateBidAnalysisReport", new object[] {
                        filenameFromApp,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateBidAnalysisReportAsync(string filenameFromApp, string docNo) {
            this.GenerateBidAnalysisReportAsync(filenameFromApp, docNo, null);
        }
        
        /// <remarks/>
        public void GenerateBidAnalysisReportAsync(string filenameFromApp, string docNo, object userState) {
            if ((this.GenerateBidAnalysisReportOperationCompleted == null)) {
                this.GenerateBidAnalysisReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateBidAnalysisReportOperationCompleted);
            }
            this.InvokeAsync("GenerateBidAnalysisReport", new object[] {
                        filenameFromApp,
                        docNo}, this.GenerateBidAnalysisReportOperationCompleted, userState);
        }
        
        private void OnGenerateBidAnalysisReportOperationCompleted(object arg) {
            if ((this.GenerateBidAnalysisReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateBidAnalysisReportCompleted(this, new GenerateBidAnalysisReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:GeneratePurchaseOrderReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="GeneratePurchaseOrderReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GeneratePurchaseOrderReport(string filenameFromApp, string docNo) {
            object[] results = this.Invoke("GeneratePurchaseOrderReport", new object[] {
                        filenameFromApp,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeneratePurchaseOrderReportAsync(string filenameFromApp, string docNo) {
            this.GeneratePurchaseOrderReportAsync(filenameFromApp, docNo, null);
        }
        
        /// <remarks/>
        public void GeneratePurchaseOrderReportAsync(string filenameFromApp, string docNo, object userState) {
            if ((this.GeneratePurchaseOrderReportOperationCompleted == null)) {
                this.GeneratePurchaseOrderReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePurchaseOrderReportOperationCompleted);
            }
            this.InvokeAsync("GeneratePurchaseOrderReport", new object[] {
                        filenameFromApp,
                        docNo}, this.GeneratePurchaseOrderReportOperationCompleted, userState);
        }
        
        private void OnGeneratePurchaseOrderReportOperationCompleted(object arg) {
            if ((this.GeneratePurchaseOrderReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePurchaseOrderReportCompleted(this, new GeneratePurchaseOrderReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:UpdateClaimsRequestHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="UpdateClaimsRequestHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdateClaimsRequestHeader(string docNo, string description, string dimension2) {
            object[] results = this.Invoke("UpdateClaimsRequestHeader", new object[] {
                        docNo,
                        description,
                        dimension2});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateClaimsRequestHeaderAsync(string docNo, string description, string dimension2) {
            this.UpdateClaimsRequestHeaderAsync(docNo, description, dimension2, null);
        }
        
        /// <remarks/>
        public void UpdateClaimsRequestHeaderAsync(string docNo, string description, string dimension2, object userState) {
            if ((this.UpdateClaimsRequestHeaderOperationCompleted == null)) {
                this.UpdateClaimsRequestHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateClaimsRequestHeaderOperationCompleted);
            }
            this.InvokeAsync("UpdateClaimsRequestHeader", new object[] {
                        docNo,
                        description,
                        dimension2}, this.UpdateClaimsRequestHeaderOperationCompleted, userState);
        }
        
        private void OnUpdateClaimsRequestHeaderOperationCompleted(object arg) {
            if ((this.UpdateClaimsRequestHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateClaimsRequestHeaderCompleted(this, new UpdateClaimsRequestHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:VehicleRepairLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="VehicleRepairLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void VehicleRepairLine(string header_No, string descriptin, decimal cost) {
            this.Invoke("VehicleRepairLine", new object[] {
                        header_No,
                        descriptin,
                        cost});
        }
        
        /// <remarks/>
        public void VehicleRepairLineAsync(string header_No, string descriptin, decimal cost) {
            this.VehicleRepairLineAsync(header_No, descriptin, cost, null);
        }
        
        /// <remarks/>
        public void VehicleRepairLineAsync(string header_No, string descriptin, decimal cost, object userState) {
            if ((this.VehicleRepairLineOperationCompleted == null)) {
                this.VehicleRepairLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleRepairLineOperationCompleted);
            }
            this.InvokeAsync("VehicleRepairLine", new object[] {
                        header_No,
                        descriptin,
                        cost}, this.VehicleRepairLineOperationCompleted, userState);
        }
        
        private void OnVehicleRepairLineOperationCompleted(object arg) {
            if ((this.VehicleRepairLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleRepairLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:EditVehicleRepairLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="EditVehicleRepairLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EditVehicleRepairLine(string header_No, int line_No, string description, decimal cost) {
            this.Invoke("EditVehicleRepairLine", new object[] {
                        header_No,
                        line_No,
                        description,
                        cost});
        }
        
        /// <remarks/>
        public void EditVehicleRepairLineAsync(string header_No, int line_No, string description, decimal cost) {
            this.EditVehicleRepairLineAsync(header_No, line_No, description, cost, null);
        }
        
        /// <remarks/>
        public void EditVehicleRepairLineAsync(string header_No, int line_No, string description, decimal cost, object userState) {
            if ((this.EditVehicleRepairLineOperationCompleted == null)) {
                this.EditVehicleRepairLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditVehicleRepairLineOperationCompleted);
            }
            this.InvokeAsync("EditVehicleRepairLine", new object[] {
                        header_No,
                        line_No,
                        description,
                        cost}, this.EditVehicleRepairLineOperationCompleted, userState);
        }
        
        private void OnEditVehicleRepairLineOperationCompleted(object arg) {
            if ((this.EditVehicleRepairLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditVehicleRepairLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:DeleteMaintainanceLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="DeleteMaintainanceLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteMaintainanceLine(int no) {
            this.Invoke("DeleteMaintainanceLine", new object[] {
                        no});
        }
        
        /// <remarks/>
        public void DeleteMaintainanceLineAsync(int no) {
            this.DeleteMaintainanceLineAsync(no, null);
        }
        
        /// <remarks/>
        public void DeleteMaintainanceLineAsync(int no, object userState) {
            if ((this.DeleteMaintainanceLineOperationCompleted == null)) {
                this.DeleteMaintainanceLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMaintainanceLineOperationCompleted);
            }
            this.InvokeAsync("DeleteMaintainanceLine", new object[] {
                        no}, this.DeleteMaintainanceLineOperationCompleted, userState);
        }
        
        private void OnDeleteMaintainanceLineOperationCompleted(object arg) {
            if ((this.DeleteMaintainanceLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMaintainanceLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:VehicleRepairsSendApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="VehicleRepairsSendApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void VehicleRepairsSendApproval(string no) {
            this.Invoke("VehicleRepairsSendApproval", new object[] {
                        no});
        }
        
        /// <remarks/>
        public void VehicleRepairsSendApprovalAsync(string no) {
            this.VehicleRepairsSendApprovalAsync(no, null);
        }
        
        /// <remarks/>
        public void VehicleRepairsSendApprovalAsync(string no, object userState) {
            if ((this.VehicleRepairsSendApprovalOperationCompleted == null)) {
                this.VehicleRepairsSendApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleRepairsSendApprovalOperationCompleted);
            }
            this.InvokeAsync("VehicleRepairsSendApproval", new object[] {
                        no}, this.VehicleRepairsSendApprovalOperationCompleted, userState);
        }
        
        private void OnVehicleRepairsSendApprovalOperationCompleted(object arg) {
            if ((this.VehicleRepairsSendApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleRepairsSendApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:VehicleRepairsCancelApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="VehicleRepairsCancelApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void VehicleRepairsCancelApproval(string no) {
            this.Invoke("VehicleRepairsCancelApproval", new object[] {
                        no});
        }
        
        /// <remarks/>
        public void VehicleRepairsCancelApprovalAsync(string no) {
            this.VehicleRepairsCancelApprovalAsync(no, null);
        }
        
        /// <remarks/>
        public void VehicleRepairsCancelApprovalAsync(string no, object userState) {
            if ((this.VehicleRepairsCancelApprovalOperationCompleted == null)) {
                this.VehicleRepairsCancelApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleRepairsCancelApprovalOperationCompleted);
            }
            this.InvokeAsync("VehicleRepairsCancelApproval", new object[] {
                        no}, this.VehicleRepairsCancelApprovalOperationCompleted, userState);
        }
        
        private void OnVehicleRepairsCancelApprovalOperationCompleted(object arg) {
            if ((this.VehicleRepairsCancelApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleRepairsCancelApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:CopyFixedAsset", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="CopyFixedAsset_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CopyFixedAsset(string faNo, int noOfCopies, string firstFANo, bool useFaNumberSeries) {
            this.Invoke("CopyFixedAsset", new object[] {
                        faNo,
                        noOfCopies,
                        firstFANo,
                        useFaNumberSeries});
        }
        
        /// <remarks/>
        public void CopyFixedAssetAsync(string faNo, int noOfCopies, string firstFANo, bool useFaNumberSeries) {
            this.CopyFixedAssetAsync(faNo, noOfCopies, firstFANo, useFaNumberSeries, null);
        }
        
        /// <remarks/>
        public void CopyFixedAssetAsync(string faNo, int noOfCopies, string firstFANo, bool useFaNumberSeries, object userState) {
            if ((this.CopyFixedAssetOperationCompleted == null)) {
                this.CopyFixedAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyFixedAssetOperationCompleted);
            }
            this.InvokeAsync("CopyFixedAsset", new object[] {
                        faNo,
                        noOfCopies,
                        firstFANo,
                        useFaNumberSeries}, this.CopyFixedAssetOperationCompleted, userState);
        }
        
        private void OnCopyFixedAssetOperationCompleted(object arg) {
            if ((this.CopyFixedAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyFixedAssetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:NewAssetTransfer", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="NewAssetTransfer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string NewAssetTransfer(string empNo) {
            object[] results = this.Invoke("NewAssetTransfer", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewAssetTransferAsync(string empNo) {
            this.NewAssetTransferAsync(empNo, null);
        }
        
        /// <remarks/>
        public void NewAssetTransferAsync(string empNo, object userState) {
            if ((this.NewAssetTransferOperationCompleted == null)) {
                this.NewAssetTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewAssetTransferOperationCompleted);
            }
            this.InvokeAsync("NewAssetTransfer", new object[] {
                        empNo}, this.NewAssetTransferOperationCompleted, userState);
        }
        
        private void OnNewAssetTransferOperationCompleted(object arg) {
            if ((this.NewAssetTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewAssetTransferCompleted(this, new NewAssetTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:EditAssetTransfer", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="EditAssetTransfer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EditAssetTransfer(string no, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime transferDate, string department) {
            this.Invoke("EditAssetTransfer", new object[] {
                        no,
                        transferDate,
                        department});
        }
        
        /// <remarks/>
        public void EditAssetTransferAsync(string no, System.DateTime transferDate, string department) {
            this.EditAssetTransferAsync(no, transferDate, department, null);
        }
        
        /// <remarks/>
        public void EditAssetTransferAsync(string no, System.DateTime transferDate, string department, object userState) {
            if ((this.EditAssetTransferOperationCompleted == null)) {
                this.EditAssetTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditAssetTransferOperationCompleted);
            }
            this.InvokeAsync("EditAssetTransfer", new object[] {
                        no,
                        transferDate,
                        department}, this.EditAssetTransferOperationCompleted, userState);
        }
        
        private void OnEditAssetTransferOperationCompleted(object arg) {
            if ((this.EditAssetTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditAssetTransferCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:NewAssetTransferLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="NewAssetTransferLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NewAssetTransferLine(string transfer_no, string asset_No, string current_Holder_No, string employee_No, string remarks) {
            this.Invoke("NewAssetTransferLine", new object[] {
                        transfer_no,
                        asset_No,
                        current_Holder_No,
                        employee_No,
                        remarks});
        }
        
        /// <remarks/>
        public void NewAssetTransferLineAsync(string transfer_no, string asset_No, string current_Holder_No, string employee_No, string remarks) {
            this.NewAssetTransferLineAsync(transfer_no, asset_No, current_Holder_No, employee_No, remarks, null);
        }
        
        /// <remarks/>
        public void NewAssetTransferLineAsync(string transfer_no, string asset_No, string current_Holder_No, string employee_No, string remarks, object userState) {
            if ((this.NewAssetTransferLineOperationCompleted == null)) {
                this.NewAssetTransferLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewAssetTransferLineOperationCompleted);
            }
            this.InvokeAsync("NewAssetTransferLine", new object[] {
                        transfer_no,
                        asset_No,
                        current_Holder_No,
                        employee_No,
                        remarks}, this.NewAssetTransferLineOperationCompleted, userState);
        }
        
        private void OnNewAssetTransferLineOperationCompleted(object arg) {
            if ((this.NewAssetTransferLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewAssetTransferLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:DeleteAssetTransferLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="DeleteAssetTransferLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAssetTransferLine(int no) {
            this.Invoke("DeleteAssetTransferLine", new object[] {
                        no});
        }
        
        /// <remarks/>
        public void DeleteAssetTransferLineAsync(int no) {
            this.DeleteAssetTransferLineAsync(no, null);
        }
        
        /// <remarks/>
        public void DeleteAssetTransferLineAsync(int no, object userState) {
            if ((this.DeleteAssetTransferLineOperationCompleted == null)) {
                this.DeleteAssetTransferLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAssetTransferLineOperationCompleted);
            }
            this.InvokeAsync("DeleteAssetTransferLine", new object[] {
                        no}, this.DeleteAssetTransferLineOperationCompleted, userState);
        }
        
        private void OnDeleteAssetTransferLineOperationCompleted(object arg) {
            if ((this.DeleteAssetTransferLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAssetTransferLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:EditAssetTransferLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="EditAssetTransferLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EditAssetTransferLine(int line_No, string asset_No, string current_Holder_No, string employee_No, string remarks) {
            this.Invoke("EditAssetTransferLine", new object[] {
                        line_No,
                        asset_No,
                        current_Holder_No,
                        employee_No,
                        remarks});
        }
        
        /// <remarks/>
        public void EditAssetTransferLineAsync(int line_No, string asset_No, string current_Holder_No, string employee_No, string remarks) {
            this.EditAssetTransferLineAsync(line_No, asset_No, current_Holder_No, employee_No, remarks, null);
        }
        
        /// <remarks/>
        public void EditAssetTransferLineAsync(int line_No, string asset_No, string current_Holder_No, string employee_No, string remarks, object userState) {
            if ((this.EditAssetTransferLineOperationCompleted == null)) {
                this.EditAssetTransferLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditAssetTransferLineOperationCompleted);
            }
            this.InvokeAsync("EditAssetTransferLine", new object[] {
                        line_No,
                        asset_No,
                        current_Holder_No,
                        employee_No,
                        remarks}, this.EditAssetTransferLineOperationCompleted, userState);
        }
        
        private void OnEditAssetTransferLineOperationCompleted(object arg) {
            if ((this.EditAssetTransferLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditAssetTransferLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:IssueAssetTransfer", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="IssueAssetTransfer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IssueAssetTransfer(string no) {
            this.Invoke("IssueAssetTransfer", new object[] {
                        no});
        }
        
        /// <remarks/>
        public void IssueAssetTransferAsync(string no) {
            this.IssueAssetTransferAsync(no, null);
        }
        
        /// <remarks/>
        public void IssueAssetTransferAsync(string no, object userState) {
            if ((this.IssueAssetTransferOperationCompleted == null)) {
                this.IssueAssetTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIssueAssetTransferOperationCompleted);
            }
            this.InvokeAsync("IssueAssetTransfer", new object[] {
                        no}, this.IssueAssetTransferOperationCompleted, userState);
        }
        
        private void OnIssueAssetTransferOperationCompleted(object arg) {
            if ((this.IssueAssetTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IssueAssetTransferCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:RecieveAssetTransfer", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="RecieveAssetTransfer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RecieveAssetTransfer(string no) {
            this.Invoke("RecieveAssetTransfer", new object[] {
                        no});
        }
        
        /// <remarks/>
        public void RecieveAssetTransferAsync(string no) {
            this.RecieveAssetTransferAsync(no, null);
        }
        
        /// <remarks/>
        public void RecieveAssetTransferAsync(string no, object userState) {
            if ((this.RecieveAssetTransferOperationCompleted == null)) {
                this.RecieveAssetTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecieveAssetTransferOperationCompleted);
            }
            this.InvokeAsync("RecieveAssetTransfer", new object[] {
                        no}, this.RecieveAssetTransferOperationCompleted, userState);
        }
        
        private void OnRecieveAssetTransferOperationCompleted(object arg) {
            if ((this.RecieveAssetTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecieveAssetTransferCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:EditFixedAsset", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="EditFixedAsset_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EditFixedAsset(
                    string no, 
                    string description, 
                    string classCode, 
                    string subClassCode, 
                    string location, 
                    string program, 
                    bool budgetAsset, 
                    string serialNo, 
                    string assetTagNo, 
                    int mainAssetComponent, 
                    bool inactive, 
                    bool blocked, 
                    bool acquired, 
                    string vendor, 
                    string maintainanceVendor, 
                    bool underMaintaince, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime nextServiceDate, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime warranteDate, 
                    bool insured, 
                    string responsibleEmpNo) {
            this.Invoke("EditFixedAsset", new object[] {
                        no,
                        description,
                        classCode,
                        subClassCode,
                        location,
                        program,
                        budgetAsset,
                        serialNo,
                        assetTagNo,
                        mainAssetComponent,
                        inactive,
                        blocked,
                        acquired,
                        vendor,
                        maintainanceVendor,
                        underMaintaince,
                        nextServiceDate,
                        warranteDate,
                        insured,
                        responsibleEmpNo});
        }
        
        /// <remarks/>
        public void EditFixedAssetAsync(
                    string no, 
                    string description, 
                    string classCode, 
                    string subClassCode, 
                    string location, 
                    string program, 
                    bool budgetAsset, 
                    string serialNo, 
                    string assetTagNo, 
                    int mainAssetComponent, 
                    bool inactive, 
                    bool blocked, 
                    bool acquired, 
                    string vendor, 
                    string maintainanceVendor, 
                    bool underMaintaince, 
                    System.DateTime nextServiceDate, 
                    System.DateTime warranteDate, 
                    bool insured, 
                    string responsibleEmpNo) {
            this.EditFixedAssetAsync(no, description, classCode, subClassCode, location, program, budgetAsset, serialNo, assetTagNo, mainAssetComponent, inactive, blocked, acquired, vendor, maintainanceVendor, underMaintaince, nextServiceDate, warranteDate, insured, responsibleEmpNo, null);
        }
        
        /// <remarks/>
        public void EditFixedAssetAsync(
                    string no, 
                    string description, 
                    string classCode, 
                    string subClassCode, 
                    string location, 
                    string program, 
                    bool budgetAsset, 
                    string serialNo, 
                    string assetTagNo, 
                    int mainAssetComponent, 
                    bool inactive, 
                    bool blocked, 
                    bool acquired, 
                    string vendor, 
                    string maintainanceVendor, 
                    bool underMaintaince, 
                    System.DateTime nextServiceDate, 
                    System.DateTime warranteDate, 
                    bool insured, 
                    string responsibleEmpNo, 
                    object userState) {
            if ((this.EditFixedAssetOperationCompleted == null)) {
                this.EditFixedAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditFixedAssetOperationCompleted);
            }
            this.InvokeAsync("EditFixedAsset", new object[] {
                        no,
                        description,
                        classCode,
                        subClassCode,
                        location,
                        program,
                        budgetAsset,
                        serialNo,
                        assetTagNo,
                        mainAssetComponent,
                        inactive,
                        blocked,
                        acquired,
                        vendor,
                        maintainanceVendor,
                        underMaintaince,
                        nextServiceDate,
                        warranteDate,
                        insured,
                        responsibleEmpNo}, this.EditFixedAssetOperationCompleted, userState);
        }
        
        private void OnEditFixedAssetOperationCompleted(object arg) {
            if ((this.EditFixedAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditFixedAssetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:NewFixedAsset", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="NewFixedAsset_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string NewFixedAsset(string empNo) {
            object[] results = this.Invoke("NewFixedAsset", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewFixedAssetAsync(string empNo) {
            this.NewFixedAssetAsync(empNo, null);
        }
        
        /// <remarks/>
        public void NewFixedAssetAsync(string empNo, object userState) {
            if ((this.NewFixedAssetOperationCompleted == null)) {
                this.NewFixedAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewFixedAssetOperationCompleted);
            }
            this.InvokeAsync("NewFixedAsset", new object[] {
                        empNo}, this.NewFixedAssetOperationCompleted, userState);
        }
        
        private void OnNewFixedAssetOperationCompleted(object arg) {
            if ((this.NewFixedAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewFixedAssetCompleted(this, new NewFixedAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:NewDepreciationBook", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="NewDepreciationBook_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string NewDepreciationBook(string no) {
            object[] results = this.Invoke("NewDepreciationBook", new object[] {
                        no});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewDepreciationBookAsync(string no) {
            this.NewDepreciationBookAsync(no, null);
        }
        
        /// <remarks/>
        public void NewDepreciationBookAsync(string no, object userState) {
            if ((this.NewDepreciationBookOperationCompleted == null)) {
                this.NewDepreciationBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewDepreciationBookOperationCompleted);
            }
            this.InvokeAsync("NewDepreciationBook", new object[] {
                        no}, this.NewDepreciationBookOperationCompleted, userState);
        }
        
        private void OnNewDepreciationBookOperationCompleted(object arg) {
            if ((this.NewDepreciationBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewDepreciationBookCompleted(this, new NewDepreciationBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:EditDepreciationBook", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="EditDepreciationBook_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditDepreciationBook(string no, string postingGroup, int depMethod, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime depStartDate, decimal noOfDepYears, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime depEndDate, string depTableCode, bool userHaveYearConvertion) {
            object[] results = this.Invoke("EditDepreciationBook", new object[] {
                        no,
                        postingGroup,
                        depMethod,
                        depStartDate,
                        noOfDepYears,
                        depEndDate,
                        depTableCode,
                        userHaveYearConvertion});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditDepreciationBookAsync(string no, string postingGroup, int depMethod, System.DateTime depStartDate, decimal noOfDepYears, System.DateTime depEndDate, string depTableCode, bool userHaveYearConvertion) {
            this.EditDepreciationBookAsync(no, postingGroup, depMethod, depStartDate, noOfDepYears, depEndDate, depTableCode, userHaveYearConvertion, null);
        }
        
        /// <remarks/>
        public void EditDepreciationBookAsync(string no, string postingGroup, int depMethod, System.DateTime depStartDate, decimal noOfDepYears, System.DateTime depEndDate, string depTableCode, bool userHaveYearConvertion, object userState) {
            if ((this.EditDepreciationBookOperationCompleted == null)) {
                this.EditDepreciationBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditDepreciationBookOperationCompleted);
            }
            this.InvokeAsync("EditDepreciationBook", new object[] {
                        no,
                        postingGroup,
                        depMethod,
                        depStartDate,
                        noOfDepYears,
                        depEndDate,
                        depTableCode,
                        userHaveYearConvertion}, this.EditDepreciationBookOperationCompleted, userState);
        }
        
        private void OnEditDepreciationBookOperationCompleted(object arg) {
            if ((this.EditDepreciationBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditDepreciationBookCompleted(this, new EditDepreciationBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:VehiclelastOdometer", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="VehiclelastOdometer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal VehiclelastOdometer(string vehicleNo) {
            object[] results = this.Invoke("VehiclelastOdometer", new object[] {
                        vehicleNo});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void VehiclelastOdometerAsync(string vehicleNo) {
            this.VehiclelastOdometerAsync(vehicleNo, null);
        }
        
        /// <remarks/>
        public void VehiclelastOdometerAsync(string vehicleNo, object userState) {
            if ((this.VehiclelastOdometerOperationCompleted == null)) {
                this.VehiclelastOdometerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehiclelastOdometerOperationCompleted);
            }
            this.InvokeAsync("VehiclelastOdometer", new object[] {
                        vehicleNo}, this.VehiclelastOdometerOperationCompleted, userState);
        }
        
        private void OnVehiclelastOdometerOperationCompleted(object arg) {
            if ((this.VehiclelastOdometerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehiclelastOdometerCompleted(this, new VehiclelastOdometerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:VehicleLastToo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="VehicleLastToo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string VehicleLastToo(string vehicleNo) {
            object[] results = this.Invoke("VehicleLastToo", new object[] {
                        vehicleNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleLastTooAsync(string vehicleNo) {
            this.VehicleLastTooAsync(vehicleNo, null);
        }
        
        /// <remarks/>
        public void VehicleLastTooAsync(string vehicleNo, object userState) {
            if ((this.VehicleLastTooOperationCompleted == null)) {
                this.VehicleLastTooOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleLastTooOperationCompleted);
            }
            this.InvokeAsync("VehicleLastToo", new object[] {
                        vehicleNo}, this.VehicleLastTooOperationCompleted, userState);
        }
        
        private void OnVehicleLastTooOperationCompleted(object arg) {
            if ((this.VehicleLastTooCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleLastTooCompleted(this, new VehicleLastTooCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS:UpdateMaintainanceHeaderAmoun" +
            "t", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", ResponseElementName="UpdateMaintainanceHeaderAmount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdateMaintainanceHeaderAmount(string docno, decimal amount) {
            object[] results = this.Invoke("UpdateMaintainanceHeaderAmount", new object[] {
                        docno,
                        amount});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMaintainanceHeaderAmountAsync(string docno, decimal amount) {
            this.UpdateMaintainanceHeaderAmountAsync(docno, amount, null);
        }
        
        /// <remarks/>
        public void UpdateMaintainanceHeaderAmountAsync(string docno, decimal amount, object userState) {
            if ((this.UpdateMaintainanceHeaderAmountOperationCompleted == null)) {
                this.UpdateMaintainanceHeaderAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMaintainanceHeaderAmountOperationCompleted);
            }
            this.InvokeAsync("UpdateMaintainanceHeaderAmount", new object[] {
                        docno,
                        amount}, this.UpdateMaintainanceHeaderAmountOperationCompleted, userState);
        }
        
        private void OnUpdateMaintainanceHeaderAmountOperationCompleted(object arg) {
            if ((this.UpdateMaintainanceHeaderAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMaintainanceHeaderAmountCompleted(this, new UpdateMaintainanceHeaderAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateTimeSheetEntryCompletedEventHandler(object sender, UpdateTimeSheetEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTimeSheetEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTimeSheetEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendToSupervisorCompletedEventHandler(object sender, SendToSupervisorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendToSupervisorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendToSupervisorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateTimeSheetReportCompletedEventHandler(object sender, GenerateTimeSheetReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateTimeSheetReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateTimeSheetReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ReturnToEmployeeCompletedEventHandler(object sender, ReturnToEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnToEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnToEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApproveTimesheetCompletedEventHandler(object sender, ApproveTimesheetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveTimesheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveTimesheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateTasksCompletedEventHandler(object sender, UpdateTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertTimesheetTasksCompletedEventHandler(object sender, InsertTimesheetTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTimesheetTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTimesheetTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteTimesheetTasksCompletedEventHandler(object sender, DeleteTimesheetTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTimesheetTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTimesheetTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertDocAttachmentCompletedEventHandler(object sender, InsertDocAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDocAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDocAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertPictureCompletedEventHandler(object sender, InsertPictureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertPictureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertPictureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertSignatureCompletedEventHandler(object sender, InsertSignatureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSignatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSignatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPassportPicCompletedEventHandler(object sender, GetPassportPicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPassportPicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPassportPicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateEmployeeDetailsCompletedEventHandler(object sender, UpdateEmployeeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmployeeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmployeeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSignatureCompletedEventHandler(object sender, GetSignatureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSignatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSignatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateTravelReportCompletedEventHandler(object sender, GenerateTravelReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateTravelReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateTravelReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GeneratePurchaseRequestReportCompletedEventHandler(object sender, GeneratePurchaseRequestReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneratePurchaseRequestReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneratePurchaseRequestReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdatePurchaseRequestHeaderCompletedEventHandler(object sender, UpdatePurchaseRequestHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePurchaseRequestHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePurchaseRequestHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateActivityReportCompletedEventHandler(object sender, GenerateActivityReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateActivityReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateActivityReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDocumentAttachmentCompletedEventHandler(object sender, GetDocumentAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteDocumentAttachmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteMaintainaceLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GeneratePettyCashReportCompletedEventHandler(object sender, GeneratePettyCashReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneratePettyCashReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneratePettyCashReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GeneratePettyCashSurrenderReportCompletedEventHandler(object sender, GeneratePettyCashSurrenderReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneratePettyCashSurrenderReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneratePettyCashSurrenderReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteFleetLogLineCompletedEventHandler(object sender, DeleteFleetLogLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFleetLogLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFleetLogLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SubmitFleetApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditFleeLogLineCompletedEventHandler(object sender, EditFleeLogLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditFleeLogLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditFleeLogLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertFleeLogLineCompletedEventHandler(object sender, InsertFleeLogLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertFleeLogLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertFleeLogLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateFleetReportCompletedEventHandler(object sender, GenerateFleetReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateFleetReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateFleetReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateNewFleetCardCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateNewVehicleRepairCompletedEventHandler(object sender, CreateNewVehicleRepairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewVehicleRepairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewVehicleRepairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateImprestRequestHeaderCompletedEventHandler(object sender, UpdateImprestRequestHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateImprestRequestHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateImprestRequestHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateVehicleRepairsHeaderCompletedEventHandler(object sender, UpdateVehicleRepairsHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateVehicleRepairsHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateVehicleRepairsHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateBidAnalysisReportCompletedEventHandler(object sender, GenerateBidAnalysisReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateBidAnalysisReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateBidAnalysisReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GeneratePurchaseOrderReportCompletedEventHandler(object sender, GeneratePurchaseOrderReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneratePurchaseOrderReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneratePurchaseOrderReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateClaimsRequestHeaderCompletedEventHandler(object sender, UpdateClaimsRequestHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateClaimsRequestHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateClaimsRequestHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void VehicleRepairLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditVehicleRepairLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteMaintainanceLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void VehicleRepairsSendApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void VehicleRepairsCancelApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CopyFixedAssetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void NewAssetTransferCompletedEventHandler(object sender, NewAssetTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewAssetTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewAssetTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditAssetTransferCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void NewAssetTransferLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteAssetTransferLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditAssetTransferLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void IssueAssetTransferCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RecieveAssetTransferCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditFixedAssetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void NewFixedAssetCompletedEventHandler(object sender, NewFixedAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewFixedAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewFixedAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void NewDepreciationBookCompletedEventHandler(object sender, NewDepreciationBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewDepreciationBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewDepreciationBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditDepreciationBookCompletedEventHandler(object sender, EditDepreciationBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditDepreciationBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditDepreciationBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void VehiclelastOdometerCompletedEventHandler(object sender, VehiclelastOdometerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehiclelastOdometerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehiclelastOdometerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void VehicleLastTooCompletedEventHandler(object sender, VehicleLastTooCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleLastTooCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleLastTooCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateMaintainanceHeaderAmountCompletedEventHandler(object sender, UpdateMaintainanceHeaderAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMaintainanceHeaderAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMaintainanceHeaderAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591