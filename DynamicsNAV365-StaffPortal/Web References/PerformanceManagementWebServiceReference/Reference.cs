//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DynamicsNAV365_StaffPortal.PerformanceManagementWebServiceReference {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PerformanceManagement_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement")]
    public partial class PerformanceManagement : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertCeoWorkplanLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCEOWorkPlanHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCEOWorkPlanLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyCEOWPLOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDirectorWorkPlanHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDirectorWorkplanLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDirectorsWorkPlanLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateManagerWorkPlanHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteManagerWorkplanLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAsstManagerWorkPlanHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOfficerWorkPlanHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOfficerTargetsHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTargetsApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyTargetLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyAppraisalLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyCompetencyLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTargetToSupervisorOperationCompleted;
        
        private System.Threading.SendOrPostCallback SupervisorModifyAppraiseePTOperationCompleted;
        
        private System.Threading.SendOrPostCallback SupervisorModifyAppraiseeCCOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyPeerLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyCustomerLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifySubordinateLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback AppraiseStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyDirectorWorkplanLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignAppraisersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyManagerWorkplanLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAsstManagerWorkplanLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyAsstManagerWorkplanLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAppraisalHeaderMidOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturntoAppraiseeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SupervisorModifyAppraiseePTMidYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyAppraisalLineMidYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcceptResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAppraisalHeaderEndOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTargetToSupervisorEndOperationCompleted;
        
        private System.Threading.SendOrPostCallback AppraiseStaffMidYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignAppraisersEndYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAppealHeaderMidOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAppealHeaderEndOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeclineResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeclineResultsMidYrOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PerformanceManagement() {
            this.Url = "http://cihebsvr.cihebk.local:7047/CIHEBK/WS/CIHEBKENYA/Codeunit/PerformanceManage" +
                "ment";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertCeoWorkplanLinesCompletedEventHandler InsertCeoWorkplanLinesCompleted;
        
        /// <remarks/>
        public event CreateCEOWorkPlanHeaderCompletedEventHandler CreateCEOWorkPlanHeaderCompleted;
        
        /// <remarks/>
        public event DeleteCEOWorkPlanLineCompletedEventHandler DeleteCEOWorkPlanLineCompleted;
        
        /// <remarks/>
        public event ModifyCEOWPLCompletedEventHandler ModifyCEOWPLCompleted;
        
        /// <remarks/>
        public event CreateDirectorWorkPlanHeaderCompletedEventHandler CreateDirectorWorkPlanHeaderCompleted;
        
        /// <remarks/>
        public event InsertDirectorWorkplanLinesCompletedEventHandler InsertDirectorWorkplanLinesCompleted;
        
        /// <remarks/>
        public event DeleteDirectorsWorkPlanLineCompletedEventHandler DeleteDirectorsWorkPlanLineCompleted;
        
        /// <remarks/>
        public event CreateManagerWorkPlanHeaderCompletedEventHandler CreateManagerWorkPlanHeaderCompleted;
        
        /// <remarks/>
        public event DeleteManagerWorkplanLineCompletedEventHandler DeleteManagerWorkplanLineCompleted;
        
        /// <remarks/>
        public event CreateAsstManagerWorkPlanHeaderCompletedEventHandler CreateAsstManagerWorkPlanHeaderCompleted;
        
        /// <remarks/>
        public event CreateOfficerWorkPlanHeaderCompletedEventHandler CreateOfficerWorkPlanHeaderCompleted;
        
        /// <remarks/>
        public event CreateOfficerTargetsHeaderCompletedEventHandler CreateOfficerTargetsHeaderCompleted;
        
        /// <remarks/>
        public event SendTargetsApprovalRequestCompletedEventHandler SendTargetsApprovalRequestCompleted;
        
        /// <remarks/>
        public event ModifyTargetLineCompletedEventHandler ModifyTargetLineCompleted;
        
        /// <remarks/>
        public event ModifyAppraisalLineCompletedEventHandler ModifyAppraisalLineCompleted;
        
        /// <remarks/>
        public event ModifyCompetencyLineCompletedEventHandler ModifyCompetencyLineCompleted;
        
        /// <remarks/>
        public event SendTargetToSupervisorCompletedEventHandler SendTargetToSupervisorCompleted;
        
        /// <remarks/>
        public event SupervisorModifyAppraiseePTCompletedEventHandler SupervisorModifyAppraiseePTCompleted;
        
        /// <remarks/>
        public event SupervisorModifyAppraiseeCCCompletedEventHandler SupervisorModifyAppraiseeCCCompleted;
        
        /// <remarks/>
        public event ModifyPeerLineCompletedEventHandler ModifyPeerLineCompleted;
        
        /// <remarks/>
        public event ModifyCustomerLineCompletedEventHandler ModifyCustomerLineCompleted;
        
        /// <remarks/>
        public event ModifySubordinateLineCompletedEventHandler ModifySubordinateLineCompleted;
        
        /// <remarks/>
        public event AppraiseStaffCompletedEventHandler AppraiseStaffCompleted;
        
        /// <remarks/>
        public event ModifyDirectorWorkplanLineCompletedEventHandler ModifyDirectorWorkplanLineCompleted;
        
        /// <remarks/>
        public event AssignAppraisersCompletedEventHandler AssignAppraisersCompleted;
        
        /// <remarks/>
        public event ModifyManagerWorkplanLineCompletedEventHandler ModifyManagerWorkplanLineCompleted;
        
        /// <remarks/>
        public event DeleteAsstManagerWorkplanLineCompletedEventHandler DeleteAsstManagerWorkplanLineCompleted;
        
        /// <remarks/>
        public event ModifyAsstManagerWorkplanLineCompletedEventHandler ModifyAsstManagerWorkplanLineCompleted;
        
        /// <remarks/>
        public event CreateAppraisalHeaderMidCompletedEventHandler CreateAppraisalHeaderMidCompleted;
        
        /// <remarks/>
        public event ReturntoAppraiseeCompletedEventHandler ReturntoAppraiseeCompleted;
        
        /// <remarks/>
        public event GetEmployeeNameCompletedEventHandler GetEmployeeNameCompleted;
        
        /// <remarks/>
        public event SupervisorModifyAppraiseePTMidYearCompletedEventHandler SupervisorModifyAppraiseePTMidYearCompleted;
        
        /// <remarks/>
        public event ModifyAppraisalLineMidYearCompletedEventHandler ModifyAppraisalLineMidYearCompleted;
        
        /// <remarks/>
        public event AcceptResultsCompletedEventHandler AcceptResultsCompleted;
        
        /// <remarks/>
        public event CreateAppraisalHeaderEndCompletedEventHandler CreateAppraisalHeaderEndCompleted;
        
        /// <remarks/>
        public event SendTargetToSupervisorEndCompletedEventHandler SendTargetToSupervisorEndCompleted;
        
        /// <remarks/>
        public event AppraiseStaffMidYearCompletedEventHandler AppraiseStaffMidYearCompleted;
        
        /// <remarks/>
        public event AssignAppraisersEndYearCompletedEventHandler AssignAppraisersEndYearCompleted;
        
        /// <remarks/>
        public event CreateAppealHeaderMidCompletedEventHandler CreateAppealHeaderMidCompleted;
        
        /// <remarks/>
        public event CreateAppealHeaderEndCompletedEventHandler CreateAppealHeaderEndCompleted;
        
        /// <remarks/>
        public event DeclineResultsCompletedEventHandler DeclineResultsCompleted;
        
        /// <remarks/>
        public event DeclineResultsMidYrCompletedEventHandler DeclineResultsMidYrCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:InsertCeoWorkplanLi" +
            "nes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="InsertCeoWorkplanLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertCeoWorkplanLines(string directorate, string performanceObjective, string activity, string pMI, string designation, string perspective, string project, string performanceOutcome, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime completionDate, decimal weightTotal, string userId, string headerNumber) {
            object[] results = this.Invoke("InsertCeoWorkplanLines", new object[] {
                        directorate,
                        performanceObjective,
                        activity,
                        pMI,
                        designation,
                        perspective,
                        project,
                        performanceOutcome,
                        completionDate,
                        weightTotal,
                        userId,
                        headerNumber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCeoWorkplanLinesAsync(string directorate, string performanceObjective, string activity, string pMI, string designation, string perspective, string project, string performanceOutcome, System.DateTime completionDate, decimal weightTotal, string userId, string headerNumber) {
            this.InsertCeoWorkplanLinesAsync(directorate, performanceObjective, activity, pMI, designation, perspective, project, performanceOutcome, completionDate, weightTotal, userId, headerNumber, null);
        }
        
        /// <remarks/>
        public void InsertCeoWorkplanLinesAsync(string directorate, string performanceObjective, string activity, string pMI, string designation, string perspective, string project, string performanceOutcome, System.DateTime completionDate, decimal weightTotal, string userId, string headerNumber, object userState) {
            if ((this.InsertCeoWorkplanLinesOperationCompleted == null)) {
                this.InsertCeoWorkplanLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCeoWorkplanLinesOperationCompleted);
            }
            this.InvokeAsync("InsertCeoWorkplanLines", new object[] {
                        directorate,
                        performanceObjective,
                        activity,
                        pMI,
                        designation,
                        perspective,
                        project,
                        performanceOutcome,
                        completionDate,
                        weightTotal,
                        userId,
                        headerNumber}, this.InsertCeoWorkplanLinesOperationCompleted, userState);
        }
        
        private void OnInsertCeoWorkplanLinesOperationCompleted(object arg) {
            if ((this.InsertCeoWorkplanLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCeoWorkplanLinesCompleted(this, new InsertCeoWorkplanLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:CreateCEOWorkPlanHe" +
            "ader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="CreateCEOWorkPlanHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreateCEOWorkPlanHeader(string designation, string userId) {
            object[] results = this.Invoke("CreateCEOWorkPlanHeader", new object[] {
                        designation,
                        userId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCEOWorkPlanHeaderAsync(string designation, string userId) {
            this.CreateCEOWorkPlanHeaderAsync(designation, userId, null);
        }
        
        /// <remarks/>
        public void CreateCEOWorkPlanHeaderAsync(string designation, string userId, object userState) {
            if ((this.CreateCEOWorkPlanHeaderOperationCompleted == null)) {
                this.CreateCEOWorkPlanHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCEOWorkPlanHeaderOperationCompleted);
            }
            this.InvokeAsync("CreateCEOWorkPlanHeader", new object[] {
                        designation,
                        userId}, this.CreateCEOWorkPlanHeaderOperationCompleted, userState);
        }
        
        private void OnCreateCEOWorkPlanHeaderOperationCompleted(object arg) {
            if ((this.CreateCEOWorkPlanHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCEOWorkPlanHeaderCompleted(this, new CreateCEOWorkPlanHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:DeleteCEOWorkPlanLi" +
            "ne", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="DeleteCEOWorkPlanLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteCEOWorkPlanLine(string code) {
            object[] results = this.Invoke("DeleteCEOWorkPlanLine", new object[] {
                        code});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCEOWorkPlanLineAsync(string code) {
            this.DeleteCEOWorkPlanLineAsync(code, null);
        }
        
        /// <remarks/>
        public void DeleteCEOWorkPlanLineAsync(string code, object userState) {
            if ((this.DeleteCEOWorkPlanLineOperationCompleted == null)) {
                this.DeleteCEOWorkPlanLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCEOWorkPlanLineOperationCompleted);
            }
            this.InvokeAsync("DeleteCEOWorkPlanLine", new object[] {
                        code}, this.DeleteCEOWorkPlanLineOperationCompleted, userState);
        }
        
        private void OnDeleteCEOWorkPlanLineOperationCompleted(object arg) {
            if ((this.DeleteCEOWorkPlanLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCEOWorkPlanLineCompleted(this, new DeleteCEOWorkPlanLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:ModifyCEOWPL", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="ModifyCEOWPL_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ModifyCEOWPL(string directorate, string performanceObjective, string activity, string pMI, string designation, string perspective, string project, string performanceOutcome, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime completionDate, decimal weightTotal, string userCode) {
            object[] results = this.Invoke("ModifyCEOWPL", new object[] {
                        directorate,
                        performanceObjective,
                        activity,
                        pMI,
                        designation,
                        perspective,
                        project,
                        performanceOutcome,
                        completionDate,
                        weightTotal,
                        userCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyCEOWPLAsync(string directorate, string performanceObjective, string activity, string pMI, string designation, string perspective, string project, string performanceOutcome, System.DateTime completionDate, decimal weightTotal, string userCode) {
            this.ModifyCEOWPLAsync(directorate, performanceObjective, activity, pMI, designation, perspective, project, performanceOutcome, completionDate, weightTotal, userCode, null);
        }
        
        /// <remarks/>
        public void ModifyCEOWPLAsync(string directorate, string performanceObjective, string activity, string pMI, string designation, string perspective, string project, string performanceOutcome, System.DateTime completionDate, decimal weightTotal, string userCode, object userState) {
            if ((this.ModifyCEOWPLOperationCompleted == null)) {
                this.ModifyCEOWPLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyCEOWPLOperationCompleted);
            }
            this.InvokeAsync("ModifyCEOWPL", new object[] {
                        directorate,
                        performanceObjective,
                        activity,
                        pMI,
                        designation,
                        perspective,
                        project,
                        performanceOutcome,
                        completionDate,
                        weightTotal,
                        userCode}, this.ModifyCEOWPLOperationCompleted, userState);
        }
        
        private void OnModifyCEOWPLOperationCompleted(object arg) {
            if ((this.ModifyCEOWPLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyCEOWPLCompleted(this, new ModifyCEOWPLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:CreateDirectorWorkP" +
            "lanHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="CreateDirectorWorkPlanHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreateDirectorWorkPlanHeader(string userId, string designation, string directorate) {
            object[] results = this.Invoke("CreateDirectorWorkPlanHeader", new object[] {
                        userId,
                        designation,
                        directorate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDirectorWorkPlanHeaderAsync(string userId, string designation, string directorate) {
            this.CreateDirectorWorkPlanHeaderAsync(userId, designation, directorate, null);
        }
        
        /// <remarks/>
        public void CreateDirectorWorkPlanHeaderAsync(string userId, string designation, string directorate, object userState) {
            if ((this.CreateDirectorWorkPlanHeaderOperationCompleted == null)) {
                this.CreateDirectorWorkPlanHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDirectorWorkPlanHeaderOperationCompleted);
            }
            this.InvokeAsync("CreateDirectorWorkPlanHeader", new object[] {
                        userId,
                        designation,
                        directorate}, this.CreateDirectorWorkPlanHeaderOperationCompleted, userState);
        }
        
        private void OnCreateDirectorWorkPlanHeaderOperationCompleted(object arg) {
            if ((this.CreateDirectorWorkPlanHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDirectorWorkPlanHeaderCompleted(this, new CreateDirectorWorkPlanHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:InsertDirectorWorkp" +
            "lanLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="InsertDirectorWorkplanLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertDirectorWorkplanLines(string directorate, string performanceObjective, string activity, string pMI, string designation, string perspective, string project, string performanceOutcome, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime completionDate, decimal weightTotal, string userId, string headerNumber) {
            object[] results = this.Invoke("InsertDirectorWorkplanLines", new object[] {
                        directorate,
                        performanceObjective,
                        activity,
                        pMI,
                        designation,
                        perspective,
                        project,
                        performanceOutcome,
                        completionDate,
                        weightTotal,
                        userId,
                        headerNumber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDirectorWorkplanLinesAsync(string directorate, string performanceObjective, string activity, string pMI, string designation, string perspective, string project, string performanceOutcome, System.DateTime completionDate, decimal weightTotal, string userId, string headerNumber) {
            this.InsertDirectorWorkplanLinesAsync(directorate, performanceObjective, activity, pMI, designation, perspective, project, performanceOutcome, completionDate, weightTotal, userId, headerNumber, null);
        }
        
        /// <remarks/>
        public void InsertDirectorWorkplanLinesAsync(string directorate, string performanceObjective, string activity, string pMI, string designation, string perspective, string project, string performanceOutcome, System.DateTime completionDate, decimal weightTotal, string userId, string headerNumber, object userState) {
            if ((this.InsertDirectorWorkplanLinesOperationCompleted == null)) {
                this.InsertDirectorWorkplanLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDirectorWorkplanLinesOperationCompleted);
            }
            this.InvokeAsync("InsertDirectorWorkplanLines", new object[] {
                        directorate,
                        performanceObjective,
                        activity,
                        pMI,
                        designation,
                        perspective,
                        project,
                        performanceOutcome,
                        completionDate,
                        weightTotal,
                        userId,
                        headerNumber}, this.InsertDirectorWorkplanLinesOperationCompleted, userState);
        }
        
        private void OnInsertDirectorWorkplanLinesOperationCompleted(object arg) {
            if ((this.InsertDirectorWorkplanLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDirectorWorkplanLinesCompleted(this, new InsertDirectorWorkplanLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:DeleteDirectorsWork" +
            "PlanLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="DeleteDirectorsWorkPlanLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteDirectorsWorkPlanLine(string code) {
            object[] results = this.Invoke("DeleteDirectorsWorkPlanLine", new object[] {
                        code});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDirectorsWorkPlanLineAsync(string code) {
            this.DeleteDirectorsWorkPlanLineAsync(code, null);
        }
        
        /// <remarks/>
        public void DeleteDirectorsWorkPlanLineAsync(string code, object userState) {
            if ((this.DeleteDirectorsWorkPlanLineOperationCompleted == null)) {
                this.DeleteDirectorsWorkPlanLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDirectorsWorkPlanLineOperationCompleted);
            }
            this.InvokeAsync("DeleteDirectorsWorkPlanLine", new object[] {
                        code}, this.DeleteDirectorsWorkPlanLineOperationCompleted, userState);
        }
        
        private void OnDeleteDirectorsWorkPlanLineOperationCompleted(object arg) {
            if ((this.DeleteDirectorsWorkPlanLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDirectorsWorkPlanLineCompleted(this, new DeleteDirectorsWorkPlanLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:CreateManagerWorkPl" +
            "anHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="CreateManagerWorkPlanHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreateManagerWorkPlanHeader(string userId, string designation, string department, string directorate) {
            object[] results = this.Invoke("CreateManagerWorkPlanHeader", new object[] {
                        userId,
                        designation,
                        department,
                        directorate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateManagerWorkPlanHeaderAsync(string userId, string designation, string department, string directorate) {
            this.CreateManagerWorkPlanHeaderAsync(userId, designation, department, directorate, null);
        }
        
        /// <remarks/>
        public void CreateManagerWorkPlanHeaderAsync(string userId, string designation, string department, string directorate, object userState) {
            if ((this.CreateManagerWorkPlanHeaderOperationCompleted == null)) {
                this.CreateManagerWorkPlanHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateManagerWorkPlanHeaderOperationCompleted);
            }
            this.InvokeAsync("CreateManagerWorkPlanHeader", new object[] {
                        userId,
                        designation,
                        department,
                        directorate}, this.CreateManagerWorkPlanHeaderOperationCompleted, userState);
        }
        
        private void OnCreateManagerWorkPlanHeaderOperationCompleted(object arg) {
            if ((this.CreateManagerWorkPlanHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateManagerWorkPlanHeaderCompleted(this, new CreateManagerWorkPlanHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:DeleteManagerWorkpl" +
            "anLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="DeleteManagerWorkplanLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteManagerWorkplanLine(string code) {
            object[] results = this.Invoke("DeleteManagerWorkplanLine", new object[] {
                        code});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteManagerWorkplanLineAsync(string code) {
            this.DeleteManagerWorkplanLineAsync(code, null);
        }
        
        /// <remarks/>
        public void DeleteManagerWorkplanLineAsync(string code, object userState) {
            if ((this.DeleteManagerWorkplanLineOperationCompleted == null)) {
                this.DeleteManagerWorkplanLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteManagerWorkplanLineOperationCompleted);
            }
            this.InvokeAsync("DeleteManagerWorkplanLine", new object[] {
                        code}, this.DeleteManagerWorkplanLineOperationCompleted, userState);
        }
        
        private void OnDeleteManagerWorkplanLineOperationCompleted(object arg) {
            if ((this.DeleteManagerWorkplanLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteManagerWorkplanLineCompleted(this, new DeleteManagerWorkplanLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:CreateAsstManagerWo" +
            "rkPlanHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="CreateAsstManagerWorkPlanHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreateAsstManagerWorkPlanHeader(string userId, string department, string directorate) {
            object[] results = this.Invoke("CreateAsstManagerWorkPlanHeader", new object[] {
                        userId,
                        department,
                        directorate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAsstManagerWorkPlanHeaderAsync(string userId, string department, string directorate) {
            this.CreateAsstManagerWorkPlanHeaderAsync(userId, department, directorate, null);
        }
        
        /// <remarks/>
        public void CreateAsstManagerWorkPlanHeaderAsync(string userId, string department, string directorate, object userState) {
            if ((this.CreateAsstManagerWorkPlanHeaderOperationCompleted == null)) {
                this.CreateAsstManagerWorkPlanHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAsstManagerWorkPlanHeaderOperationCompleted);
            }
            this.InvokeAsync("CreateAsstManagerWorkPlanHeader", new object[] {
                        userId,
                        department,
                        directorate}, this.CreateAsstManagerWorkPlanHeaderOperationCompleted, userState);
        }
        
        private void OnCreateAsstManagerWorkPlanHeaderOperationCompleted(object arg) {
            if ((this.CreateAsstManagerWorkPlanHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAsstManagerWorkPlanHeaderCompleted(this, new CreateAsstManagerWorkPlanHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:CreateOfficerWorkPl" +
            "anHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="CreateOfficerWorkPlanHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreateOfficerWorkPlanHeader(string userId, string department, string directorate) {
            object[] results = this.Invoke("CreateOfficerWorkPlanHeader", new object[] {
                        userId,
                        department,
                        directorate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOfficerWorkPlanHeaderAsync(string userId, string department, string directorate) {
            this.CreateOfficerWorkPlanHeaderAsync(userId, department, directorate, null);
        }
        
        /// <remarks/>
        public void CreateOfficerWorkPlanHeaderAsync(string userId, string department, string directorate, object userState) {
            if ((this.CreateOfficerWorkPlanHeaderOperationCompleted == null)) {
                this.CreateOfficerWorkPlanHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOfficerWorkPlanHeaderOperationCompleted);
            }
            this.InvokeAsync("CreateOfficerWorkPlanHeader", new object[] {
                        userId,
                        department,
                        directorate}, this.CreateOfficerWorkPlanHeaderOperationCompleted, userState);
        }
        
        private void OnCreateOfficerWorkPlanHeaderOperationCompleted(object arg) {
            if ((this.CreateOfficerWorkPlanHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOfficerWorkPlanHeaderCompleted(this, new CreateOfficerWorkPlanHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:CreateOfficerTarget" +
            "sHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="CreateOfficerTargetsHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreateOfficerTargetsHeader(string staffNo, string myUserId) {
            object[] results = this.Invoke("CreateOfficerTargetsHeader", new object[] {
                        staffNo,
                        myUserId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOfficerTargetsHeaderAsync(string staffNo, string myUserId) {
            this.CreateOfficerTargetsHeaderAsync(staffNo, myUserId, null);
        }
        
        /// <remarks/>
        public void CreateOfficerTargetsHeaderAsync(string staffNo, string myUserId, object userState) {
            if ((this.CreateOfficerTargetsHeaderOperationCompleted == null)) {
                this.CreateOfficerTargetsHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOfficerTargetsHeaderOperationCompleted);
            }
            this.InvokeAsync("CreateOfficerTargetsHeader", new object[] {
                        staffNo,
                        myUserId}, this.CreateOfficerTargetsHeaderOperationCompleted, userState);
        }
        
        private void OnCreateOfficerTargetsHeaderOperationCompleted(object arg) {
            if ((this.CreateOfficerTargetsHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOfficerTargetsHeaderCompleted(this, new CreateOfficerTargetsHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:SendTargetsApproval" +
            "Request", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="SendTargetsApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SendTargetsApprovalRequest(string workplanHeaderNumber) {
            object[] results = this.Invoke("SendTargetsApprovalRequest", new object[] {
                        workplanHeaderNumber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendTargetsApprovalRequestAsync(string workplanHeaderNumber) {
            this.SendTargetsApprovalRequestAsync(workplanHeaderNumber, null);
        }
        
        /// <remarks/>
        public void SendTargetsApprovalRequestAsync(string workplanHeaderNumber, object userState) {
            if ((this.SendTargetsApprovalRequestOperationCompleted == null)) {
                this.SendTargetsApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTargetsApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("SendTargetsApprovalRequest", new object[] {
                        workplanHeaderNumber}, this.SendTargetsApprovalRequestOperationCompleted, userState);
        }
        
        private void OnSendTargetsApprovalRequestOperationCompleted(object arg) {
            if ((this.SendTargetsApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTargetsApprovalRequestCompleted(this, new SendTargetsApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:ModifyTargetLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="ModifyTargetLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ModifyTargetLine(int targetScore, string primaryCode) {
            object[] results = this.Invoke("ModifyTargetLine", new object[] {
                        targetScore,
                        primaryCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyTargetLineAsync(int targetScore, string primaryCode) {
            this.ModifyTargetLineAsync(targetScore, primaryCode, null);
        }
        
        /// <remarks/>
        public void ModifyTargetLineAsync(int targetScore, string primaryCode, object userState) {
            if ((this.ModifyTargetLineOperationCompleted == null)) {
                this.ModifyTargetLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyTargetLineOperationCompleted);
            }
            this.InvokeAsync("ModifyTargetLine", new object[] {
                        targetScore,
                        primaryCode}, this.ModifyTargetLineOperationCompleted, userState);
        }
        
        private void OnModifyTargetLineOperationCompleted(object arg) {
            if ((this.ModifyTargetLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyTargetLineCompleted(this, new ModifyTargetLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:ModifyAppraisalLine" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="ModifyAppraisalLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ModifyAppraisalLine(string endYearAppraiseeComments, int endYearSelfScore, int lineNo) {
            object[] results = this.Invoke("ModifyAppraisalLine", new object[] {
                        endYearAppraiseeComments,
                        endYearSelfScore,
                        lineNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyAppraisalLineAsync(string endYearAppraiseeComments, int endYearSelfScore, int lineNo) {
            this.ModifyAppraisalLineAsync(endYearAppraiseeComments, endYearSelfScore, lineNo, null);
        }
        
        /// <remarks/>
        public void ModifyAppraisalLineAsync(string endYearAppraiseeComments, int endYearSelfScore, int lineNo, object userState) {
            if ((this.ModifyAppraisalLineOperationCompleted == null)) {
                this.ModifyAppraisalLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyAppraisalLineOperationCompleted);
            }
            this.InvokeAsync("ModifyAppraisalLine", new object[] {
                        endYearAppraiseeComments,
                        endYearSelfScore,
                        lineNo}, this.ModifyAppraisalLineOperationCompleted, userState);
        }
        
        private void OnModifyAppraisalLineOperationCompleted(object arg) {
            if ((this.ModifyAppraisalLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyAppraisalLineCompleted(this, new ModifyAppraisalLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:ModifyCompetencyLin" +
            "e", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="ModifyCompetencyLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ModifyCompetencyLine(decimal score, string appraiseeComments, string code, string appraisalNo) {
            object[] results = this.Invoke("ModifyCompetencyLine", new object[] {
                        score,
                        appraiseeComments,
                        code,
                        appraisalNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyCompetencyLineAsync(decimal score, string appraiseeComments, string code, string appraisalNo) {
            this.ModifyCompetencyLineAsync(score, appraiseeComments, code, appraisalNo, null);
        }
        
        /// <remarks/>
        public void ModifyCompetencyLineAsync(decimal score, string appraiseeComments, string code, string appraisalNo, object userState) {
            if ((this.ModifyCompetencyLineOperationCompleted == null)) {
                this.ModifyCompetencyLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyCompetencyLineOperationCompleted);
            }
            this.InvokeAsync("ModifyCompetencyLine", new object[] {
                        score,
                        appraiseeComments,
                        code,
                        appraisalNo}, this.ModifyCompetencyLineOperationCompleted, userState);
        }
        
        private void OnModifyCompetencyLineOperationCompleted(object arg) {
            if ((this.ModifyCompetencyLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyCompetencyLineCompleted(this, new ModifyCompetencyLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:SendTargetToSupervi" +
            "sor", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="SendTargetToSupervisor_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SendTargetToSupervisor(string staffNo) {
            object[] results = this.Invoke("SendTargetToSupervisor", new object[] {
                        staffNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendTargetToSupervisorAsync(string staffNo) {
            this.SendTargetToSupervisorAsync(staffNo, null);
        }
        
        /// <remarks/>
        public void SendTargetToSupervisorAsync(string staffNo, object userState) {
            if ((this.SendTargetToSupervisorOperationCompleted == null)) {
                this.SendTargetToSupervisorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTargetToSupervisorOperationCompleted);
            }
            this.InvokeAsync("SendTargetToSupervisor", new object[] {
                        staffNo}, this.SendTargetToSupervisorOperationCompleted, userState);
        }
        
        private void OnSendTargetToSupervisorOperationCompleted(object arg) {
            if ((this.SendTargetToSupervisorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTargetToSupervisorCompleted(this, new SendTargetToSupervisorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:SupervisorModifyApp" +
            "raiseePT", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="SupervisorModifyAppraiseePT_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SupervisorModifyAppraiseePT(int lineNo, int endSupervisorScore, decimal endSupervisorAgreedScore, string endSupervisorComments, string endAsmComments) {
            object[] results = this.Invoke("SupervisorModifyAppraiseePT", new object[] {
                        lineNo,
                        endSupervisorScore,
                        endSupervisorAgreedScore,
                        endSupervisorComments,
                        endAsmComments});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SupervisorModifyAppraiseePTAsync(int lineNo, int endSupervisorScore, decimal endSupervisorAgreedScore, string endSupervisorComments, string endAsmComments) {
            this.SupervisorModifyAppraiseePTAsync(lineNo, endSupervisorScore, endSupervisorAgreedScore, endSupervisorComments, endAsmComments, null);
        }
        
        /// <remarks/>
        public void SupervisorModifyAppraiseePTAsync(int lineNo, int endSupervisorScore, decimal endSupervisorAgreedScore, string endSupervisorComments, string endAsmComments, object userState) {
            if ((this.SupervisorModifyAppraiseePTOperationCompleted == null)) {
                this.SupervisorModifyAppraiseePTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSupervisorModifyAppraiseePTOperationCompleted);
            }
            this.InvokeAsync("SupervisorModifyAppraiseePT", new object[] {
                        lineNo,
                        endSupervisorScore,
                        endSupervisorAgreedScore,
                        endSupervisorComments,
                        endAsmComments}, this.SupervisorModifyAppraiseePTOperationCompleted, userState);
        }
        
        private void OnSupervisorModifyAppraiseePTOperationCompleted(object arg) {
            if ((this.SupervisorModifyAppraiseePTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SupervisorModifyAppraiseePTCompleted(this, new SupervisorModifyAppraiseePTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:SupervisorModifyApp" +
            "raiseeCC", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="SupervisorModifyAppraiseeCC_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SupervisorModifyAppraiseeCC(string coreCode, string appraisalNo, decimal supervisorScore, decimal agreedScore) {
            object[] results = this.Invoke("SupervisorModifyAppraiseeCC", new object[] {
                        coreCode,
                        appraisalNo,
                        supervisorScore,
                        agreedScore});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SupervisorModifyAppraiseeCCAsync(string coreCode, string appraisalNo, decimal supervisorScore, decimal agreedScore) {
            this.SupervisorModifyAppraiseeCCAsync(coreCode, appraisalNo, supervisorScore, agreedScore, null);
        }
        
        /// <remarks/>
        public void SupervisorModifyAppraiseeCCAsync(string coreCode, string appraisalNo, decimal supervisorScore, decimal agreedScore, object userState) {
            if ((this.SupervisorModifyAppraiseeCCOperationCompleted == null)) {
                this.SupervisorModifyAppraiseeCCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSupervisorModifyAppraiseeCCOperationCompleted);
            }
            this.InvokeAsync("SupervisorModifyAppraiseeCC", new object[] {
                        coreCode,
                        appraisalNo,
                        supervisorScore,
                        agreedScore}, this.SupervisorModifyAppraiseeCCOperationCompleted, userState);
        }
        
        private void OnSupervisorModifyAppraiseeCCOperationCompleted(object arg) {
            if ((this.SupervisorModifyAppraiseeCCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SupervisorModifyAppraiseeCCCompleted(this, new SupervisorModifyAppraiseeCCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:ModifyPeerLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="ModifyPeerLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ModifyPeerLine(decimal peerRating, string peerComments, int lineNo) {
            object[] results = this.Invoke("ModifyPeerLine", new object[] {
                        peerRating,
                        peerComments,
                        lineNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyPeerLineAsync(decimal peerRating, string peerComments, int lineNo) {
            this.ModifyPeerLineAsync(peerRating, peerComments, lineNo, null);
        }
        
        /// <remarks/>
        public void ModifyPeerLineAsync(decimal peerRating, string peerComments, int lineNo, object userState) {
            if ((this.ModifyPeerLineOperationCompleted == null)) {
                this.ModifyPeerLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyPeerLineOperationCompleted);
            }
            this.InvokeAsync("ModifyPeerLine", new object[] {
                        peerRating,
                        peerComments,
                        lineNo}, this.ModifyPeerLineOperationCompleted, userState);
        }
        
        private void OnModifyPeerLineOperationCompleted(object arg) {
            if ((this.ModifyPeerLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyPeerLineCompleted(this, new ModifyPeerLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:ModifyCustomerLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="ModifyCustomerLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ModifyCustomerLine(int lineNo, decimal customerRating, string customerComments) {
            object[] results = this.Invoke("ModifyCustomerLine", new object[] {
                        lineNo,
                        customerRating,
                        customerComments});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyCustomerLineAsync(int lineNo, decimal customerRating, string customerComments) {
            this.ModifyCustomerLineAsync(lineNo, customerRating, customerComments, null);
        }
        
        /// <remarks/>
        public void ModifyCustomerLineAsync(int lineNo, decimal customerRating, string customerComments, object userState) {
            if ((this.ModifyCustomerLineOperationCompleted == null)) {
                this.ModifyCustomerLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyCustomerLineOperationCompleted);
            }
            this.InvokeAsync("ModifyCustomerLine", new object[] {
                        lineNo,
                        customerRating,
                        customerComments}, this.ModifyCustomerLineOperationCompleted, userState);
        }
        
        private void OnModifyCustomerLineOperationCompleted(object arg) {
            if ((this.ModifyCustomerLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyCustomerLineCompleted(this, new ModifyCustomerLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:ModifySubordinateLi" +
            "ne", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="ModifySubordinateLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ModifySubordinateLine(int lineNo, decimal subordinateRating, string subordinateComments) {
            object[] results = this.Invoke("ModifySubordinateLine", new object[] {
                        lineNo,
                        subordinateRating,
                        subordinateComments});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifySubordinateLineAsync(int lineNo, decimal subordinateRating, string subordinateComments) {
            this.ModifySubordinateLineAsync(lineNo, subordinateRating, subordinateComments, null);
        }
        
        /// <remarks/>
        public void ModifySubordinateLineAsync(int lineNo, decimal subordinateRating, string subordinateComments, object userState) {
            if ((this.ModifySubordinateLineOperationCompleted == null)) {
                this.ModifySubordinateLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifySubordinateLineOperationCompleted);
            }
            this.InvokeAsync("ModifySubordinateLine", new object[] {
                        lineNo,
                        subordinateRating,
                        subordinateComments}, this.ModifySubordinateLineOperationCompleted, userState);
        }
        
        private void OnModifySubordinateLineOperationCompleted(object arg) {
            if ((this.ModifySubordinateLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifySubordinateLineCompleted(this, new ModifySubordinateLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:AppraiseStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="AppraiseStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AppraiseStaff(string documentNumber, string aUserId) {
            this.Invoke("AppraiseStaff", new object[] {
                        documentNumber,
                        aUserId});
        }
        
        /// <remarks/>
        public void AppraiseStaffAsync(string documentNumber, string aUserId) {
            this.AppraiseStaffAsync(documentNumber, aUserId, null);
        }
        
        /// <remarks/>
        public void AppraiseStaffAsync(string documentNumber, string aUserId, object userState) {
            if ((this.AppraiseStaffOperationCompleted == null)) {
                this.AppraiseStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAppraiseStaffOperationCompleted);
            }
            this.InvokeAsync("AppraiseStaff", new object[] {
                        documentNumber,
                        aUserId}, this.AppraiseStaffOperationCompleted, userState);
        }
        
        private void OnAppraiseStaffOperationCompleted(object arg) {
            if ((this.AppraiseStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AppraiseStaffCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:ModifyDirectorWorkp" +
            "lanLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="ModifyDirectorWorkplanLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ModifyDirectorWorkplanLine([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime completionDate, string userCode, decimal weightTotal, string performanceOutcome, string project, string performanceObjective, string headerNo, string perspective, string directorate) {
            object[] results = this.Invoke("ModifyDirectorWorkplanLine", new object[] {
                        completionDate,
                        userCode,
                        weightTotal,
                        performanceOutcome,
                        project,
                        performanceObjective,
                        headerNo,
                        perspective,
                        directorate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyDirectorWorkplanLineAsync(System.DateTime completionDate, string userCode, decimal weightTotal, string performanceOutcome, string project, string performanceObjective, string headerNo, string perspective, string directorate) {
            this.ModifyDirectorWorkplanLineAsync(completionDate, userCode, weightTotal, performanceOutcome, project, performanceObjective, headerNo, perspective, directorate, null);
        }
        
        /// <remarks/>
        public void ModifyDirectorWorkplanLineAsync(System.DateTime completionDate, string userCode, decimal weightTotal, string performanceOutcome, string project, string performanceObjective, string headerNo, string perspective, string directorate, object userState) {
            if ((this.ModifyDirectorWorkplanLineOperationCompleted == null)) {
                this.ModifyDirectorWorkplanLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyDirectorWorkplanLineOperationCompleted);
            }
            this.InvokeAsync("ModifyDirectorWorkplanLine", new object[] {
                        completionDate,
                        userCode,
                        weightTotal,
                        performanceOutcome,
                        project,
                        performanceObjective,
                        headerNo,
                        perspective,
                        directorate}, this.ModifyDirectorWorkplanLineOperationCompleted, userState);
        }
        
        private void OnModifyDirectorWorkplanLineOperationCompleted(object arg) {
            if ((this.ModifyDirectorWorkplanLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyDirectorWorkplanLineCompleted(this, new ModifyDirectorWorkplanLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:AssignAppraisers", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="AssignAppraisers_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool AssignAppraisers(string peerAppraiser, string customerAppraiser, string subordinateAppraiser, string appraisalNo) {
            object[] results = this.Invoke("AssignAppraisers", new object[] {
                        peerAppraiser,
                        customerAppraiser,
                        subordinateAppraiser,
                        appraisalNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AssignAppraisersAsync(string peerAppraiser, string customerAppraiser, string subordinateAppraiser, string appraisalNo) {
            this.AssignAppraisersAsync(peerAppraiser, customerAppraiser, subordinateAppraiser, appraisalNo, null);
        }
        
        /// <remarks/>
        public void AssignAppraisersAsync(string peerAppraiser, string customerAppraiser, string subordinateAppraiser, string appraisalNo, object userState) {
            if ((this.AssignAppraisersOperationCompleted == null)) {
                this.AssignAppraisersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignAppraisersOperationCompleted);
            }
            this.InvokeAsync("AssignAppraisers", new object[] {
                        peerAppraiser,
                        customerAppraiser,
                        subordinateAppraiser,
                        appraisalNo}, this.AssignAppraisersOperationCompleted, userState);
        }
        
        private void OnAssignAppraisersOperationCompleted(object arg) {
            if ((this.AssignAppraisersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignAppraisersCompleted(this, new AssignAppraisersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:ModifyManagerWorkpl" +
            "anLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="ModifyManagerWorkplanLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ModifyManagerWorkplanLine([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime completionDate, string userCode, decimal weightTotal, string performanceOutcome, string project, string performanceObjective, string headerNo, string perspective, string directorate, string deptObjective, string department) {
            object[] results = this.Invoke("ModifyManagerWorkplanLine", new object[] {
                        completionDate,
                        userCode,
                        weightTotal,
                        performanceOutcome,
                        project,
                        performanceObjective,
                        headerNo,
                        perspective,
                        directorate,
                        deptObjective,
                        department});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyManagerWorkplanLineAsync(System.DateTime completionDate, string userCode, decimal weightTotal, string performanceOutcome, string project, string performanceObjective, string headerNo, string perspective, string directorate, string deptObjective, string department) {
            this.ModifyManagerWorkplanLineAsync(completionDate, userCode, weightTotal, performanceOutcome, project, performanceObjective, headerNo, perspective, directorate, deptObjective, department, null);
        }
        
        /// <remarks/>
        public void ModifyManagerWorkplanLineAsync(System.DateTime completionDate, string userCode, decimal weightTotal, string performanceOutcome, string project, string performanceObjective, string headerNo, string perspective, string directorate, string deptObjective, string department, object userState) {
            if ((this.ModifyManagerWorkplanLineOperationCompleted == null)) {
                this.ModifyManagerWorkplanLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyManagerWorkplanLineOperationCompleted);
            }
            this.InvokeAsync("ModifyManagerWorkplanLine", new object[] {
                        completionDate,
                        userCode,
                        weightTotal,
                        performanceOutcome,
                        project,
                        performanceObjective,
                        headerNo,
                        perspective,
                        directorate,
                        deptObjective,
                        department}, this.ModifyManagerWorkplanLineOperationCompleted, userState);
        }
        
        private void OnModifyManagerWorkplanLineOperationCompleted(object arg) {
            if ((this.ModifyManagerWorkplanLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyManagerWorkplanLineCompleted(this, new ModifyManagerWorkplanLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:DeleteAsstManagerWo" +
            "rkplanLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="DeleteAsstManagerWorkplanLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteAsstManagerWorkplanLine(string lineCode) {
            object[] results = this.Invoke("DeleteAsstManagerWorkplanLine", new object[] {
                        lineCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsstManagerWorkplanLineAsync(string lineCode) {
            this.DeleteAsstManagerWorkplanLineAsync(lineCode, null);
        }
        
        /// <remarks/>
        public void DeleteAsstManagerWorkplanLineAsync(string lineCode, object userState) {
            if ((this.DeleteAsstManagerWorkplanLineOperationCompleted == null)) {
                this.DeleteAsstManagerWorkplanLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAsstManagerWorkplanLineOperationCompleted);
            }
            this.InvokeAsync("DeleteAsstManagerWorkplanLine", new object[] {
                        lineCode}, this.DeleteAsstManagerWorkplanLineOperationCompleted, userState);
        }
        
        private void OnDeleteAsstManagerWorkplanLineOperationCompleted(object arg) {
            if ((this.DeleteAsstManagerWorkplanLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAsstManagerWorkplanLineCompleted(this, new DeleteAsstManagerWorkplanLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:ModifyAsstManagerWo" +
            "rkplanLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="ModifyAsstManagerWorkplanLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ModifyAsstManagerWorkplanLine([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime completionDate, string userCode, decimal weightTotal, string performanceOutcome, string project, string performanceObjective, string headerNo, string perspective, string directorate, string deptObjective, string department) {
            object[] results = this.Invoke("ModifyAsstManagerWorkplanLine", new object[] {
                        completionDate,
                        userCode,
                        weightTotal,
                        performanceOutcome,
                        project,
                        performanceObjective,
                        headerNo,
                        perspective,
                        directorate,
                        deptObjective,
                        department});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyAsstManagerWorkplanLineAsync(System.DateTime completionDate, string userCode, decimal weightTotal, string performanceOutcome, string project, string performanceObjective, string headerNo, string perspective, string directorate, string deptObjective, string department) {
            this.ModifyAsstManagerWorkplanLineAsync(completionDate, userCode, weightTotal, performanceOutcome, project, performanceObjective, headerNo, perspective, directorate, deptObjective, department, null);
        }
        
        /// <remarks/>
        public void ModifyAsstManagerWorkplanLineAsync(System.DateTime completionDate, string userCode, decimal weightTotal, string performanceOutcome, string project, string performanceObjective, string headerNo, string perspective, string directorate, string deptObjective, string department, object userState) {
            if ((this.ModifyAsstManagerWorkplanLineOperationCompleted == null)) {
                this.ModifyAsstManagerWorkplanLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyAsstManagerWorkplanLineOperationCompleted);
            }
            this.InvokeAsync("ModifyAsstManagerWorkplanLine", new object[] {
                        completionDate,
                        userCode,
                        weightTotal,
                        performanceOutcome,
                        project,
                        performanceObjective,
                        headerNo,
                        perspective,
                        directorate,
                        deptObjective,
                        department}, this.ModifyAsstManagerWorkplanLineOperationCompleted, userState);
        }
        
        private void OnModifyAsstManagerWorkplanLineOperationCompleted(object arg) {
            if ((this.ModifyAsstManagerWorkplanLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyAsstManagerWorkplanLineCompleted(this, new ModifyAsstManagerWorkplanLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:CreateAppraisalHead" +
            "erMid", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="CreateAppraisalHeaderMid_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreateAppraisalHeaderMid(string usersId) {
            object[] results = this.Invoke("CreateAppraisalHeaderMid", new object[] {
                        usersId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAppraisalHeaderMidAsync(string usersId) {
            this.CreateAppraisalHeaderMidAsync(usersId, null);
        }
        
        /// <remarks/>
        public void CreateAppraisalHeaderMidAsync(string usersId, object userState) {
            if ((this.CreateAppraisalHeaderMidOperationCompleted == null)) {
                this.CreateAppraisalHeaderMidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAppraisalHeaderMidOperationCompleted);
            }
            this.InvokeAsync("CreateAppraisalHeaderMid", new object[] {
                        usersId}, this.CreateAppraisalHeaderMidOperationCompleted, userState);
        }
        
        private void OnCreateAppraisalHeaderMidOperationCompleted(object arg) {
            if ((this.CreateAppraisalHeaderMidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAppraisalHeaderMidCompleted(this, new CreateAppraisalHeaderMidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:ReturntoAppraisee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="ReturntoAppraisee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ReturntoAppraisee(string appraisalNo) {
            object[] results = this.Invoke("ReturntoAppraisee", new object[] {
                        appraisalNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ReturntoAppraiseeAsync(string appraisalNo) {
            this.ReturntoAppraiseeAsync(appraisalNo, null);
        }
        
        /// <remarks/>
        public void ReturntoAppraiseeAsync(string appraisalNo, object userState) {
            if ((this.ReturntoAppraiseeOperationCompleted == null)) {
                this.ReturntoAppraiseeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturntoAppraiseeOperationCompleted);
            }
            this.InvokeAsync("ReturntoAppraisee", new object[] {
                        appraisalNo}, this.ReturntoAppraiseeOperationCompleted, userState);
        }
        
        private void OnReturntoAppraiseeOperationCompleted(object arg) {
            if ((this.ReturntoAppraiseeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturntoAppraiseeCompleted(this, new ReturntoAppraiseeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:GetEmployeeName", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="GetEmployeeName_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetEmployeeName(string employeeNoa46) {
            object[] results = this.Invoke("GetEmployeeName", new object[] {
                        employeeNoa46});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeNameAsync(string employeeNoa46) {
            this.GetEmployeeNameAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void GetEmployeeNameAsync(string employeeNoa46, object userState) {
            if ((this.GetEmployeeNameOperationCompleted == null)) {
                this.GetEmployeeNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeNameOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeName", new object[] {
                        employeeNoa46}, this.GetEmployeeNameOperationCompleted, userState);
        }
        
        private void OnGetEmployeeNameOperationCompleted(object arg) {
            if ((this.GetEmployeeNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeNameCompleted(this, new GetEmployeeNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:SupervisorModifyApp" +
            "raiseePTMidYear", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="SupervisorModifyAppraiseePTMidYear_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SupervisorModifyAppraiseePTMidYear(int lineNo, decimal midYearSupervisorScore, string midYearSupervisorComm, decimal midyearAgreedScore) {
            object[] results = this.Invoke("SupervisorModifyAppraiseePTMidYear", new object[] {
                        lineNo,
                        midYearSupervisorScore,
                        midYearSupervisorComm,
                        midyearAgreedScore});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SupervisorModifyAppraiseePTMidYearAsync(int lineNo, decimal midYearSupervisorScore, string midYearSupervisorComm, decimal midyearAgreedScore) {
            this.SupervisorModifyAppraiseePTMidYearAsync(lineNo, midYearSupervisorScore, midYearSupervisorComm, midyearAgreedScore, null);
        }
        
        /// <remarks/>
        public void SupervisorModifyAppraiseePTMidYearAsync(int lineNo, decimal midYearSupervisorScore, string midYearSupervisorComm, decimal midyearAgreedScore, object userState) {
            if ((this.SupervisorModifyAppraiseePTMidYearOperationCompleted == null)) {
                this.SupervisorModifyAppraiseePTMidYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSupervisorModifyAppraiseePTMidYearOperationCompleted);
            }
            this.InvokeAsync("SupervisorModifyAppraiseePTMidYear", new object[] {
                        lineNo,
                        midYearSupervisorScore,
                        midYearSupervisorComm,
                        midyearAgreedScore}, this.SupervisorModifyAppraiseePTMidYearOperationCompleted, userState);
        }
        
        private void OnSupervisorModifyAppraiseePTMidYearOperationCompleted(object arg) {
            if ((this.SupervisorModifyAppraiseePTMidYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SupervisorModifyAppraiseePTMidYearCompleted(this, new SupervisorModifyAppraiseePTMidYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:ModifyAppraisalLine" +
            "MidYear", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="ModifyAppraisalLineMidYear_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ModifyAppraisalLineMidYear(int lineNo, string midAppraiseeComm, decimal midSelfScore) {
            object[] results = this.Invoke("ModifyAppraisalLineMidYear", new object[] {
                        lineNo,
                        midAppraiseeComm,
                        midSelfScore});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyAppraisalLineMidYearAsync(int lineNo, string midAppraiseeComm, decimal midSelfScore) {
            this.ModifyAppraisalLineMidYearAsync(lineNo, midAppraiseeComm, midSelfScore, null);
        }
        
        /// <remarks/>
        public void ModifyAppraisalLineMidYearAsync(int lineNo, string midAppraiseeComm, decimal midSelfScore, object userState) {
            if ((this.ModifyAppraisalLineMidYearOperationCompleted == null)) {
                this.ModifyAppraisalLineMidYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyAppraisalLineMidYearOperationCompleted);
            }
            this.InvokeAsync("ModifyAppraisalLineMidYear", new object[] {
                        lineNo,
                        midAppraiseeComm,
                        midSelfScore}, this.ModifyAppraisalLineMidYearOperationCompleted, userState);
        }
        
        private void OnModifyAppraisalLineMidYearOperationCompleted(object arg) {
            if ((this.ModifyAppraisalLineMidYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyAppraisalLineMidYearCompleted(this, new ModifyAppraisalLineMidYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:AcceptResults", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="AcceptResults_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool AcceptResults(string appraisalNo) {
            object[] results = this.Invoke("AcceptResults", new object[] {
                        appraisalNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AcceptResultsAsync(string appraisalNo) {
            this.AcceptResultsAsync(appraisalNo, null);
        }
        
        /// <remarks/>
        public void AcceptResultsAsync(string appraisalNo, object userState) {
            if ((this.AcceptResultsOperationCompleted == null)) {
                this.AcceptResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptResultsOperationCompleted);
            }
            this.InvokeAsync("AcceptResults", new object[] {
                        appraisalNo}, this.AcceptResultsOperationCompleted, userState);
        }
        
        private void OnAcceptResultsOperationCompleted(object arg) {
            if ((this.AcceptResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcceptResultsCompleted(this, new AcceptResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:CreateAppraisalHead" +
            "erEnd", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="CreateAppraisalHeaderEnd_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreateAppraisalHeaderEnd(string usersId) {
            object[] results = this.Invoke("CreateAppraisalHeaderEnd", new object[] {
                        usersId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAppraisalHeaderEndAsync(string usersId) {
            this.CreateAppraisalHeaderEndAsync(usersId, null);
        }
        
        /// <remarks/>
        public void CreateAppraisalHeaderEndAsync(string usersId, object userState) {
            if ((this.CreateAppraisalHeaderEndOperationCompleted == null)) {
                this.CreateAppraisalHeaderEndOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAppraisalHeaderEndOperationCompleted);
            }
            this.InvokeAsync("CreateAppraisalHeaderEnd", new object[] {
                        usersId}, this.CreateAppraisalHeaderEndOperationCompleted, userState);
        }
        
        private void OnCreateAppraisalHeaderEndOperationCompleted(object arg) {
            if ((this.CreateAppraisalHeaderEndCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAppraisalHeaderEndCompleted(this, new CreateAppraisalHeaderEndCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:SendTargetToSupervi" +
            "sorEnd", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="SendTargetToSupervisorEnd_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SendTargetToSupervisorEnd(string staffNo) {
            object[] results = this.Invoke("SendTargetToSupervisorEnd", new object[] {
                        staffNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendTargetToSupervisorEndAsync(string staffNo) {
            this.SendTargetToSupervisorEndAsync(staffNo, null);
        }
        
        /// <remarks/>
        public void SendTargetToSupervisorEndAsync(string staffNo, object userState) {
            if ((this.SendTargetToSupervisorEndOperationCompleted == null)) {
                this.SendTargetToSupervisorEndOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTargetToSupervisorEndOperationCompleted);
            }
            this.InvokeAsync("SendTargetToSupervisorEnd", new object[] {
                        staffNo}, this.SendTargetToSupervisorEndOperationCompleted, userState);
        }
        
        private void OnSendTargetToSupervisorEndOperationCompleted(object arg) {
            if ((this.SendTargetToSupervisorEndCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTargetToSupervisorEndCompleted(this, new SendTargetToSupervisorEndCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:AppraiseStaffMidYea" +
            "r", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="AppraiseStaffMidYear_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AppraiseStaffMidYear(string documentNumber, string aUserId) {
            this.Invoke("AppraiseStaffMidYear", new object[] {
                        documentNumber,
                        aUserId});
        }
        
        /// <remarks/>
        public void AppraiseStaffMidYearAsync(string documentNumber, string aUserId) {
            this.AppraiseStaffMidYearAsync(documentNumber, aUserId, null);
        }
        
        /// <remarks/>
        public void AppraiseStaffMidYearAsync(string documentNumber, string aUserId, object userState) {
            if ((this.AppraiseStaffMidYearOperationCompleted == null)) {
                this.AppraiseStaffMidYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAppraiseStaffMidYearOperationCompleted);
            }
            this.InvokeAsync("AppraiseStaffMidYear", new object[] {
                        documentNumber,
                        aUserId}, this.AppraiseStaffMidYearOperationCompleted, userState);
        }
        
        private void OnAppraiseStaffMidYearOperationCompleted(object arg) {
            if ((this.AppraiseStaffMidYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AppraiseStaffMidYearCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:AssignAppraisersEnd" +
            "Year", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="AssignAppraisersEndYear_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool AssignAppraisersEndYear(string peerAppraiser, string customerAppraiser, string subordinateAppraiser, string appraisalNo) {
            object[] results = this.Invoke("AssignAppraisersEndYear", new object[] {
                        peerAppraiser,
                        customerAppraiser,
                        subordinateAppraiser,
                        appraisalNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AssignAppraisersEndYearAsync(string peerAppraiser, string customerAppraiser, string subordinateAppraiser, string appraisalNo) {
            this.AssignAppraisersEndYearAsync(peerAppraiser, customerAppraiser, subordinateAppraiser, appraisalNo, null);
        }
        
        /// <remarks/>
        public void AssignAppraisersEndYearAsync(string peerAppraiser, string customerAppraiser, string subordinateAppraiser, string appraisalNo, object userState) {
            if ((this.AssignAppraisersEndYearOperationCompleted == null)) {
                this.AssignAppraisersEndYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignAppraisersEndYearOperationCompleted);
            }
            this.InvokeAsync("AssignAppraisersEndYear", new object[] {
                        peerAppraiser,
                        customerAppraiser,
                        subordinateAppraiser,
                        appraisalNo}, this.AssignAppraisersEndYearOperationCompleted, userState);
        }
        
        private void OnAssignAppraisersEndYearOperationCompleted(object arg) {
            if ((this.AssignAppraisersEndYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignAppraisersEndYearCompleted(this, new AssignAppraisersEndYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:CreateAppealHeaderM" +
            "id", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="CreateAppealHeaderMid_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreateAppealHeaderMid(string usersId) {
            object[] results = this.Invoke("CreateAppealHeaderMid", new object[] {
                        usersId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAppealHeaderMidAsync(string usersId) {
            this.CreateAppealHeaderMidAsync(usersId, null);
        }
        
        /// <remarks/>
        public void CreateAppealHeaderMidAsync(string usersId, object userState) {
            if ((this.CreateAppealHeaderMidOperationCompleted == null)) {
                this.CreateAppealHeaderMidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAppealHeaderMidOperationCompleted);
            }
            this.InvokeAsync("CreateAppealHeaderMid", new object[] {
                        usersId}, this.CreateAppealHeaderMidOperationCompleted, userState);
        }
        
        private void OnCreateAppealHeaderMidOperationCompleted(object arg) {
            if ((this.CreateAppealHeaderMidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAppealHeaderMidCompleted(this, new CreateAppealHeaderMidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:CreateAppealHeaderE" +
            "nd", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="CreateAppealHeaderEnd_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreateAppealHeaderEnd(string usersId, string appealReason) {
            object[] results = this.Invoke("CreateAppealHeaderEnd", new object[] {
                        usersId,
                        appealReason});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAppealHeaderEndAsync(string usersId, string appealReason) {
            this.CreateAppealHeaderEndAsync(usersId, appealReason, null);
        }
        
        /// <remarks/>
        public void CreateAppealHeaderEndAsync(string usersId, string appealReason, object userState) {
            if ((this.CreateAppealHeaderEndOperationCompleted == null)) {
                this.CreateAppealHeaderEndOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAppealHeaderEndOperationCompleted);
            }
            this.InvokeAsync("CreateAppealHeaderEnd", new object[] {
                        usersId,
                        appealReason}, this.CreateAppealHeaderEndOperationCompleted, userState);
        }
        
        private void OnCreateAppealHeaderEndOperationCompleted(object arg) {
            if ((this.CreateAppealHeaderEndCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAppealHeaderEndCompleted(this, new CreateAppealHeaderEndCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:DeclineResults", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="DeclineResults_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeclineResults(string appraisalNo, string reasonforDecline) {
            object[] results = this.Invoke("DeclineResults", new object[] {
                        appraisalNo,
                        reasonforDecline});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeclineResultsAsync(string appraisalNo, string reasonforDecline) {
            this.DeclineResultsAsync(appraisalNo, reasonforDecline, null);
        }
        
        /// <remarks/>
        public void DeclineResultsAsync(string appraisalNo, string reasonforDecline, object userState) {
            if ((this.DeclineResultsOperationCompleted == null)) {
                this.DeclineResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeclineResultsOperationCompleted);
            }
            this.InvokeAsync("DeclineResults", new object[] {
                        appraisalNo,
                        reasonforDecline}, this.DeclineResultsOperationCompleted, userState);
        }
        
        private void OnDeclineResultsOperationCompleted(object arg) {
            if ((this.DeclineResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeclineResultsCompleted(this, new DeclineResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement:DeclineResultsMidYr" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", ResponseElementName="DeclineResultsMidYr_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PerformanceManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeclineResultsMidYr(string appraisalNo, string reasonforDecline) {
            object[] results = this.Invoke("DeclineResultsMidYr", new object[] {
                        appraisalNo,
                        reasonforDecline});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeclineResultsMidYrAsync(string appraisalNo, string reasonforDecline) {
            this.DeclineResultsMidYrAsync(appraisalNo, reasonforDecline, null);
        }
        
        /// <remarks/>
        public void DeclineResultsMidYrAsync(string appraisalNo, string reasonforDecline, object userState) {
            if ((this.DeclineResultsMidYrOperationCompleted == null)) {
                this.DeclineResultsMidYrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeclineResultsMidYrOperationCompleted);
            }
            this.InvokeAsync("DeclineResultsMidYr", new object[] {
                        appraisalNo,
                        reasonforDecline}, this.DeclineResultsMidYrOperationCompleted, userState);
        }
        
        private void OnDeclineResultsMidYrOperationCompleted(object arg) {
            if ((this.DeclineResultsMidYrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeclineResultsMidYrCompleted(this, new DeclineResultsMidYrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertCeoWorkplanLinesCompletedEventHandler(object sender, InsertCeoWorkplanLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCeoWorkplanLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCeoWorkplanLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateCEOWorkPlanHeaderCompletedEventHandler(object sender, CreateCEOWorkPlanHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCEOWorkPlanHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCEOWorkPlanHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteCEOWorkPlanLineCompletedEventHandler(object sender, DeleteCEOWorkPlanLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCEOWorkPlanLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCEOWorkPlanLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ModifyCEOWPLCompletedEventHandler(object sender, ModifyCEOWPLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyCEOWPLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyCEOWPLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateDirectorWorkPlanHeaderCompletedEventHandler(object sender, CreateDirectorWorkPlanHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDirectorWorkPlanHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDirectorWorkPlanHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertDirectorWorkplanLinesCompletedEventHandler(object sender, InsertDirectorWorkplanLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDirectorWorkplanLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDirectorWorkplanLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteDirectorsWorkPlanLineCompletedEventHandler(object sender, DeleteDirectorsWorkPlanLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDirectorsWorkPlanLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDirectorsWorkPlanLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateManagerWorkPlanHeaderCompletedEventHandler(object sender, CreateManagerWorkPlanHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateManagerWorkPlanHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateManagerWorkPlanHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteManagerWorkplanLineCompletedEventHandler(object sender, DeleteManagerWorkplanLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteManagerWorkplanLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteManagerWorkplanLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateAsstManagerWorkPlanHeaderCompletedEventHandler(object sender, CreateAsstManagerWorkPlanHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAsstManagerWorkPlanHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAsstManagerWorkPlanHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateOfficerWorkPlanHeaderCompletedEventHandler(object sender, CreateOfficerWorkPlanHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOfficerWorkPlanHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOfficerWorkPlanHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateOfficerTargetsHeaderCompletedEventHandler(object sender, CreateOfficerTargetsHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOfficerTargetsHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOfficerTargetsHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendTargetsApprovalRequestCompletedEventHandler(object sender, SendTargetsApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendTargetsApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendTargetsApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ModifyTargetLineCompletedEventHandler(object sender, ModifyTargetLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyTargetLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyTargetLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ModifyAppraisalLineCompletedEventHandler(object sender, ModifyAppraisalLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyAppraisalLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyAppraisalLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ModifyCompetencyLineCompletedEventHandler(object sender, ModifyCompetencyLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyCompetencyLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyCompetencyLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendTargetToSupervisorCompletedEventHandler(object sender, SendTargetToSupervisorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendTargetToSupervisorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendTargetToSupervisorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SupervisorModifyAppraiseePTCompletedEventHandler(object sender, SupervisorModifyAppraiseePTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SupervisorModifyAppraiseePTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SupervisorModifyAppraiseePTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SupervisorModifyAppraiseeCCCompletedEventHandler(object sender, SupervisorModifyAppraiseeCCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SupervisorModifyAppraiseeCCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SupervisorModifyAppraiseeCCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ModifyPeerLineCompletedEventHandler(object sender, ModifyPeerLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyPeerLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyPeerLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ModifyCustomerLineCompletedEventHandler(object sender, ModifyCustomerLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyCustomerLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyCustomerLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ModifySubordinateLineCompletedEventHandler(object sender, ModifySubordinateLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifySubordinateLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifySubordinateLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AppraiseStaffCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ModifyDirectorWorkplanLineCompletedEventHandler(object sender, ModifyDirectorWorkplanLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyDirectorWorkplanLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyDirectorWorkplanLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AssignAppraisersCompletedEventHandler(object sender, AssignAppraisersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignAppraisersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignAppraisersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ModifyManagerWorkplanLineCompletedEventHandler(object sender, ModifyManagerWorkplanLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyManagerWorkplanLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyManagerWorkplanLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteAsstManagerWorkplanLineCompletedEventHandler(object sender, DeleteAsstManagerWorkplanLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAsstManagerWorkplanLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAsstManagerWorkplanLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ModifyAsstManagerWorkplanLineCompletedEventHandler(object sender, ModifyAsstManagerWorkplanLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyAsstManagerWorkplanLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyAsstManagerWorkplanLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateAppraisalHeaderMidCompletedEventHandler(object sender, CreateAppraisalHeaderMidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAppraisalHeaderMidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAppraisalHeaderMidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ReturntoAppraiseeCompletedEventHandler(object sender, ReturntoAppraiseeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturntoAppraiseeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturntoAppraiseeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEmployeeNameCompletedEventHandler(object sender, GetEmployeeNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SupervisorModifyAppraiseePTMidYearCompletedEventHandler(object sender, SupervisorModifyAppraiseePTMidYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SupervisorModifyAppraiseePTMidYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SupervisorModifyAppraiseePTMidYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ModifyAppraisalLineMidYearCompletedEventHandler(object sender, ModifyAppraisalLineMidYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyAppraisalLineMidYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyAppraisalLineMidYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AcceptResultsCompletedEventHandler(object sender, AcceptResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AcceptResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AcceptResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateAppraisalHeaderEndCompletedEventHandler(object sender, CreateAppraisalHeaderEndCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAppraisalHeaderEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAppraisalHeaderEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendTargetToSupervisorEndCompletedEventHandler(object sender, SendTargetToSupervisorEndCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendTargetToSupervisorEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendTargetToSupervisorEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AppraiseStaffMidYearCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AssignAppraisersEndYearCompletedEventHandler(object sender, AssignAppraisersEndYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignAppraisersEndYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignAppraisersEndYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateAppealHeaderMidCompletedEventHandler(object sender, CreateAppealHeaderMidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAppealHeaderMidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAppealHeaderMidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateAppealHeaderEndCompletedEventHandler(object sender, CreateAppealHeaderEndCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAppealHeaderEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAppealHeaderEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeclineResultsCompletedEventHandler(object sender, DeclineResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeclineResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeclineResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeclineResultsMidYrCompletedEventHandler(object sender, DeclineResultsMidYrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeclineResultsMidYrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeclineResultsMidYrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591