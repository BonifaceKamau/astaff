//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DynamicsNAV365_StaffPortal.EmployeeTrainingManagementWebServiceRef {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EmployeeTrainingManagementWS_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS")]
    public partial class EmployeeTrainingManagementWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CheckOpenTrainingNeedApplicationExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckTrainingNeedApplicationExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTrainingNeedApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrainingNeedApplicationStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyTrainingNeedApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckTrainingNeedApprovalWorkflowEnabledOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTrainingNeedApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelTrainingNeedApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOpenTrainingApplicationExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckTrainingApplicationExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTrainingApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrainingApplicationStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyTrainingApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckTrainingApplicationApprovalWorkflowEnabledOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTrainingApplicationApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelTrainingApplicationApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOpenTrainingEvaluationExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckTrainingEvaluationExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTrainingEvaluationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrainingEvaluationStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyTrainingEvaluationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckTrainingEvaluationApprovalWorkflowEnabledOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTrainingEvaluationApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelTrainingEvaluationApprovalRequestOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EmployeeTrainingManagementWS() {
            this.Url = "http://102.133.239.194:3032/Regent/WS/Regent%20Ltd/Codeunit/EmployeeTrainingManag" +
                "ementWS";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CheckOpenTrainingNeedApplicationExistsCompletedEventHandler CheckOpenTrainingNeedApplicationExistsCompleted;
        
        /// <remarks/>
        public event CheckTrainingNeedApplicationExistCompletedEventHandler CheckTrainingNeedApplicationExistCompleted;
        
        /// <remarks/>
        public event CreateTrainingNeedApplicationCompletedEventHandler CreateTrainingNeedApplicationCompleted;
        
        /// <remarks/>
        public event GetTrainingNeedApplicationStatusCompletedEventHandler GetTrainingNeedApplicationStatusCompleted;
        
        /// <remarks/>
        public event ModifyTrainingNeedApplicationCompletedEventHandler ModifyTrainingNeedApplicationCompleted;
        
        /// <remarks/>
        public event CheckTrainingNeedApprovalWorkflowEnabledCompletedEventHandler CheckTrainingNeedApprovalWorkflowEnabledCompleted;
        
        /// <remarks/>
        public event SendTrainingNeedApprovalRequestCompletedEventHandler SendTrainingNeedApprovalRequestCompleted;
        
        /// <remarks/>
        public event CancelTrainingNeedApprovalRequestCompletedEventHandler CancelTrainingNeedApprovalRequestCompleted;
        
        /// <remarks/>
        public event CheckOpenTrainingApplicationExistsCompletedEventHandler CheckOpenTrainingApplicationExistsCompleted;
        
        /// <remarks/>
        public event CheckTrainingApplicationExistCompletedEventHandler CheckTrainingApplicationExistCompleted;
        
        /// <remarks/>
        public event CreateTrainingApplicationCompletedEventHandler CreateTrainingApplicationCompleted;
        
        /// <remarks/>
        public event GetTrainingApplicationStatusCompletedEventHandler GetTrainingApplicationStatusCompleted;
        
        /// <remarks/>
        public event ModifyTrainingApplicationCompletedEventHandler ModifyTrainingApplicationCompleted;
        
        /// <remarks/>
        public event CheckTrainingApplicationApprovalWorkflowEnabledCompletedEventHandler CheckTrainingApplicationApprovalWorkflowEnabledCompleted;
        
        /// <remarks/>
        public event SendTrainingApplicationApprovalRequestCompletedEventHandler SendTrainingApplicationApprovalRequestCompleted;
        
        /// <remarks/>
        public event CancelTrainingApplicationApprovalRequestCompletedEventHandler CancelTrainingApplicationApprovalRequestCompleted;
        
        /// <remarks/>
        public event CheckOpenTrainingEvaluationExistsCompletedEventHandler CheckOpenTrainingEvaluationExistsCompleted;
        
        /// <remarks/>
        public event CheckTrainingEvaluationExistCompletedEventHandler CheckTrainingEvaluationExistCompleted;
        
        /// <remarks/>
        public event CreateTrainingEvaluationCompletedEventHandler CreateTrainingEvaluationCompleted;
        
        /// <remarks/>
        public event GetTrainingEvaluationStatusCompletedEventHandler GetTrainingEvaluationStatusCompleted;
        
        /// <remarks/>
        public event ModifyTrainingEvaluationCompletedEventHandler ModifyTrainingEvaluationCompleted;
        
        /// <remarks/>
        public event CheckTrainingEvaluationApprovalWorkflowEnabledCompletedEventHandler CheckTrainingEvaluationApprovalWorkflowEnabledCompleted;
        
        /// <remarks/>
        public event SendTrainingEvaluationApprovalRequestCompletedEventHandler SendTrainingEvaluationApprovalRequestCompleted;
        
        /// <remarks/>
        public event CancelTrainingEvaluationApprovalRequestCompletedEventHandler CancelTrainingEvaluationApprovalRequestCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:CheckOpenTra" +
            "iningNeedApplicationExists", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="CheckOpenTrainingNeedApplicationExists_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckOpenTrainingNeedApplicationExists(string employeeNoa46) {
            object[] results = this.Invoke("CheckOpenTrainingNeedApplicationExists", new object[] {
                        employeeNoa46});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckOpenTrainingNeedApplicationExistsAsync(string employeeNoa46) {
            this.CheckOpenTrainingNeedApplicationExistsAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void CheckOpenTrainingNeedApplicationExistsAsync(string employeeNoa46, object userState) {
            if ((this.CheckOpenTrainingNeedApplicationExistsOperationCompleted == null)) {
                this.CheckOpenTrainingNeedApplicationExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOpenTrainingNeedApplicationExistsOperationCompleted);
            }
            this.InvokeAsync("CheckOpenTrainingNeedApplicationExists", new object[] {
                        employeeNoa46}, this.CheckOpenTrainingNeedApplicationExistsOperationCompleted, userState);
        }
        
        private void OnCheckOpenTrainingNeedApplicationExistsOperationCompleted(object arg) {
            if ((this.CheckOpenTrainingNeedApplicationExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOpenTrainingNeedApplicationExistsCompleted(this, new CheckOpenTrainingNeedApplicationExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:CheckTrainin" +
            "gNeedApplicationExist", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="CheckTrainingNeedApplicationExist_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckTrainingNeedApplicationExist(string applicationNoa46, string employeeNoa46) {
            object[] results = this.Invoke("CheckTrainingNeedApplicationExist", new object[] {
                        applicationNoa46,
                        employeeNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckTrainingNeedApplicationExistAsync(string applicationNoa46, string employeeNoa46) {
            this.CheckTrainingNeedApplicationExistAsync(applicationNoa46, employeeNoa46, null);
        }
        
        /// <remarks/>
        public void CheckTrainingNeedApplicationExistAsync(string applicationNoa46, string employeeNoa46, object userState) {
            if ((this.CheckTrainingNeedApplicationExistOperationCompleted == null)) {
                this.CheckTrainingNeedApplicationExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckTrainingNeedApplicationExistOperationCompleted);
            }
            this.InvokeAsync("CheckTrainingNeedApplicationExist", new object[] {
                        applicationNoa46,
                        employeeNoa46}, this.CheckTrainingNeedApplicationExistOperationCompleted, userState);
        }
        
        private void OnCheckTrainingNeedApplicationExistOperationCompleted(object arg) {
            if ((this.CheckTrainingNeedApplicationExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckTrainingNeedApplicationExistCompleted(this, new CheckTrainingNeedApplicationExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:CreateTraini" +
            "ngNeedApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="CreateTrainingNeedApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreateTrainingNeedApplication(string employeeNoa46) {
            object[] results = this.Invoke("CreateTrainingNeedApplication", new object[] {
                        employeeNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTrainingNeedApplicationAsync(string employeeNoa46) {
            this.CreateTrainingNeedApplicationAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void CreateTrainingNeedApplicationAsync(string employeeNoa46, object userState) {
            if ((this.CreateTrainingNeedApplicationOperationCompleted == null)) {
                this.CreateTrainingNeedApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTrainingNeedApplicationOperationCompleted);
            }
            this.InvokeAsync("CreateTrainingNeedApplication", new object[] {
                        employeeNoa46}, this.CreateTrainingNeedApplicationOperationCompleted, userState);
        }
        
        private void OnCreateTrainingNeedApplicationOperationCompleted(object arg) {
            if ((this.CreateTrainingNeedApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTrainingNeedApplicationCompleted(this, new CreateTrainingNeedApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:GetTrainingN" +
            "eedApplicationStatus", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="GetTrainingNeedApplicationStatus_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetTrainingNeedApplicationStatus(string applicationNoa46) {
            object[] results = this.Invoke("GetTrainingNeedApplicationStatus", new object[] {
                        applicationNoa46});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrainingNeedApplicationStatusAsync(string applicationNoa46) {
            this.GetTrainingNeedApplicationStatusAsync(applicationNoa46, null);
        }
        
        /// <remarks/>
        public void GetTrainingNeedApplicationStatusAsync(string applicationNoa46, object userState) {
            if ((this.GetTrainingNeedApplicationStatusOperationCompleted == null)) {
                this.GetTrainingNeedApplicationStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrainingNeedApplicationStatusOperationCompleted);
            }
            this.InvokeAsync("GetTrainingNeedApplicationStatus", new object[] {
                        applicationNoa46}, this.GetTrainingNeedApplicationStatusOperationCompleted, userState);
        }
        
        private void OnGetTrainingNeedApplicationStatusOperationCompleted(object arg) {
            if ((this.GetTrainingNeedApplicationStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrainingNeedApplicationStatusCompleted(this, new GetTrainingNeedApplicationStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:ModifyTraini" +
            "ngNeedApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="ModifyTrainingNeedApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ModifyTrainingNeedApplication(string applicationNoa46, string calendarYear, string developmentNeed, string interventionRequired, string interventionRequireda40Othera41, string trainingType, string objective, string description, string proposedTrainingProvider, string proposedPeriod, decimal estimatedCost, string trainingLocationVenue, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime trainingScheduleDateFrom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime trainingScheduleDateTo, decimal cPDPointsToBeEarned) {
            object[] results = this.Invoke("ModifyTrainingNeedApplication", new object[] {
                        applicationNoa46,
                        calendarYear,
                        developmentNeed,
                        interventionRequired,
                        interventionRequireda40Othera41,
                        trainingType,
                        objective,
                        description,
                        proposedTrainingProvider,
                        proposedPeriod,
                        estimatedCost,
                        trainingLocationVenue,
                        trainingScheduleDateFrom,
                        trainingScheduleDateTo,
                        cPDPointsToBeEarned});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyTrainingNeedApplicationAsync(string applicationNoa46, string calendarYear, string developmentNeed, string interventionRequired, string interventionRequireda40Othera41, string trainingType, string objective, string description, string proposedTrainingProvider, string proposedPeriod, decimal estimatedCost, string trainingLocationVenue, System.DateTime trainingScheduleDateFrom, System.DateTime trainingScheduleDateTo, decimal cPDPointsToBeEarned) {
            this.ModifyTrainingNeedApplicationAsync(applicationNoa46, calendarYear, developmentNeed, interventionRequired, interventionRequireda40Othera41, trainingType, objective, description, proposedTrainingProvider, proposedPeriod, estimatedCost, trainingLocationVenue, trainingScheduleDateFrom, trainingScheduleDateTo, cPDPointsToBeEarned, null);
        }
        
        /// <remarks/>
        public void ModifyTrainingNeedApplicationAsync(
                    string applicationNoa46, 
                    string calendarYear, 
                    string developmentNeed, 
                    string interventionRequired, 
                    string interventionRequireda40Othera41, 
                    string trainingType, 
                    string objective, 
                    string description, 
                    string proposedTrainingProvider, 
                    string proposedPeriod, 
                    decimal estimatedCost, 
                    string trainingLocationVenue, 
                    System.DateTime trainingScheduleDateFrom, 
                    System.DateTime trainingScheduleDateTo, 
                    decimal cPDPointsToBeEarned, 
                    object userState) {
            if ((this.ModifyTrainingNeedApplicationOperationCompleted == null)) {
                this.ModifyTrainingNeedApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyTrainingNeedApplicationOperationCompleted);
            }
            this.InvokeAsync("ModifyTrainingNeedApplication", new object[] {
                        applicationNoa46,
                        calendarYear,
                        developmentNeed,
                        interventionRequired,
                        interventionRequireda40Othera41,
                        trainingType,
                        objective,
                        description,
                        proposedTrainingProvider,
                        proposedPeriod,
                        estimatedCost,
                        trainingLocationVenue,
                        trainingScheduleDateFrom,
                        trainingScheduleDateTo,
                        cPDPointsToBeEarned}, this.ModifyTrainingNeedApplicationOperationCompleted, userState);
        }
        
        private void OnModifyTrainingNeedApplicationOperationCompleted(object arg) {
            if ((this.ModifyTrainingNeedApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyTrainingNeedApplicationCompleted(this, new ModifyTrainingNeedApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:CheckTrainin" +
            "gNeedApprovalWorkflowEnabled", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="CheckTrainingNeedApprovalWorkflowEnabled_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckTrainingNeedApprovalWorkflowEnabled(string applicationNoa46) {
            object[] results = this.Invoke("CheckTrainingNeedApprovalWorkflowEnabled", new object[] {
                        applicationNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckTrainingNeedApprovalWorkflowEnabledAsync(string applicationNoa46) {
            this.CheckTrainingNeedApprovalWorkflowEnabledAsync(applicationNoa46, null);
        }
        
        /// <remarks/>
        public void CheckTrainingNeedApprovalWorkflowEnabledAsync(string applicationNoa46, object userState) {
            if ((this.CheckTrainingNeedApprovalWorkflowEnabledOperationCompleted == null)) {
                this.CheckTrainingNeedApprovalWorkflowEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckTrainingNeedApprovalWorkflowEnabledOperationCompleted);
            }
            this.InvokeAsync("CheckTrainingNeedApprovalWorkflowEnabled", new object[] {
                        applicationNoa46}, this.CheckTrainingNeedApprovalWorkflowEnabledOperationCompleted, userState);
        }
        
        private void OnCheckTrainingNeedApprovalWorkflowEnabledOperationCompleted(object arg) {
            if ((this.CheckTrainingNeedApprovalWorkflowEnabledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckTrainingNeedApprovalWorkflowEnabledCompleted(this, new CheckTrainingNeedApprovalWorkflowEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:SendTraining" +
            "NeedApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="SendTrainingNeedApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SendTrainingNeedApprovalRequest(string applicationNoa46) {
            object[] results = this.Invoke("SendTrainingNeedApprovalRequest", new object[] {
                        applicationNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendTrainingNeedApprovalRequestAsync(string applicationNoa46) {
            this.SendTrainingNeedApprovalRequestAsync(applicationNoa46, null);
        }
        
        /// <remarks/>
        public void SendTrainingNeedApprovalRequestAsync(string applicationNoa46, object userState) {
            if ((this.SendTrainingNeedApprovalRequestOperationCompleted == null)) {
                this.SendTrainingNeedApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTrainingNeedApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("SendTrainingNeedApprovalRequest", new object[] {
                        applicationNoa46}, this.SendTrainingNeedApprovalRequestOperationCompleted, userState);
        }
        
        private void OnSendTrainingNeedApprovalRequestOperationCompleted(object arg) {
            if ((this.SendTrainingNeedApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTrainingNeedApprovalRequestCompleted(this, new SendTrainingNeedApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:CancelTraini" +
            "ngNeedApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="CancelTrainingNeedApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CancelTrainingNeedApprovalRequest(string applicationNoa46) {
            object[] results = this.Invoke("CancelTrainingNeedApprovalRequest", new object[] {
                        applicationNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CancelTrainingNeedApprovalRequestAsync(string applicationNoa46) {
            this.CancelTrainingNeedApprovalRequestAsync(applicationNoa46, null);
        }
        
        /// <remarks/>
        public void CancelTrainingNeedApprovalRequestAsync(string applicationNoa46, object userState) {
            if ((this.CancelTrainingNeedApprovalRequestOperationCompleted == null)) {
                this.CancelTrainingNeedApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelTrainingNeedApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("CancelTrainingNeedApprovalRequest", new object[] {
                        applicationNoa46}, this.CancelTrainingNeedApprovalRequestOperationCompleted, userState);
        }
        
        private void OnCancelTrainingNeedApprovalRequestOperationCompleted(object arg) {
            if ((this.CancelTrainingNeedApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelTrainingNeedApprovalRequestCompleted(this, new CancelTrainingNeedApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:CheckOpenTra" +
            "iningApplicationExists", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="CheckOpenTrainingApplicationExists_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckOpenTrainingApplicationExists(string employeeNoa46) {
            object[] results = this.Invoke("CheckOpenTrainingApplicationExists", new object[] {
                        employeeNoa46});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckOpenTrainingApplicationExistsAsync(string employeeNoa46) {
            this.CheckOpenTrainingApplicationExistsAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void CheckOpenTrainingApplicationExistsAsync(string employeeNoa46, object userState) {
            if ((this.CheckOpenTrainingApplicationExistsOperationCompleted == null)) {
                this.CheckOpenTrainingApplicationExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOpenTrainingApplicationExistsOperationCompleted);
            }
            this.InvokeAsync("CheckOpenTrainingApplicationExists", new object[] {
                        employeeNoa46}, this.CheckOpenTrainingApplicationExistsOperationCompleted, userState);
        }
        
        private void OnCheckOpenTrainingApplicationExistsOperationCompleted(object arg) {
            if ((this.CheckOpenTrainingApplicationExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOpenTrainingApplicationExistsCompleted(this, new CheckOpenTrainingApplicationExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:CheckTrainin" +
            "gApplicationExist", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="CheckTrainingApplicationExist_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckTrainingApplicationExist(string applicationNoa46, string employeeNoa46) {
            object[] results = this.Invoke("CheckTrainingApplicationExist", new object[] {
                        applicationNoa46,
                        employeeNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckTrainingApplicationExistAsync(string applicationNoa46, string employeeNoa46) {
            this.CheckTrainingApplicationExistAsync(applicationNoa46, employeeNoa46, null);
        }
        
        /// <remarks/>
        public void CheckTrainingApplicationExistAsync(string applicationNoa46, string employeeNoa46, object userState) {
            if ((this.CheckTrainingApplicationExistOperationCompleted == null)) {
                this.CheckTrainingApplicationExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckTrainingApplicationExistOperationCompleted);
            }
            this.InvokeAsync("CheckTrainingApplicationExist", new object[] {
                        applicationNoa46,
                        employeeNoa46}, this.CheckTrainingApplicationExistOperationCompleted, userState);
        }
        
        private void OnCheckTrainingApplicationExistOperationCompleted(object arg) {
            if ((this.CheckTrainingApplicationExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckTrainingApplicationExistCompleted(this, new CheckTrainingApplicationExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:CreateTraini" +
            "ngApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="CreateTrainingApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateTrainingApplication(string employeeNoa46) {
            object[] results = this.Invoke("CreateTrainingApplication", new object[] {
                        employeeNoa46});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTrainingApplicationAsync(string employeeNoa46) {
            this.CreateTrainingApplicationAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void CreateTrainingApplicationAsync(string employeeNoa46, object userState) {
            if ((this.CreateTrainingApplicationOperationCompleted == null)) {
                this.CreateTrainingApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTrainingApplicationOperationCompleted);
            }
            this.InvokeAsync("CreateTrainingApplication", new object[] {
                        employeeNoa46}, this.CreateTrainingApplicationOperationCompleted, userState);
        }
        
        private void OnCreateTrainingApplicationOperationCompleted(object arg) {
            if ((this.CreateTrainingApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTrainingApplicationCompleted(this, new CreateTrainingApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:GetTrainingA" +
            "pplicationStatus", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="GetTrainingApplicationStatus_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetTrainingApplicationStatus(string applicationNoa46) {
            object[] results = this.Invoke("GetTrainingApplicationStatus", new object[] {
                        applicationNoa46});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrainingApplicationStatusAsync(string applicationNoa46) {
            this.GetTrainingApplicationStatusAsync(applicationNoa46, null);
        }
        
        /// <remarks/>
        public void GetTrainingApplicationStatusAsync(string applicationNoa46, object userState) {
            if ((this.GetTrainingApplicationStatusOperationCompleted == null)) {
                this.GetTrainingApplicationStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrainingApplicationStatusOperationCompleted);
            }
            this.InvokeAsync("GetTrainingApplicationStatus", new object[] {
                        applicationNoa46}, this.GetTrainingApplicationStatusOperationCompleted, userState);
        }
        
        private void OnGetTrainingApplicationStatusOperationCompleted(object arg) {
            if ((this.GetTrainingApplicationStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrainingApplicationStatusCompleted(this, new GetTrainingApplicationStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:ModifyTraini" +
            "ngApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="ModifyTrainingApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ModifyTrainingApplication(string applicationNoa46, string trainingNeedNoa46, string calendarYear, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime trainingStartDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime trainingEndDate, string description, string objectivea47PurposeOfTraining) {
            object[] results = this.Invoke("ModifyTrainingApplication", new object[] {
                        applicationNoa46,
                        trainingNeedNoa46,
                        calendarYear,
                        trainingStartDate,
                        trainingEndDate,
                        description,
                        objectivea47PurposeOfTraining});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyTrainingApplicationAsync(string applicationNoa46, string trainingNeedNoa46, string calendarYear, System.DateTime trainingStartDate, System.DateTime trainingEndDate, string description, string objectivea47PurposeOfTraining) {
            this.ModifyTrainingApplicationAsync(applicationNoa46, trainingNeedNoa46, calendarYear, trainingStartDate, trainingEndDate, description, objectivea47PurposeOfTraining, null);
        }
        
        /// <remarks/>
        public void ModifyTrainingApplicationAsync(string applicationNoa46, string trainingNeedNoa46, string calendarYear, System.DateTime trainingStartDate, System.DateTime trainingEndDate, string description, string objectivea47PurposeOfTraining, object userState) {
            if ((this.ModifyTrainingApplicationOperationCompleted == null)) {
                this.ModifyTrainingApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyTrainingApplicationOperationCompleted);
            }
            this.InvokeAsync("ModifyTrainingApplication", new object[] {
                        applicationNoa46,
                        trainingNeedNoa46,
                        calendarYear,
                        trainingStartDate,
                        trainingEndDate,
                        description,
                        objectivea47PurposeOfTraining}, this.ModifyTrainingApplicationOperationCompleted, userState);
        }
        
        private void OnModifyTrainingApplicationOperationCompleted(object arg) {
            if ((this.ModifyTrainingApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyTrainingApplicationCompleted(this, new ModifyTrainingApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:CheckTrainin" +
            "gApplicationApprovalWorkflowEnabled", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="CheckTrainingApplicationApprovalWorkflowEnabled_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckTrainingApplicationApprovalWorkflowEnabled(string applicationNoa46) {
            object[] results = this.Invoke("CheckTrainingApplicationApprovalWorkflowEnabled", new object[] {
                        applicationNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckTrainingApplicationApprovalWorkflowEnabledAsync(string applicationNoa46) {
            this.CheckTrainingApplicationApprovalWorkflowEnabledAsync(applicationNoa46, null);
        }
        
        /// <remarks/>
        public void CheckTrainingApplicationApprovalWorkflowEnabledAsync(string applicationNoa46, object userState) {
            if ((this.CheckTrainingApplicationApprovalWorkflowEnabledOperationCompleted == null)) {
                this.CheckTrainingApplicationApprovalWorkflowEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckTrainingApplicationApprovalWorkflowEnabledOperationCompleted);
            }
            this.InvokeAsync("CheckTrainingApplicationApprovalWorkflowEnabled", new object[] {
                        applicationNoa46}, this.CheckTrainingApplicationApprovalWorkflowEnabledOperationCompleted, userState);
        }
        
        private void OnCheckTrainingApplicationApprovalWorkflowEnabledOperationCompleted(object arg) {
            if ((this.CheckTrainingApplicationApprovalWorkflowEnabledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckTrainingApplicationApprovalWorkflowEnabledCompleted(this, new CheckTrainingApplicationApprovalWorkflowEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:SendTraining" +
            "ApplicationApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="SendTrainingApplicationApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SendTrainingApplicationApprovalRequest(string applicationNoa46) {
            object[] results = this.Invoke("SendTrainingApplicationApprovalRequest", new object[] {
                        applicationNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendTrainingApplicationApprovalRequestAsync(string applicationNoa46) {
            this.SendTrainingApplicationApprovalRequestAsync(applicationNoa46, null);
        }
        
        /// <remarks/>
        public void SendTrainingApplicationApprovalRequestAsync(string applicationNoa46, object userState) {
            if ((this.SendTrainingApplicationApprovalRequestOperationCompleted == null)) {
                this.SendTrainingApplicationApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTrainingApplicationApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("SendTrainingApplicationApprovalRequest", new object[] {
                        applicationNoa46}, this.SendTrainingApplicationApprovalRequestOperationCompleted, userState);
        }
        
        private void OnSendTrainingApplicationApprovalRequestOperationCompleted(object arg) {
            if ((this.SendTrainingApplicationApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTrainingApplicationApprovalRequestCompleted(this, new SendTrainingApplicationApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:CancelTraini" +
            "ngApplicationApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="CancelTrainingApplicationApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CancelTrainingApplicationApprovalRequest(string applicationNoa46) {
            object[] results = this.Invoke("CancelTrainingApplicationApprovalRequest", new object[] {
                        applicationNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CancelTrainingApplicationApprovalRequestAsync(string applicationNoa46) {
            this.CancelTrainingApplicationApprovalRequestAsync(applicationNoa46, null);
        }
        
        /// <remarks/>
        public void CancelTrainingApplicationApprovalRequestAsync(string applicationNoa46, object userState) {
            if ((this.CancelTrainingApplicationApprovalRequestOperationCompleted == null)) {
                this.CancelTrainingApplicationApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelTrainingApplicationApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("CancelTrainingApplicationApprovalRequest", new object[] {
                        applicationNoa46}, this.CancelTrainingApplicationApprovalRequestOperationCompleted, userState);
        }
        
        private void OnCancelTrainingApplicationApprovalRequestOperationCompleted(object arg) {
            if ((this.CancelTrainingApplicationApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelTrainingApplicationApprovalRequestCompleted(this, new CancelTrainingApplicationApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:CheckOpenTra" +
            "iningEvaluationExists", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="CheckOpenTrainingEvaluationExists_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckOpenTrainingEvaluationExists(string employeeNoa46) {
            object[] results = this.Invoke("CheckOpenTrainingEvaluationExists", new object[] {
                        employeeNoa46});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckOpenTrainingEvaluationExistsAsync(string employeeNoa46) {
            this.CheckOpenTrainingEvaluationExistsAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void CheckOpenTrainingEvaluationExistsAsync(string employeeNoa46, object userState) {
            if ((this.CheckOpenTrainingEvaluationExistsOperationCompleted == null)) {
                this.CheckOpenTrainingEvaluationExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOpenTrainingEvaluationExistsOperationCompleted);
            }
            this.InvokeAsync("CheckOpenTrainingEvaluationExists", new object[] {
                        employeeNoa46}, this.CheckOpenTrainingEvaluationExistsOperationCompleted, userState);
        }
        
        private void OnCheckOpenTrainingEvaluationExistsOperationCompleted(object arg) {
            if ((this.CheckOpenTrainingEvaluationExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOpenTrainingEvaluationExistsCompleted(this, new CheckOpenTrainingEvaluationExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:CheckTrainin" +
            "gEvaluationExist", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="CheckTrainingEvaluationExist_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckTrainingEvaluationExist(string applicationNoa46, string employeeNoa46) {
            object[] results = this.Invoke("CheckTrainingEvaluationExist", new object[] {
                        applicationNoa46,
                        employeeNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckTrainingEvaluationExistAsync(string applicationNoa46, string employeeNoa46) {
            this.CheckTrainingEvaluationExistAsync(applicationNoa46, employeeNoa46, null);
        }
        
        /// <remarks/>
        public void CheckTrainingEvaluationExistAsync(string applicationNoa46, string employeeNoa46, object userState) {
            if ((this.CheckTrainingEvaluationExistOperationCompleted == null)) {
                this.CheckTrainingEvaluationExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckTrainingEvaluationExistOperationCompleted);
            }
            this.InvokeAsync("CheckTrainingEvaluationExist", new object[] {
                        applicationNoa46,
                        employeeNoa46}, this.CheckTrainingEvaluationExistOperationCompleted, userState);
        }
        
        private void OnCheckTrainingEvaluationExistOperationCompleted(object arg) {
            if ((this.CheckTrainingEvaluationExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckTrainingEvaluationExistCompleted(this, new CheckTrainingEvaluationExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:CreateTraini" +
            "ngEvaluation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="CreateTrainingEvaluation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreateTrainingEvaluation(string employeeNoa46) {
            object[] results = this.Invoke("CreateTrainingEvaluation", new object[] {
                        employeeNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTrainingEvaluationAsync(string employeeNoa46) {
            this.CreateTrainingEvaluationAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void CreateTrainingEvaluationAsync(string employeeNoa46, object userState) {
            if ((this.CreateTrainingEvaluationOperationCompleted == null)) {
                this.CreateTrainingEvaluationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTrainingEvaluationOperationCompleted);
            }
            this.InvokeAsync("CreateTrainingEvaluation", new object[] {
                        employeeNoa46}, this.CreateTrainingEvaluationOperationCompleted, userState);
        }
        
        private void OnCreateTrainingEvaluationOperationCompleted(object arg) {
            if ((this.CreateTrainingEvaluationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTrainingEvaluationCompleted(this, new CreateTrainingEvaluationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:GetTrainingE" +
            "valuationStatus", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="GetTrainingEvaluationStatus_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetTrainingEvaluationStatus(string applicationNoa46) {
            object[] results = this.Invoke("GetTrainingEvaluationStatus", new object[] {
                        applicationNoa46});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrainingEvaluationStatusAsync(string applicationNoa46) {
            this.GetTrainingEvaluationStatusAsync(applicationNoa46, null);
        }
        
        /// <remarks/>
        public void GetTrainingEvaluationStatusAsync(string applicationNoa46, object userState) {
            if ((this.GetTrainingEvaluationStatusOperationCompleted == null)) {
                this.GetTrainingEvaluationStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrainingEvaluationStatusOperationCompleted);
            }
            this.InvokeAsync("GetTrainingEvaluationStatus", new object[] {
                        applicationNoa46}, this.GetTrainingEvaluationStatusOperationCompleted, userState);
        }
        
        private void OnGetTrainingEvaluationStatusOperationCompleted(object arg) {
            if ((this.GetTrainingEvaluationStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrainingEvaluationStatusCompleted(this, new GetTrainingEvaluationStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:ModifyTraini" +
            "ngEvaluation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="ModifyTrainingEvaluation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ModifyTrainingEvaluation(string evaluationNoa46, string applicationNoa46, string comments, string a, string b, string c, string d, string e, string f, string g, string h, string i, string j) {
            object[] results = this.Invoke("ModifyTrainingEvaluation", new object[] {
                        evaluationNoa46,
                        applicationNoa46,
                        comments,
                        a,
                        b,
                        c,
                        d,
                        e,
                        f,
                        g,
                        h,
                        i,
                        j});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyTrainingEvaluationAsync(string evaluationNoa46, string applicationNoa46, string comments, string a, string b, string c, string d, string e, string f, string g, string h, string i, string j) {
            this.ModifyTrainingEvaluationAsync(evaluationNoa46, applicationNoa46, comments, a, b, c, d, e, f, g, h, i, j, null);
        }
        
        /// <remarks/>
        public void ModifyTrainingEvaluationAsync(string evaluationNoa46, string applicationNoa46, string comments, string a, string b, string c, string d, string e, string f, string g, string h, string i, string j, object userState) {
            if ((this.ModifyTrainingEvaluationOperationCompleted == null)) {
                this.ModifyTrainingEvaluationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyTrainingEvaluationOperationCompleted);
            }
            this.InvokeAsync("ModifyTrainingEvaluation", new object[] {
                        evaluationNoa46,
                        applicationNoa46,
                        comments,
                        a,
                        b,
                        c,
                        d,
                        e,
                        f,
                        g,
                        h,
                        i,
                        j}, this.ModifyTrainingEvaluationOperationCompleted, userState);
        }
        
        private void OnModifyTrainingEvaluationOperationCompleted(object arg) {
            if ((this.ModifyTrainingEvaluationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyTrainingEvaluationCompleted(this, new ModifyTrainingEvaluationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:CheckTrainin" +
            "gEvaluationApprovalWorkflowEnabled", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="CheckTrainingEvaluationApprovalWorkflowEnabled_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckTrainingEvaluationApprovalWorkflowEnabled(string evaluationNoa46) {
            object[] results = this.Invoke("CheckTrainingEvaluationApprovalWorkflowEnabled", new object[] {
                        evaluationNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckTrainingEvaluationApprovalWorkflowEnabledAsync(string evaluationNoa46) {
            this.CheckTrainingEvaluationApprovalWorkflowEnabledAsync(evaluationNoa46, null);
        }
        
        /// <remarks/>
        public void CheckTrainingEvaluationApprovalWorkflowEnabledAsync(string evaluationNoa46, object userState) {
            if ((this.CheckTrainingEvaluationApprovalWorkflowEnabledOperationCompleted == null)) {
                this.CheckTrainingEvaluationApprovalWorkflowEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckTrainingEvaluationApprovalWorkflowEnabledOperationCompleted);
            }
            this.InvokeAsync("CheckTrainingEvaluationApprovalWorkflowEnabled", new object[] {
                        evaluationNoa46}, this.CheckTrainingEvaluationApprovalWorkflowEnabledOperationCompleted, userState);
        }
        
        private void OnCheckTrainingEvaluationApprovalWorkflowEnabledOperationCompleted(object arg) {
            if ((this.CheckTrainingEvaluationApprovalWorkflowEnabledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckTrainingEvaluationApprovalWorkflowEnabledCompleted(this, new CheckTrainingEvaluationApprovalWorkflowEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:SendTraining" +
            "EvaluationApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="SendTrainingEvaluationApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SendTrainingEvaluationApprovalRequest(string evaluationNoa46) {
            object[] results = this.Invoke("SendTrainingEvaluationApprovalRequest", new object[] {
                        evaluationNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendTrainingEvaluationApprovalRequestAsync(string evaluationNoa46) {
            this.SendTrainingEvaluationApprovalRequestAsync(evaluationNoa46, null);
        }
        
        /// <remarks/>
        public void SendTrainingEvaluationApprovalRequestAsync(string evaluationNoa46, object userState) {
            if ((this.SendTrainingEvaluationApprovalRequestOperationCompleted == null)) {
                this.SendTrainingEvaluationApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTrainingEvaluationApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("SendTrainingEvaluationApprovalRequest", new object[] {
                        evaluationNoa46}, this.SendTrainingEvaluationApprovalRequestOperationCompleted, userState);
        }
        
        private void OnSendTrainingEvaluationApprovalRequestOperationCompleted(object arg) {
            if ((this.SendTrainingEvaluationApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTrainingEvaluationApprovalRequestCompleted(this, new SendTrainingEvaluationApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS:CancelTraini" +
            "ngEvaluationApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", ResponseElementName="CancelTrainingEvaluationApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/EmployeeTrainingManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CancelTrainingEvaluationApprovalRequest(string applicationNoa46) {
            object[] results = this.Invoke("CancelTrainingEvaluationApprovalRequest", new object[] {
                        applicationNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CancelTrainingEvaluationApprovalRequestAsync(string applicationNoa46) {
            this.CancelTrainingEvaluationApprovalRequestAsync(applicationNoa46, null);
        }
        
        /// <remarks/>
        public void CancelTrainingEvaluationApprovalRequestAsync(string applicationNoa46, object userState) {
            if ((this.CancelTrainingEvaluationApprovalRequestOperationCompleted == null)) {
                this.CancelTrainingEvaluationApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelTrainingEvaluationApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("CancelTrainingEvaluationApprovalRequest", new object[] {
                        applicationNoa46}, this.CancelTrainingEvaluationApprovalRequestOperationCompleted, userState);
        }
        
        private void OnCancelTrainingEvaluationApprovalRequestOperationCompleted(object arg) {
            if ((this.CancelTrainingEvaluationApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelTrainingEvaluationApprovalRequestCompleted(this, new CancelTrainingEvaluationApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckOpenTrainingNeedApplicationExistsCompletedEventHandler(object sender, CheckOpenTrainingNeedApplicationExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckOpenTrainingNeedApplicationExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckOpenTrainingNeedApplicationExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckTrainingNeedApplicationExistCompletedEventHandler(object sender, CheckTrainingNeedApplicationExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckTrainingNeedApplicationExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckTrainingNeedApplicationExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateTrainingNeedApplicationCompletedEventHandler(object sender, CreateTrainingNeedApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTrainingNeedApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTrainingNeedApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetTrainingNeedApplicationStatusCompletedEventHandler(object sender, GetTrainingNeedApplicationStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrainingNeedApplicationStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrainingNeedApplicationStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ModifyTrainingNeedApplicationCompletedEventHandler(object sender, ModifyTrainingNeedApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyTrainingNeedApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyTrainingNeedApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckTrainingNeedApprovalWorkflowEnabledCompletedEventHandler(object sender, CheckTrainingNeedApprovalWorkflowEnabledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckTrainingNeedApprovalWorkflowEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckTrainingNeedApprovalWorkflowEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendTrainingNeedApprovalRequestCompletedEventHandler(object sender, SendTrainingNeedApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendTrainingNeedApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendTrainingNeedApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelTrainingNeedApprovalRequestCompletedEventHandler(object sender, CancelTrainingNeedApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelTrainingNeedApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelTrainingNeedApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckOpenTrainingApplicationExistsCompletedEventHandler(object sender, CheckOpenTrainingApplicationExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckOpenTrainingApplicationExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckOpenTrainingApplicationExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckTrainingApplicationExistCompletedEventHandler(object sender, CheckTrainingApplicationExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckTrainingApplicationExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckTrainingApplicationExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateTrainingApplicationCompletedEventHandler(object sender, CreateTrainingApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTrainingApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTrainingApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetTrainingApplicationStatusCompletedEventHandler(object sender, GetTrainingApplicationStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrainingApplicationStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrainingApplicationStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ModifyTrainingApplicationCompletedEventHandler(object sender, ModifyTrainingApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyTrainingApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyTrainingApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckTrainingApplicationApprovalWorkflowEnabledCompletedEventHandler(object sender, CheckTrainingApplicationApprovalWorkflowEnabledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckTrainingApplicationApprovalWorkflowEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckTrainingApplicationApprovalWorkflowEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendTrainingApplicationApprovalRequestCompletedEventHandler(object sender, SendTrainingApplicationApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendTrainingApplicationApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendTrainingApplicationApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelTrainingApplicationApprovalRequestCompletedEventHandler(object sender, CancelTrainingApplicationApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelTrainingApplicationApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelTrainingApplicationApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckOpenTrainingEvaluationExistsCompletedEventHandler(object sender, CheckOpenTrainingEvaluationExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckOpenTrainingEvaluationExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckOpenTrainingEvaluationExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckTrainingEvaluationExistCompletedEventHandler(object sender, CheckTrainingEvaluationExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckTrainingEvaluationExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckTrainingEvaluationExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateTrainingEvaluationCompletedEventHandler(object sender, CreateTrainingEvaluationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTrainingEvaluationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTrainingEvaluationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetTrainingEvaluationStatusCompletedEventHandler(object sender, GetTrainingEvaluationStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrainingEvaluationStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrainingEvaluationStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ModifyTrainingEvaluationCompletedEventHandler(object sender, ModifyTrainingEvaluationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyTrainingEvaluationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyTrainingEvaluationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckTrainingEvaluationApprovalWorkflowEnabledCompletedEventHandler(object sender, CheckTrainingEvaluationApprovalWorkflowEnabledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckTrainingEvaluationApprovalWorkflowEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckTrainingEvaluationApprovalWorkflowEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendTrainingEvaluationApprovalRequestCompletedEventHandler(object sender, SendTrainingEvaluationApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendTrainingEvaluationApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendTrainingEvaluationApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelTrainingEvaluationApprovalRequestCompletedEventHandler(object sender, CancelTrainingEvaluationApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelTrainingEvaluationApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelTrainingEvaluationApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591