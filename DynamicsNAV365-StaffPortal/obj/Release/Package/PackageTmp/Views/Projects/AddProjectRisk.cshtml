@model DynamicsNAV365_StaffPortal.Models.ProjectManagement.ProjectRisksModel

@{
    ViewBag.Title = "Add Project Risk";
}
@{
    var Impact = new SelectList(
          new List<SelectListItem>
          {
              new SelectListItem {Text = "Low", Value = "Low"},
              new SelectListItem {Text = "Medium", Value = "Medium"},
              new SelectListItem {Text = "High", Value = "High"},

          }, "Value", "Text");

    var ScaleList = new SelectList(
         new List<SelectListItem>
         {
              new SelectListItem {Text = "1", Value = "1"},
              new SelectListItem {Text = "2", Value = "2"},
              new SelectListItem {Text = "3", Value = "3"},
              new SelectListItem {Text = "4", Value = "4"},
              new SelectListItem {Text = "5", Value = "5"},

         }, "Value", "Text");
}

<div class="wrapper row-offcanvas row-offcanvas-left">
    <!--Render Human Resource Sidebar-->
    @{Html.RenderAction("_ProjectManagementSidebar", "ProjectHome");}
    <aside class="right-side">
        <section class="content">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        @using (Html.BeginForm("AddProjectRisk", "Projects", FormMethod.Post, new { @class = "" }))
                        {
                            @Html.AntiForgeryToken()
                            @*@Html.HiddenFor(model => model.ProjectNo)*@
                            <div class="card-header" data-background-color="company_card">
                                <div class="row">
                                    <div class="col-md-4">
                                        <h4 class="title">Add Project Risk</h4>
                                    </div>
                                    <div class="col-md-3">
                                        @*<input type="submit" id="submitBtn" name="Command" value="Submit For Approval" class="btn btn-white btn-xs pull-right ladda-button" data-style="slide-right" data-background-color="green" />*@
                                        <input type="submit" id="submitBtn" name="Command" value="Save" class="btn btn-white btn-xs pull-right" data-style="slide-right" data-background-color="green" />

                                    </div>
                                    <div class="col-md-2">
                                        @*<input type="submit" formtarget="_blank" id="submitBtn" name="Command" value="View Attachment" class="btn btn-white btn-xs pull-right ladda-button" data-style="slide-right" data-background-color="login_card" />*@

                                    </div>
                                    <div class="col-md-3">
                                        @{
                                            string backUrl = "";
                                            backUrl = Url.Action("ProjectRisks", "Projects") + "?ProjectNo=" + Model.ProjectCode;
                                        }
                                        <a class="btn btn-danger btn-xs pull-right" href="@backUrl">
                                            <i class="fa fa-close"></i>
                                            Close
                                        </a>
                                    </div>
                                </div>
                            </div>
                            <div class="card-content">
                                @*@if (Model != null && Model.ErrorStatus == true)
                                    {
                                        <div class="alert alert-danger">
                                            <strong>Error! </strong>@Html.Raw(HttpUtility.HtmlDecode(Model.ErrorMessage))
                                        </div>
                                    }

                                    @Html.HiddenFor(model => model.EmployeeNo)*@

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group label-floating">
                                            @Html.LabelFor(model => model.ProjectCode, htmlAttributes: new { @id = "ProjectCodeLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.ProjectCode, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.ProjectCode, "", new { @id = "ProjectCodeError", @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group label-floating">
                                            @Html.LabelFor(model => model.RiskDescription, htmlAttributes: new { @id = "RiskDescriptionLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.RiskDescription, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.RiskDescription, "", new { @id = "RiskDescriptionError", @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group label">
                                            @Html.LabelFor(model => model.ImpactDescription, htmlAttributes: new { @id = "ImpactDescriptionLbl", @class = "control-label" })
                                            @Html.DropDownListFor(model => model.ImpactDescription,Impact,"--Select--", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.ImpactDescription, "", new { @id = "ImpactDescriptionError", @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group label">
                                            @Html.LabelFor(model => model.ImpactLevel, htmlAttributes: new { @id = "ImpactLevelLbl", @class = "control-label" }) 
                                            @*@Html.DropDownListFor(model => model.EndYearSelfScore, MarksListpt, new { @class = "form-control", @id = "EndYearSelfScoreItem" })*@                                            
                                             @Html.DropDownListFor(model => model.ImpactLevel,ScaleList, "--Select--", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.ImpactLevel, "", new { @id = "ImpactLevelError", @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group label">
                                            @Html.LabelFor(model => model.ProbabilityLevel, htmlAttributes: new { @id = "ProbabilityLevelLbl", @class = "control-label" })
                                            @Html.DropDownListFor(model => model.ProbabilityLevel, ScaleList, "--Select--", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.ProbabilityLevel, "", new { @id = "ProbabilityLevelError", @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">                                   
                                    @*<div class="col-md-6">
                                        <div class="form-group label-static">
                                            @Html.LabelFor(model => model.PriorityLevel, htmlAttributes: new { @id = "PriorityLevelLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.PriorityLevel, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.PriorityLevel, "", new { @id = "PriorityLevelError", @class = "text-danger" })
                                        </div>
                                    </div>*@
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group label-floating">
                                            @Html.LabelFor(model => model.MitigationNotes, htmlAttributes: new { @id = "MitigationNotesLbl", @class = "control-label" })                                         
                                            @Html.TextAreaFor(model => model.MitigationNotes,5,80,new { htmlAttributes = new {@class = "form-control"} })                                           
                                            @Html.ValidationMessageFor(model => model.MitigationNotes, "", new { @id = "MitigationNotesError", @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group label-floating">
                                            @Html.LabelFor(model => model.OwnerName, htmlAttributes: new { @id = "OwnerNameLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.OwnerName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.OwnerName, "", new { @id = "OwnerNameError", @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group label-floating">
                                            @Html.LabelFor(model => model.ObjectiveRelated, htmlAttributes: new { @id = "ObjectiveRelatedLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.ObjectiveRelated, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.ObjectiveRelated, "", new { @id = "ObjectiveRelatedError", @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.RiskStartDate, htmlAttributes: new { @id = "RiskStartDateLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.RiskStartDate, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @class = "form-control",@type="date"} })
                                            @Html.ValidationMessageFor(model => model.RiskStartDate, "", new { @id = "RiskStartDateError", @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.RiskEndDate, htmlAttributes: new { @id = "RiskEndDateLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.RiskEndDate, "{0:yyyy-MM-dd}",new { htmlAttributes = new { @class = "form-control",@type="date" } })
                                            @Html.ValidationMessageFor(model => model.RiskEndDate, "", new { @id = "RiskEndDateError", @class = "text-danger" })
                                        </div>
                                    </div>

                                </div>

                            </div>
                        }

                    </div>
                </div>
            </div>
        </section>
    </aside>

</div>
@section scripts{
    <script src="~/Scripts/HumanResource/LeaveApplicationScripts/LeaveApplication.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            //Add CSS Classes
        	InitializeLeaveApplication();
        	var LeaveApplicationNo = $("#No").val();
        	LoadLeaveApplicationDocuments(LeaveApplicationNo);
        });
    </script>
}