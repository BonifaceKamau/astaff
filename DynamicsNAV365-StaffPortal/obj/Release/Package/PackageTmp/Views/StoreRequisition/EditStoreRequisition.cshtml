@model DynamicsNAV365_StaffPortal.Models.Inventory.StoreRequisition.StoreRequisitionHeaderModel

@{
	ViewBag.Title = "Edit Store Requisition";
}
<div class="wrapper row-offcanvas row-offcanvas-left">
    <!--Render Inventory Sidebar-->
    @{Html.RenderAction("_ProcurementSidebar", "ProcurementHome");}
    <aside class="right-side">
        <section class="content">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        @using (Html.BeginForm("EditStoreRequisition", "StoreRequisition", FormMethod.Post, new { @class = "" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="card-header" data-background-color="company_card">
                                <div class="row">
                                    <div class="col-md-4">
                                        <h4 class="title"><i>Edit Store Requisition</i></h4>
                                    </div>
                                    <div class="col-md-3">
                                        <input type="submit" id="submitBtn" name="Command" value="Submit For Approval" class="btn btn-white btn-xs pull-right ladda-button" data-style="slide-right" data-background-color="green" />
                                    </div>
                                    <div class="col-md-2">
                                        <input type="submit" formtarget="_blank" id="submitBtn" name="Command" value="View Attachment" class="btn btn-white btn-xs pull-right ladda-button" data-style="slide-right" data-background-color="login_card" />
                                    </div>
                                    <div class="col-md-3">
                                        <a class="btn btn-danger btn-xs pull-right" href="@Url.Action("StoreRequisitionHistory", "StoreRequisition")">
                                            <i class="fa fa-close"></i>
                                            Close
                                        </a>
                                    </div>
                                </div>
                            </div>

                            <div class="card-content">
                                @if (Model != null && Model.ErrorStatus == true)
                                {
                                    <div class="alert alert-danger">
                                        <strong>Error! </strong>@Html.Raw(HttpUtility.HtmlDecode(Model.ErrorMessage))
                                    </div>
                                }
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.No, htmlAttributes: new { @id = "NoLbl", @class = "control-label" })
                                                    @Html.EditorFor(model => model.No, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                    @Html.ValidationMessageFor(model => model.No, "", new { @id = "NoError", @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.RequiredDate, htmlAttributes: new { @id = "RequiredDateLbl", @class = "control-label" })
                                                    @Html.EditorFor(model => model.RequiredDate, new { htmlAttributes = new { @class = "form-control" } })
                                                    @*@Html.EditorFor(model => model.RequiredDate, new { htmlAttributes = new { type = "hidden" } })*@
                                                    @Html.ValidationMessageFor(model => model.RequiredDate, "", new { @id = "RequiredDateError", @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="form-group label-floating">
                                                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @id = "DescriptionLbl", @class = "control-label" })
                                                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Description, "", new { @id = "DescriptionError", @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div classs="row">
                                                @*<div class="col-md-6">
                                                    <div class="form-group label-floating">
                                                        @Html.LabelFor(model => model.LocationCode, htmlAttributes: new { @id = "LineLocationCodeLbl", @class = "control-label" })
                                                        @Html.DropDownListFor(model => model.LocationCode, Model.LocationCodes, "", new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.LocationCode, "", new { @id = "LineLocationCodeError", @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group label-floating">
                                                        @Html.LabelFor(model => model.GlobalDimension2Code, htmlAttributes: new { @id = "LineLocationCodeLbl", @class = "control-label" })
                                                        @Html.DropDownListFor(model => model.GlobalDimension2Code, Model.GlobalDimension2Codes, "", new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.GlobalDimension2Code, "", new { @id = "LineLocationCodeError", @class = "text-danger" })
                                                    </div>
                                                </div>*@
                                            </div>
                                            
                                            @*<div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.GlobalDimension2Code, htmlAttributes: new { @id = "LineLocationCodeLbl", @class = "control-label" })
                                                    @Html.DropDownListFor(model => model.GlobalDimension2Code, Model.GlobalDimension2Codes, "", new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.GlobalDimension2Code, "", new { @id = "LineLocationCodeError", @class = "text-danger" })
                                                </div>
                                            </div>*@
                                            @*<div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.LocationCode, htmlAttributes: new { @id = "LineLocationCodeLbl", @class = "control-label" })
                                                    @Html.DropDownListFor(model => model.LocationCode, Model.LocationCodes, "", new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.LocationCode, "", new { @id = "LineLocationCodeError", @class = "text-danger" })
                                                </div>
                                            </div>*@
                                            @*<div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.facilityNo, htmlAttributes: new { @id = "LineLocationCodeLbl", @class = "control-label" })
                                                    @Html.DropDownListFor(model => model.facilityNo, Model.facilitySelect, "", new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.facilityNo, "", new { @id = "facilityNoError", @class = "text-danger" })
                                                </div>
                                            </div>*@
                                       
                                        <div class="col-md-12">
                                            <input type="button" class="btn btn-success btn-xs pull-right ladda-button" value="Update Header" onclick="UpdateHeader()" />
                                        </div>
                                    </div>
                                   
                                </div>
                            </div>

                        }
                        <div class="card-footer">
                            <div class="row">
                                <div class="col-md-12">
                                    <!--Render store requisition line partial view-->
                                    @{Html.RenderAction("_StoreRequisitionLine", "StoreRequisition", new { StoreRequisitionNo = Model.No });}
                                </div>
                                @*<div class="col-md-6">
                                    <ul class="nav nav-tabs">
                                        <li class="active"><a href="#">Required Documents</a></li>
                                    </ul>
                                    <br />
                                    <div class="row">
                                        <div class="col-md-12">
                                            @{Html.RenderAction("_StoreRequisitionDocument", "StoreRequisition", new { DocumentNo = Model.No });}
                                        </div>
                                    </div>
                                </div>*@
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-md-12">
                                    <div id="divAttachDocs"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </aside>
</div>
@*//////////////////////Modal View Doc////////////////////////////*@
<div class="modal fade" id="myModalAttachment" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content bg-white">
            <div class="modal-header">
                <h4 class="modal-title">Attachment</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modalAttachmentBody" style="width:100%;height:450px">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger waves-effect " data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@section scripts{
	<script src="~/Scripts/Inventory/StoreRequisitionScripts/StoreRequisition.js"></script>
	<script type="text/javascript">
        $(document).ready(function () {
            //Add CSS Classes
            $("#StoreRequisitionHistoryMenuItem").addClass("active");

            //Load dimensions
          //  LoadDimensionValues();


            var documentNo = $("#No").val();
            LoadStoreRequisitionLines(documentNo);
            LoadStoreRequisitionDocuments(documentNo);

            //Initialize Store Scripts
            InitializeStoreRequisition();


        });
        function UpdateHeader() {
            var No = $("#No").val();
            var Description = $("#Description").val();
            var GlobalDimension2Code = $("#GlobalDimension2Code").val();
            var LocationCode = $("#LocationCode").val();
           // var facilityNo = $("#facilityNo").val();


            $.ajax({
                type: "POST",
                url: "@Url.Action("UpdateHeader")",
                data: JSON.stringify({ No: No, Description: Description, GlobalDimension2Code: GlobalDimension2Code, LocationCode: LocationCode/*, facilityNo: facilityNo*/}),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    LoadStoreRequisitionLines(documentNo);
                    LoadStoreRequisitionDocuments(documentNo)
                    Swal.fire({
                        title: data.message,
                        //text: 'Do you want to continue',
                        icon: 'info',
                        confirmButtonText: 'Ok'
                    })

                    //window.alert(data.message);
                    //window.reload();
                }
            });
        }
	</script>
}