@model DynamicsNAV365_StaffPortal.Models.Finance.PettyCash.PettyCashLineModel

<div class="row">
	<div class="col-md-12" id="AddPettyCashLine" style="display:none">
		<button class="btn btn-primary btn-xs" type="button" data-toggle="modal" data-target="#PettyCashLineModal" onclick="ValidatePettyCashHeader();">
			<i class="fa fa-plus"></i>
			Add PettyCash Line
		</button><br />
        </div>
    <div class="col-md-12">
		<div id="TableContainer" class="table-responsive">
			<table id="PettyCashLineTbl" class="table table-striped table-bordered">
				<thead class="text-primary">
                    <tr>
                        <th>Account Type</th>
                        <th>Account No.</th>
                        <th>Transaction type</th>
                        <th>Account Name</th>
                        <th>LineDescription</th>
                        <th>LineAmount</th>
                        <th>Region</th>
                        @*<th>Geography</th>
        <th>Component</th>
        <th>Intervention</th>
        <th>Program Area</th>
        <th>Beneficiary</th>
                <th>Action</th>*@
                    </tr>
				</thead>
				<tbody></tbody>
			</table>
		</div>
		<div id="PettyCashLineModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="PettyCashLineModalLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<button class="btn close" type="button" data-dismiss="modal"><i class="fa fa-close"></i></button>
						<h4 id="PettyCashLineModalLabel" class="modal-title">PettyCash Line</h4>
					</div>
                    <div class="modal-body">
                        @using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "PettyCashLineForm", @class = "" }))
                        {
                            @Html.AntiForgeryToken()

                            if (Model != null && Model.LineErrorStatus == true)
                            {
                                <div class="alert alert-danger">
                                    <strong>Error! </strong>@Html.Raw(HttpUtility.HtmlDecode(Model.LineErrorMessage))
                                </div>
                            }
                            @Html.HiddenFor(model => model.LineNo)
                            @Html.HiddenFor(model => model.DocumentNo)
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group label-floating">
                                        @Html.LabelFor(model => model.Dimension1, htmlAttributes: new { @id = "Dimension1Lbl", @class = "control-label" })
                                        @Html.DropDownListFor(model => model.Dimension1, Model.Dimension1s, "", new { @class = "form-control", @required="required" })
                                        @Html.ValidationMessageFor(model => model.Dimension1, "", new { @id = "Dimension1Error", @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group label-floating">
                                        @Html.LabelFor(model => model.Dimension2, htmlAttributes: new { @id = "Dimension2Lbl", @class = "control-label" })
                                        @Html.DropDownListFor(model => model.Dimension2, Model.Dimension2s, "", new { @class = "form-control", @required="required" })
                                        @Html.ValidationMessageFor(model => model.Dimension2, "", new { @id = "Dimension2Error", @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            @*<div class="col-md-4">
                <div class="form-group label-floating">
                    @Html.LabelFor(model => model.ImprestType, htmlAttributes: new { @id = "ImprestTypeLbl", @class = "control-label" })
                    @Html.DropDownListFor(model => model.ImprestType, Model.ImprestTypes, "", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ImprestType, "", new { @id = "ImprestTypeError", @class = "text-danger" })
                </div>
            </div>*@

                            @*<div class="col-md-4">
                <div class="form-group label-floating">
                    @Html.LabelFor(model => model.Dimension3, htmlAttributes: new { @id = "Dimension3Lbl", @class = "control-label" })
                    @Html.DropDownListFor(model => model.Dimension3, Model.Dimension3s, "", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Dimension3, "", new { @id = "Dimension3Error", @class = "text-danger" })
                </div>
            </div>*@

                            @*<div class="row">
            <div class="col-md-3">
                <div class="form-group label-floating">
                    @Html.LabelFor(model => model.Dimension4, htmlAttributes: new { @id = "Dimension4Lbl", @class = "control-label" })
                    @Html.DropDownListFor(model => model.Dimension4, Model.Dimension4s, "", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Dimension4, "", new { @id = "Dimension4Error", @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group label-floating">
                    @Html.LabelFor(model => model.Dimension5, htmlAttributes: new { @id = "Dimension5Lbl", @class = "control-label" })
                    @Html.DropDownListFor(model => model.Dimension5, Model.Dimension5s, "", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Dimension5, "", new { @id = "Dimension5Error", @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group label-floating">
                    @Html.LabelFor(model => model.Dimension6, htmlAttributes: new { @id = "Dimension6Lbl", @class = "control-label" })
                    @Html.DropDownListFor(model => model.Dimension6, Model.Dimension6s, "", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Dimension6, "", new { @id = "Dimension6Error", @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group label-floating">
                    @Html.LabelFor(model => model.Dimension7, htmlAttributes: new { @id = "Dimension7Lbl", @class = "control-label" })
                    @Html.DropDownListFor(model => model.Dimension7, Model.Dimension7s, "", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Dimension7, "", new { @id = "Dimension7Error", @class = "text-danger" })
                </div>
            </div>
            </div>*@
                            @*<hr>

            if (Model.PettyCashType == "Manager")   {
                <div class="col-md-12">
                    <div class="form-group label-floating">
                        <label class="control-label">Type</label>
                        <select class="form-control" name="requesttype" id="requesttype">
                            <option value="bank">Bank Account</option>
                            <option value="gl">G/L Account</option>
                        </select>
                    </div>
                </div>
            }
            else
            {
                <div class="col-md-12">
                    <div class="form-group label-floating">
                        <label class="control-label">Type</label>
                        <select class="form-control" name="requesttype" id="requesttype">0
                            <option value="gl">G/L Account</option>
                        </select>
                    </div>
                </div>
            }
            <hr>*@
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group label-floating">
                                        @Html.LabelFor(model => model.impresttransaction, htmlAttributes: new { @id = "impresttransactionLbl", @class = "control-label" })
                                        @Html.DropDownListFor(model => model.impresttransaction, Model.PettyCashLinesTypes, "", new { @class = "form-control" ,@onchange="UpdateLine(this)"})
                                        @Html.ValidationMessageFor(model => model.impresttransaction, "", new { @id = "impresttransactionError", @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group label-floating">
                                        @Html.LabelFor(model => model.ImprestCode, htmlAttributes: new { @id = "ImprestCodeLbl", @class = "control-label" })
                                        @Html.DropDownListFor(model => model.ImprestCode, Model.ImprestCodes, "", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ImprestCode, "", new { @id = "ImprestCodeError", @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group label-floating">
                                        @Html.LabelFor(model => model.LineDescription, htmlAttributes: new { @id = "LineDescriptionLbl", @class = "control-label" })
                                        @Html.EditorFor(model => model.LineDescription, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.LineDescription, "", new { @id = "LineDescriptionError", @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group label-static">
                                        @Html.LabelFor(model => model.LineAmount, htmlAttributes: new { @id = "LineAmountLbl", @class = "control-label" })
                                        @Html.EditorFor(model => model.LineAmount, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.LineAmount, "", new { @id = "LineAmountError", @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
					<div class="modal-footer">
						<button id="CreatePettyCashLineBtn" class="btn btn-xs btn-primary" type="button" onclick="CreatePettyCashLine();"><i class="fa fa-plus"></i>Add Line</button>
						<button id="ModifyPettyCashLineBtn" class="btn btn-xs btn-primary" type="button" onclick="ModifyPettyCashLine();"><i class="fa fa-adjust"></i>Update Line</button>
						<button class="btn btn-xs btn-danger" type="button" data-dismiss="modal"><i class="fa fa-close"></i>Cancel</button>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>



