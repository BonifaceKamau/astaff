@model DynamicsNAV365_StaffPortal.Models.PerformanceManagement.SupervisorAppraisalsModel

@{
    ViewBag.Title = "Edit Mid Year PT Appraisee Line";
}
@{
    var MarksList = new SelectList(
          new List<SelectListItem>
          {

            new SelectListItem {Text = "1", Value = "1"},
            new SelectListItem {Text = "2", Value = "2"},
            new SelectListItem {Text = "3", Value = "3"},
            new SelectListItem {Text = "4", Value = "4"},
            new SelectListItem {Text = "5", Value = "5"},
          }, "Value", "Text");
}
<div class="wrapper row-offcanvas row-offcanvas-left">
    <!--Render Human Resource Sidebar-->
    @{Html.RenderAction("_PerformanceManagementSidebar", "PerformanceHome");}
    <aside class="right-side">
        <section class="content">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        @using (Html.BeginForm("MidYearPTAppraiseeLine", "SupervisorAppraisals", FormMethod.Post, new { @class = "" }))
                        {
                            @Html.AntiForgeryToken()
                            @*@Html.HiddenFor(model => model.ProjectNo)*@
                            <div class="card-header" data-background-color="company_card">
                                <div class="row">
                                    <div class="col-md-1">
                                    </div>
                                    <div class="col-md-4">
                                        <h4 class="title"> Edit Record - Mid Year</h4>
                                    </div>
                                    <div class="col-md-2">
                                        @*<input type="submit" id="submitBtn" name="Command" value="Submit For Approval" class="btn btn-white btn-xs pull-right ladda-button" data-style="slide-right" data-background-color="green" />*@
                                        <input type="submit" id="submitBtn" name="Command" value="Save" class="btn btn-white btn-xs pull-right ladda-button" data-style="slide-right" data-background-color="green" />

                                    </div>
                                    <div class="col-md-2">
                                        @*<input type="submit" formtarget="_blank" id="submitBtn" name="Command" value="View Attachment" class="btn btn-white btn-xs pull-right ladda-button" data-style="slide-right" data-background-color="login_card" />*@

                                    </div>
                                    <div class="col-md-3">
                                        @{
                                            string backUrl = "";
                                            backUrl = Url.Action("SingleAppraiseeForm", "SupervisorAppraisals") + "?AppraisalNo=" + Model.AppraisalNo;
                                        }
                                        <a class="btn btn-danger btn-xs pull-right" href="@backUrl">
                                            <i class="fa fa-close"></i>
                                            Cancel
                                        </a>
                                    </div>
                                </div>
                            </div>
                            <div class="card-content">
                                <div class="row">
                                    @Html.HiddenFor(model => model.SupLineNo)
                                    @Html.HiddenFor(model => model.AppraisalNo)

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.TargetScore, htmlAttributes: new { @id = "TargetScorePTLbl", @class = "control-label" })
                                            @Html.EditorFor(model => model.TargetScore, new { htmlAttributes = new { @class = "form-control", @id = "TargetScoreItemPT", @readonly = "true" } })
                                            @Html.ValidationMessageFor(model => model.TargetScore, "", new { @id = "TargetScorePTError", @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.MidYrSupervisorScore, htmlAttributes: new { @id = "SupMidScoreLbl", @class = "control-label" })
                                                @Html.DropDownListFor(model => model.MidYrSupervisorScore, MarksList, "--Select--",new { @class = "form-control", @id = "MidSupItemPT"})
                                                @Html.ValidationMessageFor(model => model.MidYrSupervisorScore, "", new { @id = "SupScoreError", @class = "text-danger" })
                                            </div>
                                        </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.MidYrAgreedScore, htmlAttributes: new { @id = "MidYrAgreedScoreLbl", @class = "control-label" })
                                            @Html.DropDownListFor(model => model.MidYrAgreedScore, MarksList,"--Select--", new { @class = "form-control", @id = "MidAgreedSupItemPT" })
                                            @Html.ValidationMessageFor(model => model.MidYrAgreedScore, "", new { @id = "MidYrAgreedScoreError", @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-12">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.MidYrSupervisorComments, htmlAttributes: new { @id = "MidSupCommenteLbl", @class = "control-label" })
                                                @Html.EditorFor(model => model.MidYrSupervisorComments, new { htmlAttributes = new { @class = "form-control", @id = "MidSupCommentsItemPT" } })
                                                @Html.ValidationMessageFor(model => model.MidYrSupervisorComments, "", new { @id = "PTMyCommentsError", @class = "text-danger" })
                                            </div>
                                        </div>                                

                                </div>

                            </div>
                                            }

                    </div>
                </div>
            </div>
        </section>
    </aside>

</div>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
