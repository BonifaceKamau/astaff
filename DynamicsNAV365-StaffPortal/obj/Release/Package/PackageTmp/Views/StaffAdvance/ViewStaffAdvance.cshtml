@model DynamicsNAV365_StaffPortal.Models.Finance.StaffAdvance.RequestHeader

@{
    ViewBag.Title = "View Imprest Request";
}
<div class="wrapper row-offcanvas row-offcanvas-left">
    <!--Render Finance Sidebar-->
    @{ Html.RenderAction("_FinanceSidebar", "FinanceHome"); }
    <aside class="right-side">
        <section class="content">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        @using (Html.BeginForm("ViewStaffAdvance", "StaffAdvance", FormMethod.Post, new {@class = ""}))
                        {
                            @Html.AntiForgeryToken()
                            <div class="card-header" data-background-color="company_card">
                                <div class="row">
                                    <div class="col-md-4">
                                        <h4 class="title">
                                            <i>View Staff Advance Request</i>
                                        </h4>
                                    </div>
                                    <p>@Model.Status</p>
                                    @if (Model.Status == "Pending Approval")
                                    {
                                        <a class="btn btn-danger pull-right btn-xs" type="submit" href="@Url.Action("CancelRequest", "Imprest", new {no = Model.No, url = Url.Action("OpenStaffAdvance")})">
                                            <i class="fa fa-close"></i>
                                            Cancel request
                                        </a>
                                    }
                                    <div class="col-md-8">
                                        <a class="btn btn-danger pull-right btn-xs" type="submit" href="@Url.Action("OpenStaffAdvance")">
                                            <i class="fa fa-close"></i>
                                            Close
                                        </a>
                                    </div>
                                </div>
                            </div>
                            <div class="card-content">
                                @if (Model != null && Model.ErrorStatus == true)
                                {
                                    <div class="alert alert-danger">
                                        <strong>Error! </strong>@Html.Raw(HttpUtility.HtmlDecode(Model.ErrorMessage))
                                    </div>
                                }
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.No, htmlAttributes: new {@id = "NoLbl", @class = "control-label"})
                                                    @Html.EditorFor(model => model.No, new {htmlAttributes = new {@class = "form-control", @readonly = true}})
                                                    @Html.ValidationMessageFor(model => model.No, "", new {@id = "NoError", @class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.EmployeeNo, htmlAttributes: new {@id = "EmployeeNoLbl", @class = "control-label"})
                                                    @Html.EditorFor(model => model.EmployeeNo, new {htmlAttributes = new {@class = "form-control", @readonly = true}})
                                                    @Html.ValidationMessageFor(model => model.EmployeeNo, "", new {@id = "EmployeeNoError", @class = "text-danger"})
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.EmployeeName, htmlAttributes: new {@id = "EmployeeNameLbl", @class = "control-label"})
                                                    @Html.EditorFor(model => model.EmployeeName, new {htmlAttributes = new {@class = "form-control", @readonly = true}})
                                                    @Html.ValidationMessageFor(model => model.EmployeeName, "", new {@id = "EmployeeNameError", @class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.PurposeOfImprest, htmlAttributes: new {@id = "DescriptionLbl", @class = "control-label"})
                                                    @Html.EditorFor(model => model.PurposeOfImprest, new {htmlAttributes = new {@class = "form-control",}})
                                                    @Html.ValidationMessageFor(model => model.PurposeOfImprest, "", new {@id = "DescriptionError", @class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group label-static">
                                                    @Html.LabelFor(model => model.CreatePV, htmlAttributes: new {@id = "AmountLbl", @class = "control-label"})
                                                    @Html.EditorFor(model => model.CreatePV, new {htmlAttributes = new {@class = "form-control"}})
                                                    @Html.ValidationMessageFor(model => model.CreatePV, "", new {@id = "AmountError", @class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.GlobalDimension2Code, htmlAttributes: new {@id = "CommentsLbl", @class = "control-label"})
                                                    @Html.EditorFor(model => model.GlobalDimension2Code, new {htmlAttributes = new {@class = "form-control", @disabled = "disabled"}})
                                                    @Html.ValidationMessageFor(model => model.GlobalDimension2Code, "", new {@id = "CommentsError", @class = "text-danger"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="card-footer">
                            <div class="row">
                                <div class="col-md-12">
                                    <!--Render imprest line partial view-->
                                    @{ Html.RenderAction("_AdvanceLine", new {ImprestNo = Model.No}); }
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    @{Html.RenderAction("ApprovalCommentLines", "Imprest", new { documentNo = Model.No, documentType ="Request Header" });}
                                </div>
                            </div>
                            <hr/>
                            <div class="row">
                                <div class="col-md-12">
                                    <div id="divAttachDocs"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </aside>
</div>

@section scripts{
    <script src="~/Scripts/Finance/ImprestRequestScripts/ImprestRequest.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            //Add CSS Classes
            $("#ImprestRequestHistoryMenuItem").addClass("active");

        	//Load dimensions
            //LoadDimensionValues();

            var DocumentNo = $("#No").val();
            LoadImprestLines(DocumentNo);
            LoadImprestDocuments(DocumentNo);

        });
	</script>
}