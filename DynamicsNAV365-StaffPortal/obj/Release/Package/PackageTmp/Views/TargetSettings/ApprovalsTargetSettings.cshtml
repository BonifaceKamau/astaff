@model DynamicsNAV365_StaffPortal.Models.HumanResource.StaffTargetObjectives

@{
    ViewBag.title = "Workplan Header";
    var sentToSupervisor = Model.SentToSupervisor;
    var approvedBySupervisor = Model.ApprovedBySupervisor;
    var AcknowledgedbyStaff = Model.Acknowledged;
    var AcceptedbySupervisor = Model.AcceptedbySupervisor;
    var disabled = sentToSupervisor == false ? "disabled" : "";

    var currentUser = ViewBag.CurrentEmployee;
}

<div class="wrapper row-offcanvas row-offcanvas-left">
    @{ Html.RenderAction("_PerformanceSidebar", "TargetSettings"); }
    <aside class="right-side">
        <section class="content">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        @using (Html.BeginForm("NewTargetSetting", "TargetSettings", FormMethod.Post, new { @class = "" }))
                        {
                            @Html.AntiForgeryToken()
                          
                            <div class="card-header" data-background-color="company_card">
                                <div class="row">
                                    <div class="col-md-8">
                                        <h4 class="title">
                                            <i>Approve Target Settings</i>
                                        </h4>
                                    </div>
                                </div>
                               
                                    <div class="row">
                                        <div class="col-md-12 text-right">
                                                <a class="btn btn-danger btn-xs" href="@Url.Action("TargetSettingApprove", new { no = Model.Number })">
                                                    <i class="fa fa-mail-forward"></i>
                                                    Approve
                                                </a>
                                                <a class="btn btn-danger btn-xs" href="@Url.Action("TargetSettingReject", new { no = Model.Number })">
                                                    <i class="fa fa-tag"></i>
                                                    Reject
                                                </a>
                                            <a class="btn btn-danger btn-xs" href="@Url.Action("TargetSetting")">
                                                <i class="fa fa-close"></i> Close
                                            </a>
                                        </div>
                                    </div>
                            </div>



                            <div class="card-content">
                                @if (Model != null && Model.ErrorStatus == true)
                                {
                                    <div class="alert alert-danger">
                                        <strong>Error! </strong>@Html.Raw(HttpUtility.HtmlDecode(Model.errorMessage))
                                    </div>
                                }
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.Number, htmlAttributes: new { @id = "NoLbl", @class = "control-label" })
                                                    @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                    @Html.ValidationMessageFor(model => model.Number, "", new { @id = "NoError", @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.StaffName, "  Employee Name", htmlAttributes: new { @id = "EmployeeNameLbl", @class = "control-label" })
                                                    @Html.EditorFor(model => model.StaffName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                    @Html.ValidationMessageFor(model => model.StaffName, "", new { @id = "EmployeeNameError", @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">

                                            @Html.HiddenFor(model => model.StaffNo)
                                            @*@Html.HiddenFor(model => model.StaffName)*@

                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group label-static">
                                                    @Html.LabelFor(model => model.Period, htmlAttributes: new { @id = "GlobalDimension2CodeLbl", @class = "control-label" })
                                                        @Html.EditorFor(model => model.Period, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                    @Html.ValidationMessageFor(model => model.Period, "", new { @id = "GlobalDimension2CodeError", @class = "text-danger" })
                                                </div>
                                            </div>
                                            @if (sentToSupervisor == false)
                                            {
                                                <div class="col-md-6">
                                                    <div class="form-group label-static">
                                                        @Html.LabelFor(model => model.Staff, htmlAttributes: new { @id = "GlobalDimension2CodeLbl", @class = "control-label" })
                                                        @Html.DropDownListFor(model => model.Staff, Model?.EmpManagers, "", new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.Staff, "", new { @id = "GlobalDimension2CodeError", @class = "text-danger" })
                                                    </div>
                                                </div>
                                            }
                                            @if (sentToSupervisor == true)
                                            {
                                                <div class="col-md-6">
                                                    <div class="form-group label-static">
                                                        @Html.LabelFor(model => model.StaffNo, " Staff No", htmlAttributes: new { @id = "GlobalDimension2CodeLbl", @class = "control-label" })
                                                        @Html.EditorFor(model => model.StaffNo, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                        @Html.ValidationMessageFor(model => model.StaffNo, "", new { @id = "GlobalDimension2CodeError", @class = "text-danger" })
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                     
                                        @Html.HiddenFor(model => model.Number)
                                        @Html.HiddenFor(model => model.Supervisor)
                                         @if (AcceptedbySupervisor == false)
                                         {

                                                            <div class="col-md-12">
                                                                <input type="submit" class="btn btn-success btn-xs pull-right ladda-button" value="Save Header" />
                                                            </div>
                                         }

                                    </div>
                                </div>
                            </div>
                        }
                        <div class="card-footer">
                            <div class="row">
                                <div class="col-md-12">
                                    <!--Render imprest line partial view-->
                                    @{ Html.RenderAction("_TargetSettingLine", new { no = Model?.Number, period = Model.Period, editable = Model.SentToSupervisor == false }); }
                                </div>
                            </div>
                            <hr />
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </aside>
</div>
<div id="ApplicationDocumentModal" class="modal fade" role="dialog" aria-labelledby="ApplicationDocumentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button class="btn close" type="button" data-dismiss="modal">
                    <i class="fa fa-close"></i>
                </button>
                <h4 id="ApplicationDocumentModalLabel" class="modal-title" style="text-align:center">Upload Document</h4>
            </div>
            <div class="modal-body">

                @using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "ApplicationDocumentForm", @class = "" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="row">
                        <div class="col-md-12">
                            <div id="errorMessage" class="alert alert-info" role="alert">
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <input id="ImprestDocumentFile" style="width:560px;border:2px solid dashed;background-color:lightblue" type="file" name="files">
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/Scripts/Finance/ImprestRequestScripts/ImprestRequest.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {

        	//Initialize Imprest Scripts
            InitializeImprestRequest();

            var docNo = $("#No").val();

        });
        
        
	</script>
}