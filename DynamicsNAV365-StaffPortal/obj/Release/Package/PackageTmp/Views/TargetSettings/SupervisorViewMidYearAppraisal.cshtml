@model DynamicsNAV365_StaffPortal.Models.MidYearAppraisal
@{
    ViewBag.title = "MidYearAppraisal Header";
    var approvedBySupervisor = Model?.Approved_By_Supervisor;
    var approved  = approvedBySupervisor ==true?"Approved":"Not Approved";
}

<div class="wrapper row-offcanvas row-offcanvas-left">
    @{ Html.RenderAction("_PerformanceSidebar", "TargetSettings"); }
    <aside class="right-side">
        <section class="content">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        @using (Html.BeginForm("SupervisorViewMidYearAppraisal", "TargetSettings", FormMethod.Post, new { @class = "" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="card-header" data-background-color="company_card">
                                <div class="row">
                                    <div class="col-md-2">
                                        <h4 class="title">
                                            <i>View MidYear Appraisal</i>
                                        </h4>
                                    </div>
                                    <p>Approval Status: <span>@approved</span></p>
                                    <div class="col-md-2">
                                        <a class="btn btn-danger btn-xs pull-right" target="_blank" href="@Url.Action("MidYearCheckinForm", new {no = Model.No})">
                                            <i class="fa fa-file"></i>
                                            Mid Year Checkin Form
                                        </a>
                                    </div>
                                    @*@*<div class="col-md-2">
                        <a class="btn btn-danger btn-xs pull-right" href="@Url.Action("MidYearToSuperVisor", new { no = Model.No })">
                            <i class="fa fa-mail-forward"></i>
                            Send to Supervisor
                        </a>
                    </div>*@

                                    @*<a class="btn btn-danger btn-xs pull-right" href="@Url.Action("MidYearReject", new {no = Model.No})">
                        <i class="fa fa-remove"></i>
                        Reject
                    </a>*@
                                    @if (approvedBySupervisor == false)
                                    {
                                        <div class="col-md-2">

                                            <a class="btn btn-danger btn-xs pull-right" href="#" data-toggle="modal" data-target="#rejectionCommentsModal">
                                                <i class="fa fa-remove"></i>
                                                Reject
                                            </a>
                                        </div>
                                    }
                                    @if (approvedBySupervisor == false)
                                    {
                                        <div class="col-md-2">
                                            <a class="btn btn-danger btn-xs pull-right" href="@Url.Action("MidYearApprove", new {no = Model.No})">
                                                <i class="fa fa-tag"></i>
                                                Approve
                                            </a>
                                        </div>
                                    }
                                    <div class="col-md-2">
                                        <a class="btn btn-danger btn-xs pull-right" href="@Url.Action("SupervisorMidYearAppraisals")">
                                            <i class="fa fa-close"></i>
                                            Close
                                        </a>
                                    </div>
                                </div>
                            </div>
                            <div class="card-content">
                                @if (Model != null && Model.ErrorStatus == true)
                                {
                                    <div class="alert alert-danger">
                                        <strong>Error! </strong>@Html.Raw(HttpUtility.HtmlDecode(Model.errorMessage))
                                    </div>
                                }
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.No, htmlAttributes: new { @id = "NoLbl", @class = "control-label" })
                                                    @Html.EditorFor(model => model.No, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                    @Html.ValidationMessageFor(model => model.No, "", new { @id = "NoError", @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        @Html.HiddenFor(model => model.No)
                                        @Html.HiddenFor(model => model.Supervisor)
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.Staff_No, htmlAttributes: new { @id = "EmployeeNoLbl", @class = "control-label" })
                                                    @Html.EditorFor(model => model.Staff_No, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                    @Html.ValidationMessageFor(model => model.Staff_No, "", new { @id = "EmployeeNoError", @class = "text-danger" })
                                                </div>
                                            </div>
                                            @Html.HiddenFor(c => c.Staff_No)
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.Staff_Name, htmlAttributes: new { @id = "EmployeeNameLbl", @class = "control-label" })
                                                    @Html.EditorFor(model => model.Staff_Name, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                    @Html.ValidationMessageFor(model => model.Staff_Name, "", new { @id = "EmployeeNameError", @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group label-static">
                                                    @Html.LabelFor(model => model.Period, htmlAttributes: new { @id = "GlobalDimension2CodeLbl", @class = "control-label" })
                                                    @Html.DropDownListFor(model => model.Period, Model?.PeriodSelect, "", new { @class = "form-control", @readonly = true, required = "required" })
                                                    @Html.ValidationMessageFor(model => model.Period, "", new { @id = "GlobalDimension2CodeError", @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @id = "DescriptionLbl", @class = "control-label" })
                                                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                    @Html.ValidationMessageFor(model => model.Date, "", new { @id = "DescriptionError", @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.Employee_Comments, htmlAttributes: new { @id = "DescriptionLbl", @class = "control-label" })
                                                    @Html.EditorFor(model => model.Employee_Comments, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                    @Html.ValidationMessageFor(model => model.Employee_Comments, "", new { @id = "DescriptionError", @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group label-floating">
                                                    @Html.LabelFor(model => model.Supervisor_Comments, htmlAttributes: new { @id = "DescriptionLbl", @class = "control-label" })
                                                    @Html.EditorFor(model => model.Supervisor_Comments, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Supervisor_Comments, "", new { @id = "DescriptionError", @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        @if (!string.IsNullOrEmpty(Model.Supervisor_Rejection_Comments))
                                        {
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div class="form-group label-static">
                                                        @Html.LabelFor(model => model.Supervisor_Rejection_Comments, htmlAttributes: new { @id = "AmountLbl", @class = "control-label" })
                                                        @Html.EditorFor(model => model.Supervisor_Rejection_Comments, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        @if (approvedBySupervisor == false)
                                        {
                                            <div class="col-md-12">
                                                <input type="submit" class="btn btn-success btn-xs pull-right ladda-button" value="Save Header" />
                                            </div>
                                        }
                                        </div>
                                </div>
                            </div>
                        }
                        <div class="modal fade" id="rejectionCommentsModal" tabindex="-1" role="dialog" aria-labelledby="dateModalLabel" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="dateModalLabel">rejection Comment</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <input type="text" class="form-control" id="rejectionComments">
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                        <button type="button" class="btn btn-primary" onclick="Reject()">Reject</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            @{
                                bool editable = approvedBySupervisor == false;
                            }

                            <div class="row">
                                <div class="col-md-12">
                                    @{ Html.RenderAction("_MidYearLines", new { no = Model?.No, editable = editable, isSupervisor = true }); }
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    @{ Html.RenderAction("_MidYearConcernsLines", new { no = Model?.No, editable = editable, isSupervisor = true }); }
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    @{ Html.RenderAction("_MidYearAgreedActionsLines", new { no = Model?.No, editable = editable, isSupervisor = true }); }
                                </div>
                            </div>
                            <hr />
                        </div>

                    </div>
                </div>
            </div>
        </section>
    </aside>
</div>
<div id="ApplicationDocumentModal" class="modal fade" role="dialog" aria-labelledby="ApplicationDocumentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button class="btn close" type="button" data-dismiss="modal">
                    <i class="fa fa-close"></i>
                </button>
                <h4 id="ApplicationDocumentModalLabel" class="modal-title" style="text-align:center">check in agenda</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm(null, null, FormMethod.Post, new {@id = "ApplicationDocumentForm", @class = ""}))
                {
                    @Html.AntiForgeryToken()

                    <div class="row">
                        <div class="col-md-12">
                            <div id="errorMessage" class="alert alert-info" role="alert">
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <input id="ImprestDocumentFile" style="width:560px;border:2px solid dashed;background-color:lightblue" type="file" name="files">
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/Scripts/Finance/ImprestRequestScripts/ImprestRequest.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {

        	//Initialize Imprest Scripts
            InitializeImprestRequest();

            var docNo = $("#No").val();

        });

        /*function UpdateHeader() {
            var Description = $("#PurposeOfImprest").val();
            var CreatePV = $("#CreatePV").is(':checked')
            var GlobalDimension2Code = $("#GlobalDimension2Code").val();
            var DocNo = $("#No").val();

            $.ajax({
                type: "POST",
                url: "@Url.Action("UpdateHeader")",
                data: JSON.stringify({ Description: Description, CreatePV: CreatePV, GlobalDimension2Code: GlobalDimension2Code, DocNo: DocNo }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    LoadImprestLines(DocNo);
                    LoadImprestDocuments(DocNo);
                    Swal.fire({
                        title: data.message,
                        //text: 'Do you want to continue',
                        icon: 'info',
                        confirmButtonText: 'Ok'
                    })

                    //window.alert(data.message);
                    window.reload();
                }
            });
        }*/
        function Reject() {
            var rejectionComments = $('#rejectionComments').val();
        	if (rejectionComments.length<=0)
        	{
        		alert("please add rejection comment");
        		return false;
        	}
            var Url = '@Url.Action("MidYearReject", new {no = Model.No})' + '&rejectionComments=' + rejectionComments;
            window.location.href = Url;
            console.log(Url)
          }
        
        
	</script>
}